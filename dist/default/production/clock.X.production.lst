

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 30 19:51:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237                           
   238                           	psect	idataBANK0
   239     0DDC                     __pidataBANK0:
   240                           
   241                           ;initializer for RTC_display@Date
   242     0DDC  3444               	retlw	68
   243     0DDD  3441               	retlw	65
   244     0DDE  3454               	retlw	84
   245     0DDF  3445               	retlw	69
   246     0DE0  343A               	retlw	58
   247     0DE1  3420               	retlw	32
   248     0DE2  3430               	retlw	48
   249     0DE3  3430               	retlw	48
   250     0DE4  342F               	retlw	47
   251     0DE5  3430               	retlw	48
   252     0DE6  3430               	retlw	48
   253     0DE7  342F               	retlw	47
   254     0DE8  3432               	retlw	50
   255     0DE9  3430               	retlw	48
   256     0DEA  3430               	retlw	48
   257     0DEB  3430               	retlw	48
   258     0DEC  3400               	retlw	0
   259                           
   260                           ;initializer for RTC_display@Time
   261     0DED  3454               	retlw	84
   262     0DEE  3449               	retlw	73
   263     0DEF  344D               	retlw	77
   264     0DF0  3445               	retlw	69
   265     0DF1  343A               	retlw	58
   266     0DF2  3420               	retlw	32
   267     0DF3  3430               	retlw	48
   268     0DF4  3430               	retlw	48
   269     0DF5  343A               	retlw	58
   270     0DF6  3430               	retlw	48
   271     0DF7  3430               	retlw	48
   272     0DF8  343A               	retlw	58
   273     0DF9  3430               	retlw	48
   274     0DFA  3430               	retlw	48
   275     0DFB  3400               	retlw	0
   276                           
   277                           ;initializer for alarm_set@Alarm
   278     0DFC  3441               	retlw	65
   279     0DFD  344C               	retlw	76
   280     0DFE  343A               	retlw	58
   281     0DFF  3420               	retlw	32
   282     0E00  3430               	retlw	48
   283     0E01  3430               	retlw	48
   284     0E02  343A               	retlw	58
   285     0E03  3430               	retlw	48
   286     0E04  3430               	retlw	48
   287     0E05  343A               	retlw	58
   288     0E06  3430               	retlw	48
   289     0E07  3430               	retlw	48
   290     0E08  3400               	retlw	0
   291     0013                     _SSPBUF	set	19
   292     0014                     _SSPCON	set	20
   293     0032                     _RB2	set	50
   294     0031                     _RB1	set	49
   295     0030                     _RB0	set	48
   296     0033                     _RB3	set	51
   297     0059                     _INTF	set	89
   298     0041                     _RD1	set	65
   299     0045                     _RD5	set	69
   300     0044                     _RD4	set	68
   301     0043                     _RD3	set	67
   302     0042                     _RD2	set	66
   303     0040                     _RD0	set	64
   304     0095                     _WPUB	set	149
   305     008F                     _OSCCON	set	143
   306     0091                     _SSPCON2	set	145
   307     0094                     _SSPSTAT	set	148
   308     0093                     _SSPADD	set	147
   309     040F                     _nRBPU	set	1039
   310     048C                     _ACKEN	set	1164
   311     048D                     _ACKDT	set	1165
   312     048B                     _RCEN	set	1163
   313     048A                     _PEN	set	1162
   314     0489                     _RSEN	set	1161
   315     0488                     _SEN	set	1160
   316     0445                     _TRISD5	set	1093
   317     0444                     _TRISD4	set	1092
   318     0443                     _TRISD3	set	1091
   319     0442                     _TRISD2	set	1090
   320     0441                     _TRISD1	set	1089
   321     0440                     _TRISD0	set	1088
   322     0189                     _ANSELH	set	393
   323                           
   324                           	psect	strings
   325     0800                     __pstrings:
   326     0800                     stringtab:
   327     0800                     __stringtab:
   328                           
   329                           ;	String table - string pointers are 1 byte each
   330     0800  1BFF               	btfsc	btemp+1,7
   331     0801  280A               	ljmp	stringcode
   332     0802  1383               	bcf	3,7
   333     0803  187F               	btfsc	btemp+1,0
   334     0804  1783               	bsf	3,7
   335     0805  0800               	movf	0,w
   336     0806  0A84               	incf	4,f
   337     0807  1903               	skipnz
   338     0808  0AFF               	incf	btemp+1,f
   339     0809  0008               	return
   340     080A                     stringcode:
   341     080A                     stringdir:
   342     080A  3008               	movlw	high stringdir
   343     080B  008A               	movwf	10
   344     080C  0804               	movf	4,w
   345     080D  0A84               	incf	4,f
   346     080E  0782               	addwf	2,f
   347     080F                     __stringbase:
   348     080F  3400               	retlw	0
   349     0810                     __end_of__stringtab:
   350     0810                     STR_4:
   351     0810  344F               	retlw	79	;'O'
   352     0811  344E               	retlw	78	;'N'
   353     0812  3420               	retlw	32	;' '
   354     0813  3400               	retlw	0
   355     0814                     STR_1:
   356     0814  344F               	retlw	79	;'O'
   357     0815  3446               	retlw	70	;'F'
   358     0816  3446               	retlw	70	;'F'
   359     0817  3400               	retlw	0
   360     0818                     STR_3:
   361     0818  3420               	retlw	32	;' '
   362     0819  3420               	retlw	32	;' '
   363     081A  3400               	retlw	0
   364     081B                     STR_2:
   365     081B  344F               	retlw	79	;'O'
   366     081C  344E               	retlw	78	;'N'
   367     081D  3400               	retlw	0
   368     0818                     
   369                           	psect	cinit
   370     000F                     start_initialization:	
   371                           ; #config settings
   372                           
   373     000F                     __initialization:
   374                           
   375                           ; Initialize objects allocated to BANK0
   376     000F  1383               	bcf	3,7	;select IRP bank0
   377     0010  304D               	movlw	low (__pdataBANK0+45)
   378     0011  00FD               	movwf	btemp+-1
   379     0012  300D               	movlw	high __pidataBANK0
   380     0013  00FE               	movwf	btemp
   381     0014  30DC               	movlw	low __pidataBANK0
   382     0015  00FF               	movwf	btemp+1
   383     0016  3020               	movlw	low __pdataBANK0
   384     0017  0084               	movwf	4
   385     0018  120A  158A  250D  120A  118A  	fcall	init_ram0
   386                           
   387                           ; Clear objects allocated to BANK0
   388     001D  01DE               	clrf	__pbssBANK0& (0+127)
   389     001E  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   390     001F  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   391     0020  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   392     0021  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   393     0022  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   394     0023  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   395     0024  01E5               	clrf	(__pbssBANK0+7)& (0+127)
   396     0025  01E6               	clrf	(__pbssBANK0+8)& (0+127)
   397     0026  01E7               	clrf	(__pbssBANK0+9)& (0+127)
   398                           
   399                           ; Clear objects allocated to COMMON
   400     0027  01FB               	clrf	__pbssCOMMON& (0+127)
   401                           
   402                           ; Clear objects allocated to BITCOMMON
   403     0028  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   404     0029                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407     0029                     __end_of__initialization:
   408     0029  0183               	clrf	3
   409     002A  120A  118A  282D   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bitbssCOMMON
   412     03D0                     __pbitbssCOMMON:
   413     03D0                     _RS:
   414     03D0                     	ds	1
   415                           
   416                           	psect	bssCOMMON
   417     007B                     __pbssCOMMON:
   418     007B                     _i:
   419     007B                     	ds	1
   420                           
   421                           	psect	bssBANK0
   422     005E                     __pbssBANK0:
   423     005E                     _alarm_status:
   424     005E                     	ds	1
   425     005F                     _status_reg:
   426     005F                     	ds	1
   427     0060                     _alarm_hour:
   428     0060                     	ds	1
   429     0061                     _alarm_minute:
   430     0061                     	ds	1
   431     0062                     _year:
   432     0062                     	ds	1
   433     0063                     _month:
   434     0063                     	ds	1
   435     0064                     _m_day:
   436     0064                     	ds	1
   437     0065                     _hour:
   438     0065                     	ds	1
   439     0066                     _minute:
   440     0066                     	ds	1
   441     0067                     _second:
   442     0067                     	ds	1
   443                           
   444                           	psect	dataBANK0
   445     0020                     __pdataBANK0:
   446     0020                     RTC_display@Date:
   447     0020                     	ds	17
   448     0031                     RTC_display@Time:
   449     0031                     	ds	15
   450     0040                     alarm_set@Alarm:
   451     0040                     	ds	13
   452                           
   453                           	psect	inittext
   454     0D09                     init_fetch0:	
   455                           ;	Called with low address in FSR and high address in W
   456                           
   457     0D09  087E               	movf	btemp,w
   458     0D0A  008A               	movwf	10
   459     0D0B  087F               	movf	btemp+1,w
   460     0D0C  0082               	movwf	2
   461     0D0D                     init_ram0:	
   462                           ;Called with:
   463                           ;	high address of idata address in btemp 
   464                           ;	low address of idata address in btemp+1 
   465                           ;	low address of data in FSR
   466                           ;	high address + 1 of data in btemp-1
   467                           
   468     0D0D  120A  158A  2509  120A  158A  	fcall	init_fetch0
   469     0D12  0080               	movwf	0
   470     0D13  0A84               	incf	4,f
   471     0D14  0804               	movf	4,w
   472     0D15  067D               	xorwf	btemp+-1,w
   473     0D16  1903               	btfsc	3,2
   474     0D17  3400               	retlw	0
   475     0D18  0AFF               	incf	btemp+1,f
   476     0D19  1903               	btfsc	3,2
   477     0D1A  0AFE               	incf	btemp,f
   478     0D1B  2D0D               	goto	init_ram0
   479                           
   480                           	psect	cstackCOMMON
   481     0070                     __pcstackCOMMON:
   482     0070                     ?_debounce:
   483     0070                     ?_LCD_Write_Nibble:	
   484                           ; 1 bit 
   485                           
   486     0070                     ?_LCD_Cmd:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_LCD_PutC:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_LCD_Begin:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_EXT:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ??_EXT:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_I2C_Start:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_I2C_Repeated_Start:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_I2C_Stop:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_I2C_Write:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_I2C_Read:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_bcd_to_decimal:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_decimal_to_bcd:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ?_RTC_read:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_RTC_display:	
   526                           ; 1 bytes @ 0x0
   527                           
   528     0070                     ?_alarm_set:	
   529                           ; 1 bytes @ 0x0
   530                           
   531     0070                     ?_blink:	
   532                           ; 1 bytes @ 0x0
   533                           
   534     0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537                           
   538                           ; 1 bytes @ 0x0
   539     0070                     	ds	2
   540     0072                     ??_LCD_Write_Nibble:
   541     0072                     ??_I2C_Start:	
   542                           ; 1 bytes @ 0x2
   543                           
   544     0072                     ??_I2C_Repeated_Start:	
   545                           ; 1 bytes @ 0x2
   546                           
   547     0072                     ??_I2C_Stop:	
   548                           ; 1 bytes @ 0x2
   549                           
   550     0072                     ??_I2C_Write:	
   551                           ; 1 bytes @ 0x2
   552                           
   553     0072                     ??_I2C_Read:	
   554                           ; 1 bytes @ 0x2
   555                           
   556     0072                     ??_debounce:	
   557                           ; 1 bytes @ 0x2
   558                           
   559     0072                     ??_blink:	
   560                           ; 1 bytes @ 0x2
   561                           
   562     0072                     ?___bmul:	
   563                           ; 1 bytes @ 0x2
   564                           
   565     0072                     ?___awdiv:	
   566                           ; 1 bytes @ 0x2
   567                           
   568     0072                     ?___awmod:	
   569                           ; 2 bytes @ 0x2
   570                           
   571     0072                     ?___lldiv:	
   572                           ; 2 bytes @ 0x2
   573                           
   574     0072                     I2C_Write@i2c_data:	
   575                           ; 4 bytes @ 0x2
   576                           
   577     0072                     I2C_Read@ack:	
   578                           ; 1 bytes @ 0x2
   579                           
   580     0072                     ___bmul@multiplicand:	
   581                           ; 1 bytes @ 0x2
   582                           
   583     0072                     ___awdiv@divisor:	
   584                           ; 1 bytes @ 0x2
   585                           
   586     0072                     ___awmod@divisor:	
   587                           ; 2 bytes @ 0x2
   588                           
   589     0072                     ___lldiv@divisor:	
   590                           ; 2 bytes @ 0x2
   591                           
   592                           
   593                           ; 4 bytes @ 0x2
   594     0072                     	ds	1
   595     0073                     ??___bmul:
   596     0073                     LCD_Write_Nibble@n:	
   597                           ; 1 bytes @ 0x3
   598                           
   599     0073                     I2C_Read@_data:	
   600                           ; 1 bytes @ 0x3
   601                           
   602                           
   603                           ; 1 bytes @ 0x3
   604     0073                     	ds	1
   605     0074                     ??_LCD_Cmd:
   606     0074                     ??_LCD_PutC:	
   607                           ; 1 bytes @ 0x4
   608                           
   609     0074                     ?_LCD_Print:	
   610                           ; 1 bytes @ 0x4
   611                           
   612     0074                     ??_RTC_read:	
   613                           ; 1 bytes @ 0x4
   614                           
   615     0074                     debounce@count:	
   616                           ; 1 bytes @ 0x4
   617                           
   618     0074                     blink@j:	
   619                           ; 1 bytes @ 0x4
   620                           
   621     0074                     ___bmul@product:	
   622                           ; 1 bytes @ 0x4
   623                           
   624     0074                     LCD_Print@LCD_Str:	
   625                           ; 1 bytes @ 0x4
   626                           
   627     0074                     ___awdiv@dividend:	
   628                           ; 2 bytes @ 0x4
   629                           
   630     0074                     ___awmod@dividend:	
   631                           ; 2 bytes @ 0x4
   632                           
   633                           
   634                           ; 2 bytes @ 0x4
   635     0074                     	ds	1
   636     0075                     LCD_PutC@LCD_Char:
   637     0075                     debounce@i:	
   638                           ; 1 bytes @ 0x5
   639                           
   640     0075                     ___bmul@multiplier:	
   641                           ; 1 bytes @ 0x5
   642                           
   643                           
   644                           ; 1 bytes @ 0x5
   645     0075                     	ds	1
   646     0076                     ??_LCD_Print:
   647     0076                     ??_bcd_to_decimal:	
   648                           ; 1 bytes @ 0x6
   649                           
   650     0076                     ??___awdiv:	
   651                           ; 1 bytes @ 0x6
   652                           
   653     0076                     ??___awmod:	
   654                           ; 1 bytes @ 0x6
   655                           
   656     0076                     LCD_Cmd@Command:	
   657                           ; 1 bytes @ 0x6
   658                           
   659     0076                     ___lldiv@dividend:	
   660                           ; 1 bytes @ 0x6
   661                           
   662                           
   663                           ; 4 bytes @ 0x6
   664     0076                     	ds	1
   665     0077                     ?_LCD_Goto:
   666     0077                     ??_LCD_Begin:	
   667                           ; 1 bytes @ 0x7
   668                           
   669     0077                     LCD_Goto@row:	
   670                           ; 1 bytes @ 0x7
   671                           
   672     0077                     LCD_Print@i:	
   673                           ; 1 bytes @ 0x7
   674                           
   675     0077                     ___awmod@counter:	
   676                           ; 1 bytes @ 0x7
   677                           
   678                           
   679                           ; 1 bytes @ 0x7
   680     0077                     	ds	1
   681     0078                     ??_LCD_Goto:
   682     0078                     bcd_to_decimal@number:	
   683                           ; 1 bytes @ 0x8
   684                           
   685     0078                     ___awmod@sign:	
   686                           ; 1 bytes @ 0x8
   687                           
   688                           
   689                           ; 1 bytes @ 0x8
   690     0078                     	ds	1
   691     0079                     decimal_to_bcd@number:
   692                           
   693                           ; 1 bytes @ 0x9
   694     0079                     	ds	1
   695                           
   696                           	psect	cstackBANK0
   697     004D                     __pcstackBANK0:
   698     004D                     ??___lldiv:
   699     004D                     LCD_Goto@col:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     004D                     ___awdiv@counter:	
   703                           ; 1 bytes @ 0x0
   704                           
   705                           
   706                           ; 1 bytes @ 0x0
   707     004D                     	ds	1
   708     004E                     ___awdiv@sign:
   709     004E                     ___lldiv@quotient:	
   710                           ; 1 bytes @ 0x1
   711                           
   712                           
   713                           ; 4 bytes @ 0x1
   714     004E                     	ds	1
   715     004F                     ___awdiv@quotient:
   716                           
   717                           ; 2 bytes @ 0x2
   718     004F                     	ds	2
   719     0051                     ??_decimal_to_bcd:
   720     0051                     ??_RTC_display:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0051                     ??_alarm_set:	
   724                           ; 1 bytes @ 0x4
   725                           
   726     0051                     ?_edit:	
   727                           ; 1 bytes @ 0x4
   728                           
   729     0051                     edit@y:	
   730                           ; 1 bytes @ 0x4
   731                           
   732                           
   733                           ; 1 bytes @ 0x4
   734     0051                     	ds	1
   735     0052                     edit@parameter:
   736     0052                     ___lldiv@counter:	
   737                           ; 1 bytes @ 0x5
   738                           
   739                           
   740                           ; 1 bytes @ 0x5
   741     0052                     	ds	1
   742     0053                     ?_I2C_Init:
   743     0053                     ??_edit:	
   744                           ; 1 bytes @ 0x6
   745                           
   746     0053                     ?_on_off:	
   747                           ; 1 bytes @ 0x6
   748                           
   749     0053                     alarm_set@control_reg:	
   750                           ; 1 bytes @ 0x6
   751                           
   752     0053                     on_off@y:	
   753                           ; 1 bytes @ 0x6
   754                           
   755     0053                     I2C_Init@i2c_clk_freq:	
   756                           ; 1 bytes @ 0x6
   757                           
   758                           
   759                           ; 4 bytes @ 0x6
   760     0053                     	ds	1
   761     0054                     on_off@al:
   762                           
   763                           ; 1 bytes @ 0x7
   764     0054                     	ds	1
   765     0055                     ??_on_off:
   766                           
   767                           ; 1 bytes @ 0x8
   768     0055                     	ds	1
   769     0056                     edit@x:
   770                           
   771                           ; 1 bytes @ 0x9
   772     0056                     	ds	1
   773     0057                     ??_I2C_Init:
   774                           
   775                           ; 1 bytes @ 0xA
   776     0057                     	ds	1
   777     0058                     on_off@x:
   778                           
   779                           ; 1 bytes @ 0xB
   780     0058                     	ds	3
   781     005B                     ??_main:
   782                           
   783                           ; 1 bytes @ 0xE
   784     005B                     	ds	3
   785                           
   786                           	psect	maintext
   787     002D                     __pmaintext:	
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 312 in file "code.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : B00/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       3       0       0       0
   810 ;;      Totals:         0       3       0       0       0
   811 ;;Total ram usage:        3 bytes
   812 ;; Hardware stack levels required when called: 6
   813 ;; This function calls:
   814 ;;		_I2C_Init
   815 ;;		_I2C_Start
   816 ;;		_I2C_Stop
   817 ;;		_I2C_Write
   818 ;;		_LCD_Begin
   819 ;;		_RTC_display
   820 ;;		_RTC_read
   821 ;;		_alarm_set
   822 ;;		_debounce
   823 ;;		_decimal_to_bcd
   824 ;;		_edit
   825 ;;		_on_off
   826 ;; This function is called by:
   827 ;;		Startup code after reset
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831     002D                     _main:	
   832                           ;psect for function _main
   833                           
   834     002D                     l2367:	
   835                           ;incstack = 0
   836                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   837                           
   838                           
   839                           ;code.c: 314:   OSCCON = 0X70;
   840     002D  3070               	movlw	112
   841     002E  1683               	bsf	3,5	;RP0=1, select bank1
   842     002F  1303               	bcf	3,6	;RP1=0, select bank1
   843     0030  008F               	movwf	15	;volatile
   844     0031                     l2369:
   845                           
   846                           ;code.c: 315:   ANSELH = 0;
   847     0031  1683               	bsf	3,5	;RP0=1, select bank3
   848     0032  1703               	bsf	3,6	;RP1=1, select bank3
   849     0033  0189               	clrf	9	;volatile
   850     0034                     l2371:
   851                           
   852                           ;code.c: 317:   nRBPU = 0;
   853     0034  1683               	bsf	3,5	;RP0=1, select bank1
   854     0035  1303               	bcf	3,6	;RP1=0, select bank1
   855     0036  1381               	bcf	1,7	;volatile
   856     0037                     l2373:
   857                           
   858                           ;code.c: 318:   WPUB = 0x03;
   859     0037  3003               	movlw	3
   860     0038  0095               	movwf	21	;volatile
   861     0039                     l2375:
   862                           
   863                           ;code.c: 319:   RB3 = 0;
   864     0039  1283               	bcf	3,5	;RP0=0, select bank0
   865     003A  1303               	bcf	3,6	;RP1=0, select bank0
   866     003B  1186               	bcf	6,3	;volatile
   867     003C                     l2377:
   868                           
   869                           ;code.c: 321:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   870     003C  300B               	movlw	11
   871     003D  1283               	bcf	3,5	;RP0=0, select bank0
   872     003E  1303               	bcf	3,6	;RP1=0, select bank0
   873     003F  00DD               	movwf	??_main+2
   874     0040  3026               	movlw	38
   875     0041  00DC               	movwf	??_main+1
   876     0042  305D               	movlw	93
   877     0043  00DB               	movwf	??_main
   878     0044                     u3297:
   879     0044  0BDB               	decfsz	??_main,f
   880     0045  2844               	goto	u3297
   881     0046  0BDC               	decfsz	??_main+1,f
   882     0047  2844               	goto	u3297
   883     0048  0BDD               	decfsz	??_main+2,f
   884     0049  2844               	goto	u3297
   885     004A                     l2379:
   886                           
   887                           ;code.c: 323:   I2C_Init(100000);
   888     004A  3000               	movlw	0
   889     004B  1283               	bcf	3,5	;RP0=0, select bank0
   890     004C  1303               	bcf	3,6	;RP1=0, select bank0
   891     004D  00D6               	movwf	I2C_Init@i2c_clk_freq+3
   892     004E  3001               	movlw	1
   893     004F  00D5               	movwf	I2C_Init@i2c_clk_freq+2
   894     0050  3086               	movlw	134
   895     0051  00D4               	movwf	I2C_Init@i2c_clk_freq+1
   896     0052  30A0               	movlw	160
   897     0053  00D3               	movwf	I2C_Init@i2c_clk_freq
   898     0054  120A  158A  2609  120A  118A  	fcall	_I2C_Init
   899     0059                     l2381:
   900                           
   901                           ;code.c: 325:   LCD_Begin();
   902     0059  120A  118A  266A  120A  118A  	fcall	_LCD_Begin
   903     005E                     l2383:
   904                           
   905                           ;code.c: 329:     if(!RB0)
   906     005E  1283               	bcf	3,5	;RP0=0, select bank0
   907     005F  1303               	bcf	3,6	;RP1=0, select bank0
   908     0060  1806               	btfsc	6,0	;volatile
   909     0061  2863               	goto	u3191
   910     0062  2864               	goto	u3190
   911     0063                     u3191:
   912     0063  295A               	goto	l2407
   913     0064                     u3190:
   914     0064                     l2385:
   915                           
   916                           ;code.c: 330:     if(debounce())
   917     0064  120A  158A  255E  120A  118A  	fcall	_debounce
   918     0069  1C03               	btfss	3,0
   919     006A  286C               	goto	u3201
   920     006B  286D               	goto	u3200
   921     006C                     u3201:
   922     006C  295A               	goto	l2407
   923     006D                     u3200:
   924     006D                     l2387:
   925                           
   926                           ;code.c: 331:     {;code.c: 332:       i = 0;
   927     006D  01FB               	clrf	_i
   928     006E                     l2389:
   929                           
   930                           ;code.c: 333:       hour = edit(7, 1, hour);
   931     006E  1283               	bcf	3,5	;RP0=0, select bank0
   932     006F  1303               	bcf	3,6	;RP1=0, select bank0
   933     0070  01D1               	clrf	edit@y
   934     0071  0AD1               	incf	edit@y,f
   935     0072  0865               	movf	_hour,w
   936     0073  00D2               	movwf	edit@parameter
   937     0074  3007               	movlw	7
   938     0075  120A  118A  23AD  120A  118A  	fcall	_edit
   939     007A  1283               	bcf	3,5	;RP0=0, select bank0
   940     007B  1303               	bcf	3,6	;RP1=0, select bank0
   941     007C  00E5               	movwf	_hour
   942     007D                     l2391:
   943                           
   944                           ;code.c: 334:       minute = edit(10, 1, minute);
   945     007D  01D1               	clrf	edit@y
   946     007E  0AD1               	incf	edit@y,f
   947     007F  0866               	movf	_minute,w
   948     0080  00D2               	movwf	edit@parameter
   949     0081  300A               	movlw	10
   950     0082  120A  118A  23AD  120A  118A  	fcall	_edit
   951     0087  1283               	bcf	3,5	;RP0=0, select bank0
   952     0088  1303               	bcf	3,6	;RP1=0, select bank0
   953     0089  00E6               	movwf	_minute
   954     008A                     l2393:
   955                           
   956                           ;code.c: 335:       second = edit(13, 1, second);
   957     008A  01D1               	clrf	edit@y
   958     008B  0AD1               	incf	edit@y,f
   959     008C  0867               	movf	_second,w
   960     008D  00D2               	movwf	edit@parameter
   961     008E  300D               	movlw	13
   962     008F  120A  118A  23AD  120A  118A  	fcall	_edit
   963     0094  1283               	bcf	3,5	;RP0=0, select bank0
   964     0095  1303               	bcf	3,6	;RP1=0, select bank0
   965     0096  00E7               	movwf	_second
   966     0097                     l2395:
   967                           
   968                           ;code.c: 336:       m_day = edit(7, 2, m_day);
   969     0097  3002               	movlw	2
   970     0098  00D1               	movwf	edit@y
   971     0099  0864               	movf	_m_day,w
   972     009A  00D2               	movwf	edit@parameter
   973     009B  3007               	movlw	7
   974     009C  120A  118A  23AD  120A  118A  	fcall	_edit
   975     00A1  1283               	bcf	3,5	;RP0=0, select bank0
   976     00A2  1303               	bcf	3,6	;RP1=0, select bank0
   977     00A3  00E4               	movwf	_m_day
   978     00A4                     l2397:
   979                           
   980                           ;code.c: 337:       month = edit(10, 2, month);
   981     00A4  3002               	movlw	2
   982     00A5  00D1               	movwf	edit@y
   983     00A6  0863               	movf	_month,w
   984     00A7  00D2               	movwf	edit@parameter
   985     00A8  300A               	movlw	10
   986     00A9  120A  118A  23AD  120A  118A  	fcall	_edit
   987     00AE  1283               	bcf	3,5	;RP0=0, select bank0
   988     00AF  1303               	bcf	3,6	;RP1=0, select bank0
   989     00B0  00E3               	movwf	_month
   990     00B1                     l2399:
   991                           
   992                           ;code.c: 338:       year = edit(15, 2, year);
   993     00B1  3002               	movlw	2
   994     00B2  00D1               	movwf	edit@y
   995     00B3  0862               	movf	_year,w
   996     00B4  00D2               	movwf	edit@parameter
   997     00B5  300F               	movlw	15
   998     00B6  120A  118A  23AD  120A  118A  	fcall	_edit
   999     00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1000     00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1001     00BD  00E2               	movwf	_year
  1002     00BE                     l2401:	
  1003                           ;code.c: 340:       while(debounce());
  1004                           
  1005     00BE  120A  158A  255E  120A  118A  	fcall	_debounce
  1006     00C3  1803               	btfsc	3,0
  1007     00C4  28C6               	goto	u3211
  1008     00C5  28C7               	goto	u3210
  1009     00C6                     u3211:
  1010     00C6  28BE               	goto	l2401
  1011     00C7                     u3210:
  1012     00C7                     l2403:
  1013                           
  1014                           ;code.c: 343:       second = decimal_to_bcd(second);
  1015     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1016     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1017     00C9  0867               	movf	_second,w
  1018     00CA  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1019     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1020     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1021     00D1  00E7               	movwf	_second
  1022                           
  1023                           ;code.c: 344:       minute = decimal_to_bcd(minute);
  1024     00D2  0866               	movf	_minute,w
  1025     00D3  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1026     00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1027     00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1028     00DA  00E6               	movwf	_minute
  1029                           
  1030                           ;code.c: 345:       hour = decimal_to_bcd(hour);
  1031     00DB  0865               	movf	_hour,w
  1032     00DC  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1033     00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1034     00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1035     00E3  00E5               	movwf	_hour
  1036                           
  1037                           ;code.c: 346:       m_day = decimal_to_bcd(m_day);
  1038     00E4  0864               	movf	_m_day,w
  1039     00E5  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1040     00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1041     00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1042     00EC  00E4               	movwf	_m_day
  1043                           
  1044                           ;code.c: 347:       month = decimal_to_bcd(month);
  1045     00ED  0863               	movf	_month,w
  1046     00EE  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1047     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1048     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1049     00F5  00E3               	movwf	_month
  1050                           
  1051                           ;code.c: 348:       year = decimal_to_bcd(year);
  1052     00F6  0862               	movf	_year,w
  1053     00F7  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1054     00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1055     00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1056     00FE  00E2               	movwf	_year
  1057                           
  1058                           ;code.c: 352:       I2C_Start();
  1059     00FF  120A  158A  24CC  120A  118A  	fcall	_I2C_Start
  1060                           
  1061                           ;code.c: 353:       I2C_Write(0xD0);
  1062     0104  30D0               	movlw	208
  1063     0105  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1064                           
  1065                           ;code.c: 354:       I2C_Write(0);
  1066     010A  3000               	movlw	0
  1067     010B  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1068                           
  1069                           ;code.c: 355:       I2C_Write(second);
  1070     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1071     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1072     0112  0867               	movf	_second,w
  1073     0113  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1074                           
  1075                           ;code.c: 356:       I2C_Write(minute);
  1076     0118  1283               	bcf	3,5	;RP0=0, select bank0
  1077     0119  1303               	bcf	3,6	;RP1=0, select bank0
  1078     011A  0866               	movf	_minute,w
  1079     011B  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1080                           
  1081                           ;code.c: 357:       I2C_Write(hour);
  1082     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1083     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1084     0122  0865               	movf	_hour,w
  1085     0123  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1086                           
  1087                           ;code.c: 358:       I2C_Write(1);
  1088     0128  3001               	movlw	1
  1089     0129  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1090                           
  1091                           ;code.c: 359:       I2C_Write(m_day);
  1092     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1093     012F  1303               	bcf	3,6	;RP1=0, select bank0
  1094     0130  0864               	movf	_m_day,w
  1095     0131  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1096                           
  1097                           ;code.c: 360:       I2C_Write(month);
  1098     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1100     0138  0863               	movf	_month,w
  1101     0139  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1102                           
  1103                           ;code.c: 361:       I2C_Write(year);
  1104     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1105     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1106     0140  0862               	movf	_year,w
  1107     0141  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1108                           
  1109                           ;code.c: 362:       I2C_Stop();
  1110     0146  120A  158A  24DA  120A  118A  	fcall	_I2C_Stop
  1111     014B                     l2405:
  1112                           
  1113                           ;code.c: 364:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1114     014B  3003               	movlw	3
  1115     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1116     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1117     014E  00DD               	movwf	??_main+2
  1118     014F  3008               	movlw	8
  1119     0150  00DC               	movwf	??_main+1
  1120     0151  3076               	movlw	118
  1121     0152  00DB               	movwf	??_main
  1122     0153                     u3307:
  1123     0153  0BDB               	decfsz	??_main,f
  1124     0154  2953               	goto	u3307
  1125     0155  0BDC               	decfsz	??_main+1,f
  1126     0156  2953               	goto	u3307
  1127     0157  0BDD               	decfsz	??_main+2,f
  1128     0158  2953               	goto	u3307
  1129     0159  0000               	nop
  1130     015A                     l2407:
  1131                           
  1132                           ;code.c: 367:     if(!RB2)
  1133     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1134     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1135     015C  1906               	btfsc	6,2	;volatile
  1136     015D  295F               	goto	u3221
  1137     015E  2960               	goto	u3220
  1138     015F                     u3221:
  1139     015F  2A03               	goto	l2427
  1140     0160                     u3220:
  1141     0160                     l2409:
  1142                           
  1143                           ;code.c: 368:     if(debounce())
  1144     0160  120A  158A  255E  120A  118A  	fcall	_debounce
  1145     0165  1C03               	btfss	3,0
  1146     0166  2968               	goto	u3231
  1147     0167  2969               	goto	u3230
  1148     0168                     u3231:
  1149     0168  2A03               	goto	l2427
  1150     0169                     u3230:
  1151     0169                     l2411:
  1152                           
  1153                           ;code.c: 369:     {;code.c: 370:       i = 5;
  1154     0169  3005               	movlw	5
  1155     016A  00FB               	movwf	_i
  1156     016B                     l2413:
  1157                           
  1158                           ;code.c: 371:       alarm_hour = edit(5, 3, alarm_hour);
  1159     016B  3003               	movlw	3
  1160     016C  1283               	bcf	3,5	;RP0=0, select bank0
  1161     016D  1303               	bcf	3,6	;RP1=0, select bank0
  1162     016E  00D1               	movwf	edit@y
  1163     016F  0860               	movf	_alarm_hour,w
  1164     0170  00D2               	movwf	edit@parameter
  1165     0171  3005               	movlw	5
  1166     0172  120A  118A  23AD  120A  118A  	fcall	_edit
  1167     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1168     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1169     0179  00E0               	movwf	_alarm_hour
  1170     017A                     l2415:
  1171                           
  1172                           ;code.c: 372:       alarm_minute = edit(8, 3, alarm_minute);
  1173     017A  3003               	movlw	3
  1174     017B  00D1               	movwf	edit@y
  1175     017C  0861               	movf	_alarm_minute,w
  1176     017D  00D2               	movwf	edit@parameter
  1177     017E  3008               	movlw	8
  1178     017F  120A  118A  23AD  120A  118A  	fcall	_edit
  1179     0184  1283               	bcf	3,5	;RP0=0, select bank0
  1180     0185  1303               	bcf	3,6	;RP1=0, select bank0
  1181     0186  00E1               	movwf	_alarm_minute
  1182     0187                     l2417:
  1183                           
  1184                           ;code.c: 373:       alarm_status = on_off(18, 3, alarm_status);
  1185     0187  3003               	movlw	3
  1186     0188  00D3               	movwf	on_off@y
  1187     0189  085E               	movf	_alarm_status,w
  1188     018A  00D4               	movwf	on_off@al
  1189     018B  3012               	movlw	18
  1190     018C  120A  118A  25C1  120A  118A  	fcall	_on_off
  1191     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1192     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1193     0193  00DE               	movwf	_alarm_status
  1194     0194                     l2419:
  1195                           
  1196                           ;code.c: 374:       i = 5;
  1197     0194  3005               	movlw	5
  1198     0195  00FB               	movwf	_i
  1199     0196                     l2421:	
  1200                           ;code.c: 375:       while(debounce());
  1201                           
  1202     0196  120A  158A  255E  120A  118A  	fcall	_debounce
  1203     019B  1803               	btfsc	3,0
  1204     019C  299E               	goto	u3241
  1205     019D  299F               	goto	u3240
  1206     019E                     u3241:
  1207     019E  2996               	goto	l2421
  1208     019F                     u3240:
  1209     019F                     l2423:
  1210                           
  1211                           ;code.c: 377:       alarm_minute = decimal_to_bcd(alarm_minute);
  1212     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1213     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1214     01A1  0861               	movf	_alarm_minute,w
  1215     01A2  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1216     01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1217     01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1218     01A9  00E1               	movwf	_alarm_minute
  1219                           
  1220                           ;code.c: 378:       alarm_hour = decimal_to_bcd(alarm_hour);
  1221     01AA  0860               	movf	_alarm_hour,w
  1222     01AB  120A  118A  27CE  120A  118A  	fcall	_decimal_to_bcd
  1223     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1224     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1225     01B2  00E0               	movwf	_alarm_hour
  1226                           
  1227                           ;code.c: 381:       I2C_Start();
  1228     01B3  120A  158A  24CC  120A  118A  	fcall	_I2C_Start
  1229                           
  1230                           ;code.c: 382:       I2C_Write(0xD0);
  1231     01B8  30D0               	movlw	208
  1232     01B9  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1233                           
  1234                           ;code.c: 383:       I2C_Write(7);
  1235     01BE  3007               	movlw	7
  1236     01BF  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1237                           
  1238                           ;code.c: 384:       I2C_Write(0);
  1239     01C4  3000               	movlw	0
  1240     01C5  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1241                           
  1242                           ;code.c: 385:       I2C_Write(alarm_minute);
  1243     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1244     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1245     01CC  0861               	movf	_alarm_minute,w
  1246     01CD  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1247                           
  1248                           ;code.c: 386:       I2C_Write(alarm_hour);
  1249     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1250     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1251     01D4  0860               	movf	_alarm_hour,w
  1252     01D5  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1253                           
  1254                           ;code.c: 387:       I2C_Write(0x80);
  1255     01DA  3080               	movlw	128
  1256     01DB  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1257                           
  1258                           ;code.c: 388:       I2C_Write(4 | alarm_status);
  1259     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1260     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1261     01E2  085E               	movf	_alarm_status,w
  1262     01E3  3804               	iorlw	4
  1263     01E4  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1264                           
  1265                           ;code.c: 389:       I2C_Write(0);
  1266     01E9  3000               	movlw	0
  1267     01EA  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1268                           
  1269                           ;code.c: 390:       I2C_Stop();
  1270     01EF  120A  158A  24DA  120A  118A  	fcall	_I2C_Stop
  1271     01F4                     l2425:
  1272                           
  1273                           ;code.c: 391:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1274     01F4  3003               	movlw	3
  1275     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1276     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1277     01F7  00DD               	movwf	??_main+2
  1278     01F8  3008               	movlw	8
  1279     01F9  00DC               	movwf	??_main+1
  1280     01FA  3076               	movlw	118
  1281     01FB  00DB               	movwf	??_main
  1282     01FC                     u3317:
  1283     01FC  0BDB               	decfsz	??_main,f
  1284     01FD  29FC               	goto	u3317
  1285     01FE  0BDC               	decfsz	??_main+1,f
  1286     01FF  29FC               	goto	u3317
  1287     0200  0BDD               	decfsz	??_main+2,f
  1288     0201  29FC               	goto	u3317
  1289     0202  0000               	nop
  1290     0203                     l2427:
  1291                           
  1292                           ;code.c: 393:     if(!RB1 && RB3){
  1293     0203  1283               	bcf	3,5	;RP0=0, select bank0
  1294     0204  1303               	bcf	3,6	;RP1=0, select bank0
  1295     0205  1886               	btfsc	6,1	;volatile
  1296     0206  2A08               	goto	u3251
  1297     0207  2A09               	goto	u3250
  1298     0208                     u3251:
  1299     0208  2A39               	goto	l258
  1300     0209                     u3250:
  1301     0209                     l2429:
  1302     0209  1D86               	btfss	6,3	;volatile
  1303     020A  2A0C               	goto	u3261
  1304     020B  2A0D               	goto	u3260
  1305     020C                     u3261:
  1306     020C  2A39               	goto	l258
  1307     020D                     u3260:
  1308     020D                     l2431:
  1309                           
  1310                           ;code.c: 394:       RB3 = 0;
  1311     020D  1186               	bcf	6,3	;volatile
  1312     020E                     l2433:
  1313                           
  1314                           ;code.c: 395:       I2C_Start();
  1315     020E  120A  158A  24CC  120A  118A  	fcall	_I2C_Start
  1316                           
  1317                           ;code.c: 396:       I2C_Write(0xD0);
  1318     0213  30D0               	movlw	208
  1319     0214  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1320                           
  1321                           ;code.c: 397:       I2C_Write(0x0E);
  1322     0219  300E               	movlw	14
  1323     021A  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1324                           
  1325                           ;code.c: 399:       I2C_Write(4 | ((!(status_reg & 1)) & alarm_status));
  1326     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1327     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1328     0221  1C5F               	btfss	_status_reg,0
  1329     0222  2A24               	goto	u3271
  1330     0223  2A26               	goto	u3270
  1331     0224                     u3271:
  1332     0224  3001               	movlw	1
  1333     0225  2A27               	goto	u3280
  1334     0226                     u3270:
  1335     0226  3000               	movlw	0
  1336     0227                     u3280:
  1337     0227  055E               	andwf	_alarm_status,w
  1338     0228  3804               	iorlw	4
  1339     0229  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1340                           
  1341                           ;code.c: 400:       I2C_Write(0);
  1342     022E  3000               	movlw	0
  1343     022F  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  1344                           
  1345                           ;code.c: 401:       I2C_Stop();
  1346     0234  120A  158A  24DA  120A  118A  	fcall	_I2C_Stop
  1347     0239                     l258:	
  1348                           ;code.c: 402:     }
  1349                           
  1350                           
  1351                           ;code.c: 404:     RTC_read();
  1352     0239  120A  158A  27A2  120A  118A  	fcall	_RTC_read
  1353     023E                     l2435:
  1354                           
  1355                           ;code.c: 405:     alarm_set();
  1356     023E  120A  118A  24C9  120A  118A  	fcall	_alarm_set
  1357     0243                     l2437:
  1358                           
  1359                           ;code.c: 406:     RTC_display();
  1360     0243  120A  118A  2256  120A  118A  	fcall	_RTC_display
  1361     0248                     l2439:
  1362                           
  1363                           ;code.c: 408:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1364     0248  3082               	movlw	130
  1365     0249  1283               	bcf	3,5	;RP0=0, select bank0
  1366     024A  1303               	bcf	3,6	;RP1=0, select bank0
  1367     024B  00DC               	movwf	??_main+1
  1368     024C  30DD               	movlw	221
  1369     024D  00DB               	movwf	??_main
  1370     024E                     u3327:
  1371     024E  0BDB               	decfsz	??_main,f
  1372     024F  2A4E               	goto	u3327
  1373     0250  0BDC               	decfsz	??_main+1,f
  1374     0251  2A4E               	goto	u3327
  1375     0252  285E               	goto	l2383
  1376     0253  120A  118A  280C   	ljmp	start
  1377     0256                     __end_of_main:
  1378                           
  1379                           	psect	text1
  1380     05C1                     __ptext1:	
  1381 ;; *************** function _on_off *****************
  1382 ;; Defined at:
  1383 ;;		line 276 in file "code.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  x               1    wreg     unsigned char 
  1386 ;;  y               1    6[BANK0 ] unsigned char 
  1387 ;;  al              1    7[BANK0 ] unsigned char 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  x               1   11[BANK0 ] unsigned char 
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      unsigned char 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       2       0       0       0
  1400 ;;      Locals:         0       1       0       0       0
  1401 ;;      Temps:          0       3       0       0       0
  1402 ;;      Totals:         0       6       0       0       0
  1403 ;;Total ram usage:        6 bytes
  1404 ;; Hardware stack levels used: 1
  1405 ;; Hardware stack levels required when called: 5
  1406 ;; This function calls:
  1407 ;;		_LCD_Goto
  1408 ;;		_LCD_Print
  1409 ;;		_RTC_display
  1410 ;;		_RTC_read
  1411 ;;		_blink
  1412 ;;		_debounce
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418     05C1                     _on_off:	
  1419                           ;psect for function _on_off
  1420                           
  1421                           
  1422                           ;incstack = 0
  1423                           ; Regs used in _on_off: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1424                           ;on_off@x stored from wreg
  1425     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  1426     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  1427     05C3  00D8               	movwf	on_off@x
  1428     05C4                     l2323:
  1429     05C4                     l2325:	
  1430                           ;code.c: 276: uint8_t on_off(uint8_t x, uint8_t y, uint8_t al);code.c: 277: {;code.c: 27
      +                          8:   while(debounce());
  1431                           
  1432     05C4  120A  158A  255E  120A  118A  	fcall	_debounce
  1433     05C9  1803               	btfsc	3,0
  1434     05CA  2DCC               	goto	u3111
  1435     05CB  2DCD               	goto	u3110
  1436     05CC                     u3111:
  1437     05CC  2DC4               	goto	l2325
  1438     05CD                     u3110:
  1439     05CD  2E08               	goto	l2339
  1440     05CE                     l2327:
  1441                           
  1442                           ;code.c: 282:     {;code.c: 283:       al = (!al) & 0x01;
  1443     05CE  0854               	movf	on_off@al,w
  1444     05CF  1903               	btfsc	3,2
  1445     05D0  2DD2               	goto	u3121
  1446     05D1  2DD4               	goto	u3120
  1447     05D2                     u3121:
  1448     05D2  3001               	movlw	1
  1449     05D3  2DD5               	goto	u3130
  1450     05D4                     u3120:
  1451     05D4  3000               	movlw	0
  1452     05D5                     u3130:
  1453     05D5  3901               	andlw	1
  1454     05D6  00D4               	movwf	on_off@al
  1455     05D7                     l2329:
  1456                           
  1457                           ;code.c: 284:       LCD_Goto(x, y);
  1458     05D7  0853               	movf	on_off@y,w
  1459     05D8  00F7               	movwf	LCD_Goto@row
  1460     05D9  0858               	movf	on_off@x,w
  1461     05DA  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  1462     05DF                     l2331:
  1463                           
  1464                           ;code.c: 285:       if(al == 1) LCD_Print("ON ");
  1465     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1466     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1467     05E1  0354               	decf	on_off@al,w
  1468     05E2  1D03               	btfss	3,2
  1469     05E3  2DE5               	goto	u3141
  1470     05E4  2DE6               	goto	u3140
  1471     05E5                     u3141:
  1472     05E5  2DF0               	goto	l2335
  1473     05E6                     u3140:
  1474     05E6                     l2333:
  1475     05E6  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1476     05E7  00F4               	movwf	LCD_Print@LCD_Str
  1477     05E8  3080               	movlw	128
  1478     05E9  00F5               	movwf	LCD_Print@LCD_Str+1
  1479     05EA  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  1480     05EF  2DF9               	goto	l2337
  1481     05F0                     l2335:
  1482     05F0  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1483     05F1  00F4               	movwf	LCD_Print@LCD_Str
  1484     05F2  3080               	movlw	128
  1485     05F3  00F5               	movwf	LCD_Print@LCD_Str+1
  1486     05F4  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  1487     05F9                     l2337:
  1488                           
  1489                           ;code.c: 287:       _delay((unsigned long)((200)*(8000000/4000.0)));
  1490     05F9  3003               	movlw	3
  1491     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1492     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1493     05FC  00D7               	movwf	??_on_off+2
  1494     05FD  3008               	movlw	8
  1495     05FE  00D6               	movwf	??_on_off+1
  1496     05FF  3076               	movlw	118
  1497     0600  00D5               	movwf	??_on_off
  1498     0601                     u3337:
  1499     0601  0BD5               	decfsz	??_on_off,f
  1500     0602  2E01               	goto	u3337
  1501     0603  0BD6               	decfsz	??_on_off+1,f
  1502     0604  2E01               	goto	u3337
  1503     0605  0BD7               	decfsz	??_on_off+2,f
  1504     0606  2E01               	goto	u3337
  1505     0607  0000               	nop
  1506     0608                     l2339:
  1507                           
  1508                           ;code.c: 281:     while(!RB1)
  1509     0608  1283               	bcf	3,5	;RP0=0, select bank0
  1510     0609  1303               	bcf	3,6	;RP1=0, select bank0
  1511     060A  1C86               	btfss	6,1	;volatile
  1512     060B  2E0D               	goto	u3151
  1513     060C  2E0E               	goto	u3150
  1514     060D                     u3151:
  1515     060D  2DCE               	goto	l2327
  1516     060E                     u3150:
  1517     060E                     l2341:
  1518                           
  1519                           ;code.c: 290:     LCD_Goto(x, y);
  1520     060E  0853               	movf	on_off@y,w
  1521     060F  00F7               	movwf	LCD_Goto@row
  1522     0610  0858               	movf	on_off@x,w
  1523     0611  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  1524     0616                     l2343:
  1525                           
  1526                           ;code.c: 291:     LCD_Print("  ");
  1527     0616  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1528     0617  00F4               	movwf	LCD_Print@LCD_Str
  1529     0618  3080               	movlw	128
  1530     0619  00F5               	movwf	LCD_Print@LCD_Str+1
  1531     061A  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  1532     061F                     l2345:
  1533                           
  1534                           ;code.c: 292:     blink();
  1535     061F  120A  158A  2587  120A  118A  	fcall	_blink
  1536     0624                     l2347:
  1537                           
  1538                           ;code.c: 294:     LCD_Goto(x, y);
  1539     0624  1283               	bcf	3,5	;RP0=0, select bank0
  1540     0625  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0626  0853               	movf	on_off@y,w
  1542     0627  00F7               	movwf	LCD_Goto@row
  1543     0628  0858               	movf	on_off@x,w
  1544     0629  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  1545     062E                     l2349:
  1546                           
  1547                           ;code.c: 295:     if(al == 1) LCD_Print("ON ");
  1548     062E  1283               	bcf	3,5	;RP0=0, select bank0
  1549     062F  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0630  0354               	decf	on_off@al,w
  1551     0631  1D03               	btfss	3,2
  1552     0632  2E34               	goto	u3161
  1553     0633  2E35               	goto	u3160
  1554     0634                     u3161:
  1555     0634  2E3F               	goto	l2353
  1556     0635                     u3160:
  1557     0635                     l2351:
  1558     0635  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1559     0636  00F4               	movwf	LCD_Print@LCD_Str
  1560     0637  3080               	movlw	128
  1561     0638  00F5               	movwf	LCD_Print@LCD_Str+1
  1562     0639  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  1563     063E  2E48               	goto	l2355
  1564     063F                     l2353:
  1565     063F  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1566     0640  00F4               	movwf	LCD_Print@LCD_Str
  1567     0641  3080               	movlw	128
  1568     0642  00F5               	movwf	LCD_Print@LCD_Str+1
  1569     0643  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  1570     0648                     l2355:
  1571                           
  1572                           ;code.c: 297:     blink();
  1573     0648  120A  158A  2587  120A  118A  	fcall	_blink
  1574     064D                     l2357:
  1575                           
  1576                           ;code.c: 299:     RTC_read();
  1577     064D  120A  158A  27A2  120A  118A  	fcall	_RTC_read
  1578                           
  1579                           ;code.c: 300:     RTC_display();
  1580     0652  120A  118A  2256  120A  118A  	fcall	_RTC_display
  1581     0657                     l2359:
  1582                           
  1583                           ;code.c: 302:     if(!RB2)
  1584     0657  1283               	bcf	3,5	;RP0=0, select bank0
  1585     0658  1303               	bcf	3,6	;RP1=0, select bank0
  1586     0659  1906               	btfsc	6,2	;volatile
  1587     065A  2E5C               	goto	u3171
  1588     065B  2E5D               	goto	u3170
  1589     065C                     u3171:
  1590     065C  2E08               	goto	l2339
  1591     065D                     u3170:
  1592     065D                     l2361:
  1593                           
  1594                           ;code.c: 303:     if(debounce())
  1595     065D  120A  158A  255E  120A  118A  	fcall	_debounce
  1596     0662  1C03               	btfss	3,0
  1597     0663  2E65               	goto	u3181
  1598     0664  2E66               	goto	u3180
  1599     0665                     u3181:
  1600     0665  2E08               	goto	l2339
  1601     0666                     u3180:
  1602     0666                     l2363:
  1603                           
  1604                           ;code.c: 304:     {;code.c: 305:      return al;
  1605     0666  1283               	bcf	3,5	;RP0=0, select bank0
  1606     0667  1303               	bcf	3,6	;RP1=0, select bank0
  1607     0668  0854               	movf	on_off@al,w
  1608     0669                     l240:
  1609     0669  0008               	return
  1610     066A                     __end_of_on_off:
  1611                           
  1612                           	psect	text2
  1613     0FA2                     __ptext2:	
  1614 ;; *************** function _RTC_read *****************
  1615 ;; Defined at:
  1616 ;;		line 125 in file "code.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;		None
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, pclath, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1630 ;;      Params:         0       0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0
  1633 ;;      Totals:         0       0       0       0       0
  1634 ;;Total ram usage:        0 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 2
  1637 ;; This function calls:
  1638 ;;		_I2C_Read
  1639 ;;		_I2C_Repeated_Start
  1640 ;;		_I2C_Start
  1641 ;;		_I2C_Stop
  1642 ;;		_I2C_Write
  1643 ;; This function is called by:
  1644 ;;		_on_off
  1645 ;;		_main
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649     0FA2                     _RTC_read:	
  1650                           ;psect for function _RTC_read
  1651                           
  1652     0FA2                     l2143:	
  1653                           ;incstack = 0
  1654                           ; Regs used in _RTC_read: [wreg+status,2+status,0+pclath+cstack]
  1655                           
  1656                           
  1657                           ;code.c: 128:     I2C_Start();
  1658     0FA2  120A  158A  24CC  120A  158A  	fcall	_I2C_Start
  1659                           
  1660                           ;code.c: 129:     I2C_Write(0xD0);
  1661     0FA7  30D0               	movlw	208
  1662     0FA8  120A  158A  24F7  120A  158A  	fcall	_I2C_Write
  1663                           
  1664                           ;code.c: 130:     I2C_Write(0);
  1665     0FAD  3000               	movlw	0
  1666     0FAE  120A  158A  24F7  120A  158A  	fcall	_I2C_Write
  1667                           
  1668                           ;code.c: 131:     I2C_Repeated_Start();
  1669     0FB3  120A  158A  24BE  120A  158A  	fcall	_I2C_Repeated_Start
  1670                           
  1671                           ;code.c: 132:     I2C_Write(0xD1);
  1672     0FB8  30D1               	movlw	209
  1673     0FB9  120A  158A  24F7  120A  158A  	fcall	_I2C_Write
  1674                           
  1675                           ;code.c: 133:     second = I2C_Read(1);
  1676     0FBE  3001               	movlw	1
  1677     0FBF  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1678     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  1679     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  1680     0FC6  00E7               	movwf	_second
  1681                           
  1682                           ;code.c: 134:     minute = I2C_Read(1);
  1683     0FC7  3001               	movlw	1
  1684     0FC8  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1685     0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  1686     0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  1687     0FCF  00E6               	movwf	_minute
  1688                           
  1689                           ;code.c: 135:     hour = I2C_Read(1);
  1690     0FD0  3001               	movlw	1
  1691     0FD1  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1692     0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  1693     0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  1694     0FD8  00E5               	movwf	_hour
  1695                           
  1696                           ;code.c: 136:     I2C_Read(1);
  1697     0FD9  3001               	movlw	1
  1698     0FDA  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1699                           
  1700                           ;code.c: 137:     m_day = I2C_Read(1);
  1701     0FDF  3001               	movlw	1
  1702     0FE0  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1703     0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  1704     0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  1705     0FE7  00E4               	movwf	_m_day
  1706                           
  1707                           ;code.c: 138:     month = I2C_Read(1);
  1708     0FE8  3001               	movlw	1
  1709     0FE9  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1710     0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  1711     0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  1712     0FF0  00E3               	movwf	_month
  1713                           
  1714                           ;code.c: 139:     year = I2C_Read(0);
  1715     0FF1  3000               	movlw	0
  1716     0FF2  120A  158A  263A  120A  158A  	fcall	_I2C_Read
  1717     0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  1718     0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  1719     0FF9  00E2               	movwf	_year
  1720                           
  1721                           ;code.c: 140:     I2C_Stop();
  1722     0FFA  120A  158A  24DA  120A  158A  	fcall	_I2C_Stop
  1723     0FFF                     l182:
  1724     0FFF  0008               	return
  1725     1000                     __end_of_RTC_read:
  1726                           
  1727                           	psect	text3
  1728     0256                     __ptext3:	
  1729 ;; *************** function _RTC_display *****************
  1730 ;; Defined at:
  1731 ;;		line 143 in file "code.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1745 ;;      Params:         0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0
  1747 ;;      Temps:          0       2       0       0       0
  1748 ;;      Totals:         0       2       0       0       0
  1749 ;;Total ram usage:        2 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 4
  1752 ;; This function calls:
  1753 ;;		_LCD_Goto
  1754 ;;		_LCD_Print
  1755 ;;		___awdiv
  1756 ;;		___awmod
  1757 ;;		_bcd_to_decimal
  1758 ;; This function is called by:
  1759 ;;		_on_off
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764     0256                     _RTC_display:	
  1765                           ;psect for function _RTC_display
  1766                           
  1767     0256                     l2145:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _RTC_display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1770                           
  1771                           
  1772                           ;code.c: 145:   static char Time[] = "TIME: 00:00:00";;code.c: 146:   static char Date[]
      +                           = "DATE: 00/00/2000";;code.c: 149:   second = bcd_to_decimal(second);
  1773     0256  1283               	bcf	3,5	;RP0=0, select bank0
  1774     0257  1303               	bcf	3,6	;RP1=0, select bank0
  1775     0258  0867               	movf	_second,w
  1776     0259  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1777     025E  1283               	bcf	3,5	;RP0=0, select bank0
  1778     025F  1303               	bcf	3,6	;RP1=0, select bank0
  1779     0260  00E7               	movwf	_second
  1780                           
  1781                           ;code.c: 150:   minute = bcd_to_decimal(minute);
  1782     0261  0866               	movf	_minute,w
  1783     0262  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1784     0267  1283               	bcf	3,5	;RP0=0, select bank0
  1785     0268  1303               	bcf	3,6	;RP1=0, select bank0
  1786     0269  00E6               	movwf	_minute
  1787                           
  1788                           ;code.c: 151:   hour = bcd_to_decimal(hour);
  1789     026A  0865               	movf	_hour,w
  1790     026B  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1791     0270  1283               	bcf	3,5	;RP0=0, select bank0
  1792     0271  1303               	bcf	3,6	;RP1=0, select bank0
  1793     0272  00E5               	movwf	_hour
  1794                           
  1795                           ;code.c: 152:   m_day = bcd_to_decimal(m_day);
  1796     0273  0864               	movf	_m_day,w
  1797     0274  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1798     0279  1283               	bcf	3,5	;RP0=0, select bank0
  1799     027A  1303               	bcf	3,6	;RP1=0, select bank0
  1800     027B  00E4               	movwf	_m_day
  1801                           
  1802                           ;code.c: 153:   month = bcd_to_decimal(month);
  1803     027C  0863               	movf	_month,w
  1804     027D  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1805     0282  1283               	bcf	3,5	;RP0=0, select bank0
  1806     0283  1303               	bcf	3,6	;RP1=0, select bank0
  1807     0284  00E3               	movwf	_month
  1808                           
  1809                           ;code.c: 154:   year = bcd_to_decimal(year);
  1810     0285  0862               	movf	_year,w
  1811     0286  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  1812     028B  1283               	bcf	3,5	;RP0=0, select bank0
  1813     028C  1303               	bcf	3,6	;RP1=0, select bank0
  1814     028D  00E2               	movwf	_year
  1815                           
  1816                           ;code.c: 158:   Time[6] = hour / 10 + '0';
  1817     028E  300A               	movlw	10
  1818     028F  00F2               	movwf	___awdiv@divisor
  1819     0290  3000               	movlw	0
  1820     0291  00F3               	movwf	___awdiv@divisor+1
  1821     0292  0865               	movf	_hour,w
  1822     0293  00D1               	movwf	??_RTC_display
  1823     0294  01D2               	clrf	??_RTC_display+1
  1824     0295  0851               	movf	??_RTC_display,w
  1825     0296  00F4               	movwf	___awdiv@dividend
  1826     0297  0852               	movf	??_RTC_display+1,w
  1827     0298  00F5               	movwf	___awdiv@dividend+1
  1828     0299  120A  118A  26FD  120A  118A  	fcall	___awdiv
  1829     029E  0872               	movf	?___awdiv,w
  1830     029F  3E30               	addlw	48
  1831     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1832     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1833     02A2  00B7               	movwf	RTC_display@Time+6
  1834                           
  1835                           ;code.c: 159:   Time[7] = hour % 10 + '0';
  1836     02A3  300A               	movlw	10
  1837     02A4  00F2               	movwf	___awmod@divisor
  1838     02A5  3000               	movlw	0
  1839     02A6  00F3               	movwf	___awmod@divisor+1
  1840     02A7  0865               	movf	_hour,w
  1841     02A8  00D1               	movwf	??_RTC_display
  1842     02A9  01D2               	clrf	??_RTC_display+1
  1843     02AA  0851               	movf	??_RTC_display,w
  1844     02AB  00F4               	movwf	___awmod@dividend
  1845     02AC  0852               	movf	??_RTC_display+1,w
  1846     02AD  00F5               	movwf	___awmod@dividend+1
  1847     02AE  120A  158A  26EF  120A  118A  	fcall	___awmod
  1848     02B3  0872               	movf	?___awmod,w
  1849     02B4  3E30               	addlw	48
  1850     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1851     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1852     02B7  00B8               	movwf	RTC_display@Time+7
  1853                           
  1854                           ;code.c: 160:   Time[9] = minute / 10 + '0';
  1855     02B8  300A               	movlw	10
  1856     02B9  00F2               	movwf	___awdiv@divisor
  1857     02BA  3000               	movlw	0
  1858     02BB  00F3               	movwf	___awdiv@divisor+1
  1859     02BC  0866               	movf	_minute,w
  1860     02BD  00D1               	movwf	??_RTC_display
  1861     02BE  01D2               	clrf	??_RTC_display+1
  1862     02BF  0851               	movf	??_RTC_display,w
  1863     02C0  00F4               	movwf	___awdiv@dividend
  1864     02C1  0852               	movf	??_RTC_display+1,w
  1865     02C2  00F5               	movwf	___awdiv@dividend+1
  1866     02C3  120A  118A  26FD  120A  118A  	fcall	___awdiv
  1867     02C8  0872               	movf	?___awdiv,w
  1868     02C9  3E30               	addlw	48
  1869     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1870     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1871     02CC  00BA               	movwf	RTC_display@Time+9
  1872                           
  1873                           ;code.c: 161:   Time[10] = minute % 10 + '0';
  1874     02CD  300A               	movlw	10
  1875     02CE  00F2               	movwf	___awmod@divisor
  1876     02CF  3000               	movlw	0
  1877     02D0  00F3               	movwf	___awmod@divisor+1
  1878     02D1  0866               	movf	_minute,w
  1879     02D2  00D1               	movwf	??_RTC_display
  1880     02D3  01D2               	clrf	??_RTC_display+1
  1881     02D4  0851               	movf	??_RTC_display,w
  1882     02D5  00F4               	movwf	___awmod@dividend
  1883     02D6  0852               	movf	??_RTC_display+1,w
  1884     02D7  00F5               	movwf	___awmod@dividend+1
  1885     02D8  120A  158A  26EF  120A  118A  	fcall	___awmod
  1886     02DD  0872               	movf	?___awmod,w
  1887     02DE  3E30               	addlw	48
  1888     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1889     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1890     02E1  00BB               	movwf	RTC_display@Time+10
  1891                           
  1892                           ;code.c: 162:   Time[12] = second / 10 + '0';
  1893     02E2  300A               	movlw	10
  1894     02E3  00F2               	movwf	___awdiv@divisor
  1895     02E4  3000               	movlw	0
  1896     02E5  00F3               	movwf	___awdiv@divisor+1
  1897     02E6  0867               	movf	_second,w
  1898     02E7  00D1               	movwf	??_RTC_display
  1899     02E8  01D2               	clrf	??_RTC_display+1
  1900     02E9  0851               	movf	??_RTC_display,w
  1901     02EA  00F4               	movwf	___awdiv@dividend
  1902     02EB  0852               	movf	??_RTC_display+1,w
  1903     02EC  00F5               	movwf	___awdiv@dividend+1
  1904     02ED  120A  118A  26FD  120A  118A  	fcall	___awdiv
  1905     02F2  0872               	movf	?___awdiv,w
  1906     02F3  3E30               	addlw	48
  1907     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1908     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1909     02F6  00BD               	movwf	RTC_display@Time+12
  1910                           
  1911                           ;code.c: 163:   Time[13] = second % 10 + '0';
  1912     02F7  300A               	movlw	10
  1913     02F8  00F2               	movwf	___awmod@divisor
  1914     02F9  3000               	movlw	0
  1915     02FA  00F3               	movwf	___awmod@divisor+1
  1916     02FB  0867               	movf	_second,w
  1917     02FC  00D1               	movwf	??_RTC_display
  1918     02FD  01D2               	clrf	??_RTC_display+1
  1919     02FE  0851               	movf	??_RTC_display,w
  1920     02FF  00F4               	movwf	___awmod@dividend
  1921     0300  0852               	movf	??_RTC_display+1,w
  1922     0301  00F5               	movwf	___awmod@dividend+1
  1923     0302  120A  158A  26EF  120A  118A  	fcall	___awmod
  1924     0307  0872               	movf	?___awmod,w
  1925     0308  3E30               	addlw	48
  1926     0309  1283               	bcf	3,5	;RP0=0, select bank0
  1927     030A  1303               	bcf	3,6	;RP1=0, select bank0
  1928     030B  00BE               	movwf	RTC_display@Time+13
  1929                           
  1930                           ;code.c: 165:   Date[6] = m_day / 10 + '0';
  1931     030C  300A               	movlw	10
  1932     030D  00F2               	movwf	___awdiv@divisor
  1933     030E  3000               	movlw	0
  1934     030F  00F3               	movwf	___awdiv@divisor+1
  1935     0310  0864               	movf	_m_day,w
  1936     0311  00D1               	movwf	??_RTC_display
  1937     0312  01D2               	clrf	??_RTC_display+1
  1938     0313  0851               	movf	??_RTC_display,w
  1939     0314  00F4               	movwf	___awdiv@dividend
  1940     0315  0852               	movf	??_RTC_display+1,w
  1941     0316  00F5               	movwf	___awdiv@dividend+1
  1942     0317  120A  118A  26FD  120A  118A  	fcall	___awdiv
  1943     031C  0872               	movf	?___awdiv,w
  1944     031D  3E30               	addlw	48
  1945     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1946     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1947     0320  00A6               	movwf	RTC_display@Date+6
  1948                           
  1949                           ;code.c: 166:   Date[7] = m_day % 10 + '0';
  1950     0321  300A               	movlw	10
  1951     0322  00F2               	movwf	___awmod@divisor
  1952     0323  3000               	movlw	0
  1953     0324  00F3               	movwf	___awmod@divisor+1
  1954     0325  0864               	movf	_m_day,w
  1955     0326  00D1               	movwf	??_RTC_display
  1956     0327  01D2               	clrf	??_RTC_display+1
  1957     0328  0851               	movf	??_RTC_display,w
  1958     0329  00F4               	movwf	___awmod@dividend
  1959     032A  0852               	movf	??_RTC_display+1,w
  1960     032B  00F5               	movwf	___awmod@dividend+1
  1961     032C  120A  158A  26EF  120A  118A  	fcall	___awmod
  1962     0331  0872               	movf	?___awmod,w
  1963     0332  3E30               	addlw	48
  1964     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1965     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1966     0335  00A7               	movwf	RTC_display@Date+7
  1967                           
  1968                           ;code.c: 167:   Date[9] = month / 10 + '0';
  1969     0336  300A               	movlw	10
  1970     0337  00F2               	movwf	___awdiv@divisor
  1971     0338  3000               	movlw	0
  1972     0339  00F3               	movwf	___awdiv@divisor+1
  1973     033A  0863               	movf	_month,w
  1974     033B  00D1               	movwf	??_RTC_display
  1975     033C  01D2               	clrf	??_RTC_display+1
  1976     033D  0851               	movf	??_RTC_display,w
  1977     033E  00F4               	movwf	___awdiv@dividend
  1978     033F  0852               	movf	??_RTC_display+1,w
  1979     0340  00F5               	movwf	___awdiv@dividend+1
  1980     0341  120A  118A  26FD  120A  118A  	fcall	___awdiv
  1981     0346  0872               	movf	?___awdiv,w
  1982     0347  3E30               	addlw	48
  1983     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1985     034A  00A9               	movwf	RTC_display@Date+9
  1986                           
  1987                           ;code.c: 168:   Date[10] = month % 10 + '0';
  1988     034B  300A               	movlw	10
  1989     034C  00F2               	movwf	___awmod@divisor
  1990     034D  3000               	movlw	0
  1991     034E  00F3               	movwf	___awmod@divisor+1
  1992     034F  0863               	movf	_month,w
  1993     0350  00D1               	movwf	??_RTC_display
  1994     0351  01D2               	clrf	??_RTC_display+1
  1995     0352  0851               	movf	??_RTC_display,w
  1996     0353  00F4               	movwf	___awmod@dividend
  1997     0354  0852               	movf	??_RTC_display+1,w
  1998     0355  00F5               	movwf	___awmod@dividend+1
  1999     0356  120A  158A  26EF  120A  118A  	fcall	___awmod
  2000     035B  0872               	movf	?___awmod,w
  2001     035C  3E30               	addlw	48
  2002     035D  1283               	bcf	3,5	;RP0=0, select bank0
  2003     035E  1303               	bcf	3,6	;RP1=0, select bank0
  2004     035F  00AA               	movwf	RTC_display@Date+10
  2005                           
  2006                           ;code.c: 169:   Date[14] = year / 10 + '0';
  2007     0360  300A               	movlw	10
  2008     0361  00F2               	movwf	___awdiv@divisor
  2009     0362  3000               	movlw	0
  2010     0363  00F3               	movwf	___awdiv@divisor+1
  2011     0364  0862               	movf	_year,w
  2012     0365  00D1               	movwf	??_RTC_display
  2013     0366  01D2               	clrf	??_RTC_display+1
  2014     0367  0851               	movf	??_RTC_display,w
  2015     0368  00F4               	movwf	___awdiv@dividend
  2016     0369  0852               	movf	??_RTC_display+1,w
  2017     036A  00F5               	movwf	___awdiv@dividend+1
  2018     036B  120A  118A  26FD  120A  118A  	fcall	___awdiv
  2019     0370  0872               	movf	?___awdiv,w
  2020     0371  3E30               	addlw	48
  2021     0372  1283               	bcf	3,5	;RP0=0, select bank0
  2022     0373  1303               	bcf	3,6	;RP1=0, select bank0
  2023     0374  00AE               	movwf	RTC_display@Date+14
  2024                           
  2025                           ;code.c: 170:   Date[15] = year % 10 + '0';
  2026     0375  300A               	movlw	10
  2027     0376  00F2               	movwf	___awmod@divisor
  2028     0377  3000               	movlw	0
  2029     0378  00F3               	movwf	___awmod@divisor+1
  2030     0379  0862               	movf	_year,w
  2031     037A  00D1               	movwf	??_RTC_display
  2032     037B  01D2               	clrf	??_RTC_display+1
  2033     037C  0851               	movf	??_RTC_display,w
  2034     037D  00F4               	movwf	___awmod@dividend
  2035     037E  0852               	movf	??_RTC_display+1,w
  2036     037F  00F5               	movwf	___awmod@dividend+1
  2037     0380  120A  158A  26EF  120A  118A  	fcall	___awmod
  2038     0385  0872               	movf	?___awmod,w
  2039     0386  3E30               	addlw	48
  2040     0387  1283               	bcf	3,5	;RP0=0, select bank0
  2041     0388  1303               	bcf	3,6	;RP1=0, select bank0
  2042     0389  00AF               	movwf	RTC_display@Date+15
  2043     038A                     l2147:
  2044                           
  2045                           ;code.c: 172:   LCD_Goto(1, 1);
  2046     038A  01F7               	clrf	LCD_Goto@row
  2047     038B  0AF7               	incf	LCD_Goto@row,f
  2048     038C  3001               	movlw	1
  2049     038D  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  2050     0392                     l2149:
  2051                           
  2052                           ;code.c: 173:   LCD_Print(Time);
  2053     0392  3031               	movlw	(low (RTC_display@Time| 0))& (0+255)
  2054     0393  00F4               	movwf	LCD_Print@LCD_Str
  2055     0394  3000               	movlw	0
  2056     0395  00F5               	movwf	LCD_Print@LCD_Str+1
  2057     0396  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  2058     039B                     l2151:
  2059                           
  2060                           ;code.c: 174:   LCD_Goto(1, 2);
  2061     039B  3002               	movlw	2
  2062     039C  00F7               	movwf	LCD_Goto@row
  2063     039D  3001               	movlw	1
  2064     039E  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  2065     03A3                     l2153:
  2066                           
  2067                           ;code.c: 175:   LCD_Print(Date);
  2068     03A3  3020               	movlw	(low (RTC_display@Date| 0))& (0+255)
  2069     03A4  00F4               	movwf	LCD_Print@LCD_Str
  2070     03A5  3000               	movlw	0
  2071     03A6  00F5               	movwf	LCD_Print@LCD_Str+1
  2072     03A7  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  2073     03AC                     l189:
  2074     03AC  0008               	return
  2075     03AD                     __end_of_RTC_display:
  2076                           
  2077                           	psect	text4
  2078     03AD                     __ptext4:	
  2079 ;; *************** function _edit *****************
  2080 ;; Defined at:
  2081 ;;		line 228 in file "code.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  x               1    wreg     unsigned char 
  2084 ;;  y               1    4[BANK0 ] unsigned char 
  2085 ;;  parameter       1    5[BANK0 ] unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  x               1    9[BANK0 ] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      unsigned char 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       2       0       0       0
  2098 ;;      Locals:         0       1       0       0       0
  2099 ;;      Temps:          0       3       0       0       0
  2100 ;;      Totals:         0       6       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 4
  2104 ;; This function calls:
  2105 ;;		_LCD_Goto
  2106 ;;		_LCD_Print
  2107 ;;		_LCD_PutC
  2108 ;;		___awdiv
  2109 ;;		___awmod
  2110 ;;		_blink
  2111 ;;		_debounce
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     03AD                     _edit:	
  2118                           ;psect for function _edit
  2119                           
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _edit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2123                           ;edit@x stored from wreg
  2124     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2125     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2126     03AF  00D6               	movwf	edit@x
  2127     03B0                     l2249:
  2128     03B0                     l2251:	
  2129                           ;code.c: 228: uint8_t edit(uint8_t x, uint8_t y, uint8_t parameter);code.c: 229: {;code.
      +                          c: 230:   while(debounce());
  2130                           
  2131     03B0  120A  158A  255E  120A  118A  	fcall	_debounce
  2132     03B5  1803               	btfsc	3,0
  2133     03B6  2BB8               	goto	u2951
  2134     03B7  2BB9               	goto	u2950
  2135     03B8                     u2951:
  2136     03B8  2BB0               	goto	l2251
  2137     03B9                     u2950:
  2138     03B9  2C55               	goto	l2297
  2139     03BA                     l2253:
  2140                           
  2141                           ;code.c: 235:     {;code.c: 236:       parameter++;
  2142     03BA  3001               	movlw	1
  2143     03BB  00D3               	movwf	??_edit
  2144     03BC  0853               	movf	??_edit,w
  2145     03BD  07D2               	addwf	edit@parameter,f
  2146                           
  2147                           ;code.c: 237:       if(i == 0 && parameter > 23)
  2148     03BE  087B               	movf	_i,w
  2149     03BF  1D03               	btfss	3,2
  2150     03C0  2BC2               	goto	u2961
  2151     03C1  2BC3               	goto	u2960
  2152     03C2                     u2961:
  2153     03C2  2BCA               	goto	l2259
  2154     03C3                     u2960:
  2155     03C3                     l2255:
  2156     03C3  3018               	movlw	24
  2157     03C4  0252               	subwf	edit@parameter,w
  2158     03C5  1C03               	skipc
  2159     03C6  2BC8               	goto	u2971
  2160     03C7  2BC9               	goto	u2970
  2161     03C8                     u2971:
  2162     03C8  2BCA               	goto	l2259
  2163     03C9                     u2970:
  2164     03C9                     l2257:
  2165                           
  2166                           ;code.c: 238:         parameter = 0;
  2167     03C9  01D2               	clrf	edit@parameter
  2168     03CA                     l2259:
  2169                           
  2170                           ;code.c: 239:       if(i == 1 && parameter > 59)
  2171     03CA  037B               	decf	_i,w
  2172     03CB  1D03               	btfss	3,2
  2173     03CC  2BCE               	goto	u2981
  2174     03CD  2BCF               	goto	u2980
  2175     03CE                     u2981:
  2176     03CE  2BD6               	goto	l2265
  2177     03CF                     u2980:
  2178     03CF                     l2261:
  2179     03CF  303C               	movlw	60
  2180     03D0  0252               	subwf	edit@parameter,w
  2181     03D1  1C03               	skipc
  2182     03D2  2BD4               	goto	u2991
  2183     03D3  2BD5               	goto	u2990
  2184     03D4                     u2991:
  2185     03D4  2BD6               	goto	l2265
  2186     03D5                     u2990:
  2187     03D5                     l2263:
  2188                           
  2189                           ;code.c: 240:         parameter = 0;
  2190     03D5  01D2               	clrf	edit@parameter
  2191     03D6                     l2265:
  2192                           
  2193                           ;code.c: 241:       if(i == 2 && parameter > 59)
  2194     03D6  3002               	movlw	2
  2195     03D7  067B               	xorwf	_i,w
  2196     03D8  1D03               	btfss	3,2
  2197     03D9  2BDB               	goto	u3001
  2198     03DA  2BDC               	goto	u3000
  2199     03DB                     u3001:
  2200     03DB  2BE3               	goto	l2271
  2201     03DC                     u3000:
  2202     03DC                     l2267:
  2203     03DC  303C               	movlw	60
  2204     03DD  0252               	subwf	edit@parameter,w
  2205     03DE  1C03               	skipc
  2206     03DF  2BE1               	goto	u3011
  2207     03E0  2BE2               	goto	u3010
  2208     03E1                     u3011:
  2209     03E1  2BE3               	goto	l2271
  2210     03E2                     u3010:
  2211     03E2                     l2269:
  2212                           
  2213                           ;code.c: 242:           parameter = 0;
  2214     03E2  01D2               	clrf	edit@parameter
  2215     03E3                     l2271:
  2216                           
  2217                           ;code.c: 243:       if(i == 3 && parameter > 31)
  2218     03E3  3003               	movlw	3
  2219     03E4  067B               	xorwf	_i,w
  2220     03E5  1D03               	btfss	3,2
  2221     03E6  2BE8               	goto	u3021
  2222     03E7  2BE9               	goto	u3020
  2223     03E8                     u3021:
  2224     03E8  2BF1               	goto	l2277
  2225     03E9                     u3020:
  2226     03E9                     l2273:
  2227     03E9  3020               	movlw	32
  2228     03EA  0252               	subwf	edit@parameter,w
  2229     03EB  1C03               	skipc
  2230     03EC  2BEE               	goto	u3031
  2231     03ED  2BEF               	goto	u3030
  2232     03EE                     u3031:
  2233     03EE  2BF1               	goto	l2277
  2234     03EF                     u3030:
  2235     03EF                     l2275:
  2236                           
  2237                           ;code.c: 244:         parameter = 1;
  2238     03EF  01D2               	clrf	edit@parameter
  2239     03F0  0AD2               	incf	edit@parameter,f
  2240     03F1                     l2277:
  2241                           
  2242                           ;code.c: 245:       if(i == 4 && parameter > 12)
  2243     03F1  3004               	movlw	4
  2244     03F2  067B               	xorwf	_i,w
  2245     03F3  1D03               	btfss	3,2
  2246     03F4  2BF6               	goto	u3041
  2247     03F5  2BF7               	goto	u3040
  2248     03F6                     u3041:
  2249     03F6  2BFF               	goto	l2283
  2250     03F7                     u3040:
  2251     03F7                     l2279:
  2252     03F7  300D               	movlw	13
  2253     03F8  0252               	subwf	edit@parameter,w
  2254     03F9  1C03               	skipc
  2255     03FA  2BFC               	goto	u3051
  2256     03FB  2BFD               	goto	u3050
  2257     03FC                     u3051:
  2258     03FC  2BFF               	goto	l2283
  2259     03FD                     u3050:
  2260     03FD                     l2281:
  2261                           
  2262                           ;code.c: 246:         parameter = 1;
  2263     03FD  01D2               	clrf	edit@parameter
  2264     03FE  0AD2               	incf	edit@parameter,f
  2265     03FF                     l2283:
  2266                           
  2267                           ;code.c: 247:       if(i == 5 && parameter > 99)
  2268     03FF  3005               	movlw	5
  2269     0400  067B               	xorwf	_i,w
  2270     0401  1D03               	btfss	3,2
  2271     0402  2C04               	goto	u3061
  2272     0403  2C05               	goto	u3060
  2273     0404                     u3061:
  2274     0404  2C0C               	goto	l2289
  2275     0405                     u3060:
  2276     0405                     l2285:
  2277     0405  3064               	movlw	100
  2278     0406  0252               	subwf	edit@parameter,w
  2279     0407  1C03               	skipc
  2280     0408  2C0A               	goto	u3071
  2281     0409  2C0B               	goto	u3070
  2282     040A                     u3071:
  2283     040A  2C0C               	goto	l2289
  2284     040B                     u3070:
  2285     040B                     l2287:
  2286                           
  2287                           ;code.c: 248:         parameter = 0;
  2288     040B  01D2               	clrf	edit@parameter
  2289     040C                     l2289:
  2290                           
  2291                           ;code.c: 250:       LCD_Goto(x, y);
  2292     040C  0851               	movf	edit@y,w
  2293     040D  00F7               	movwf	LCD_Goto@row
  2294     040E  0856               	movf	edit@x,w
  2295     040F  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  2296     0414                     l2291:
  2297                           
  2298                           ;code.c: 251:       LCD_PutC(parameter / 10 + '0');
  2299     0414  300A               	movlw	10
  2300     0415  00F2               	movwf	___awdiv@divisor
  2301     0416  3000               	movlw	0
  2302     0417  00F3               	movwf	___awdiv@divisor+1
  2303     0418  1283               	bcf	3,5	;RP0=0, select bank0
  2304     0419  1303               	bcf	3,6	;RP1=0, select bank0
  2305     041A  0852               	movf	edit@parameter,w
  2306     041B  00D3               	movwf	??_edit
  2307     041C  01D4               	clrf	??_edit+1
  2308     041D  0853               	movf	??_edit,w
  2309     041E  00F4               	movwf	___awdiv@dividend
  2310     041F  0854               	movf	??_edit+1,w
  2311     0420  00F5               	movwf	___awdiv@dividend+1
  2312     0421  120A  118A  26FD  120A  118A  	fcall	___awdiv
  2313     0426  0872               	movf	?___awdiv,w
  2314     0427  3E30               	addlw	48
  2315     0428  120A  158A  2547  120A  118A  	fcall	_LCD_PutC
  2316     042D                     l2293:
  2317                           
  2318                           ;code.c: 252:       LCD_PutC(parameter % 10 + '0');
  2319     042D  300A               	movlw	10
  2320     042E  00F2               	movwf	___awmod@divisor
  2321     042F  3000               	movlw	0
  2322     0430  00F3               	movwf	___awmod@divisor+1
  2323     0431  1283               	bcf	3,5	;RP0=0, select bank0
  2324     0432  1303               	bcf	3,6	;RP1=0, select bank0
  2325     0433  0852               	movf	edit@parameter,w
  2326     0434  00D3               	movwf	??_edit
  2327     0435  01D4               	clrf	??_edit+1
  2328     0436  0853               	movf	??_edit,w
  2329     0437  00F4               	movwf	___awmod@dividend
  2330     0438  0854               	movf	??_edit+1,w
  2331     0439  00F5               	movwf	___awmod@dividend+1
  2332     043A  120A  158A  26EF  120A  118A  	fcall	___awmod
  2333     043F  0872               	movf	?___awmod,w
  2334     0440  3E30               	addlw	48
  2335     0441  120A  158A  2547  120A  118A  	fcall	_LCD_PutC
  2336     0446                     l2295:
  2337                           
  2338                           ;code.c: 253:       _delay((unsigned long)((200)*(8000000/4000.0)));
  2339     0446  3003               	movlw	3
  2340     0447  1283               	bcf	3,5	;RP0=0, select bank0
  2341     0448  1303               	bcf	3,6	;RP1=0, select bank0
  2342     0449  00D5               	movwf	??_edit+2
  2343     044A  3008               	movlw	8
  2344     044B  00D4               	movwf	??_edit+1
  2345     044C  3076               	movlw	118
  2346     044D  00D3               	movwf	??_edit
  2347     044E                     u3347:
  2348     044E  0BD3               	decfsz	??_edit,f
  2349     044F  2C4E               	goto	u3347
  2350     0450  0BD4               	decfsz	??_edit+1,f
  2351     0451  2C4E               	goto	u3347
  2352     0452  0BD5               	decfsz	??_edit+2,f
  2353     0453  2C4E               	goto	u3347
  2354     0454  0000               	nop
  2355     0455                     l2297:
  2356                           
  2357                           ;code.c: 234:     while(!RB1)
  2358     0455  1283               	bcf	3,5	;RP0=0, select bank0
  2359     0456  1303               	bcf	3,6	;RP1=0, select bank0
  2360     0457  1C86               	btfss	6,1	;volatile
  2361     0458  2C5A               	goto	u3081
  2362     0459  2C5B               	goto	u3080
  2363     045A                     u3081:
  2364     045A  2BBA               	goto	l2253
  2365     045B                     u3080:
  2366     045B                     l2299:
  2367                           
  2368                           ;code.c: 257:     LCD_Goto(x, y);
  2369     045B  0851               	movf	edit@y,w
  2370     045C  00F7               	movwf	LCD_Goto@row
  2371     045D  0856               	movf	edit@x,w
  2372     045E  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  2373     0463                     l2301:
  2374                           
  2375                           ;code.c: 258:     LCD_Print("  ");
  2376     0463  3009               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2377     0464  00F4               	movwf	LCD_Print@LCD_Str
  2378     0465  3080               	movlw	128
  2379     0466  00F5               	movwf	LCD_Print@LCD_Str+1
  2380     0467  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  2381     046C                     l2303:
  2382                           
  2383                           ;code.c: 259:     blink();
  2384     046C  120A  158A  2587  120A  118A  	fcall	_blink
  2385     0471                     l2305:
  2386                           
  2387                           ;code.c: 261:     LCD_Goto(x, y);
  2388     0471  1283               	bcf	3,5	;RP0=0, select bank0
  2389     0472  1303               	bcf	3,6	;RP1=0, select bank0
  2390     0473  0851               	movf	edit@y,w
  2391     0474  00F7               	movwf	LCD_Goto@row
  2392     0475  0856               	movf	edit@x,w
  2393     0476  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  2394     047B                     l2307:
  2395                           
  2396                           ;code.c: 262:     LCD_PutC(parameter / 10 + '0');
  2397     047B  300A               	movlw	10
  2398     047C  00F2               	movwf	___awdiv@divisor
  2399     047D  3000               	movlw	0
  2400     047E  00F3               	movwf	___awdiv@divisor+1
  2401     047F  1283               	bcf	3,5	;RP0=0, select bank0
  2402     0480  1303               	bcf	3,6	;RP1=0, select bank0
  2403     0481  0852               	movf	edit@parameter,w
  2404     0482  00D3               	movwf	??_edit
  2405     0483  01D4               	clrf	??_edit+1
  2406     0484  0853               	movf	??_edit,w
  2407     0485  00F4               	movwf	___awdiv@dividend
  2408     0486  0854               	movf	??_edit+1,w
  2409     0487  00F5               	movwf	___awdiv@dividend+1
  2410     0488  120A  118A  26FD  120A  118A  	fcall	___awdiv
  2411     048D  0872               	movf	?___awdiv,w
  2412     048E  3E30               	addlw	48
  2413     048F  120A  158A  2547  120A  118A  	fcall	_LCD_PutC
  2414     0494                     l2309:
  2415                           
  2416                           ;code.c: 263:     LCD_PutC(parameter % 10 + '0');
  2417     0494  300A               	movlw	10
  2418     0495  00F2               	movwf	___awmod@divisor
  2419     0496  3000               	movlw	0
  2420     0497  00F3               	movwf	___awmod@divisor+1
  2421     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2422     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2423     049A  0852               	movf	edit@parameter,w
  2424     049B  00D3               	movwf	??_edit
  2425     049C  01D4               	clrf	??_edit+1
  2426     049D  0853               	movf	??_edit,w
  2427     049E  00F4               	movwf	___awmod@dividend
  2428     049F  0854               	movf	??_edit+1,w
  2429     04A0  00F5               	movwf	___awmod@dividend+1
  2430     04A1  120A  158A  26EF  120A  118A  	fcall	___awmod
  2431     04A6  0872               	movf	?___awmod,w
  2432     04A7  3E30               	addlw	48
  2433     04A8  120A  158A  2547  120A  118A  	fcall	_LCD_PutC
  2434     04AD                     l2311:
  2435                           
  2436                           ;code.c: 264:     blink();
  2437     04AD  120A  158A  2587  120A  118A  	fcall	_blink
  2438     04B2                     l2313:
  2439                           
  2440                           ;code.c: 266:     if(!RB0)
  2441     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  2442     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  2443     04B4  1806               	btfsc	6,0	;volatile
  2444     04B5  2CB7               	goto	u3091
  2445     04B6  2CB8               	goto	u3090
  2446     04B7                     u3091:
  2447     04B7  2C55               	goto	l2297
  2448     04B8                     u3090:
  2449     04B8                     l2315:
  2450                           
  2451                           ;code.c: 267:     if(debounce())
  2452     04B8  120A  158A  255E  120A  118A  	fcall	_debounce
  2453     04BD  1C03               	btfss	3,0
  2454     04BE  2CC0               	goto	u3101
  2455     04BF  2CC1               	goto	u3100
  2456     04C0                     u3101:
  2457     04C0  2C55               	goto	l2297
  2458     04C1                     u3100:
  2459     04C1                     l2317:
  2460                           
  2461                           ;code.c: 268:     {;code.c: 269:       i++;
  2462     04C1  3001               	movlw	1
  2463     04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2464     04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2465     04C4  00D3               	movwf	??_edit
  2466     04C5  0853               	movf	??_edit,w
  2467     04C6  07FB               	addwf	_i,f
  2468     04C7                     l2319:
  2469                           
  2470                           ;code.c: 270:       return parameter;
  2471     04C7  0852               	movf	edit@parameter,w
  2472     04C8                     l222:
  2473     04C8  0008               	return
  2474     04C9                     __end_of_edit:
  2475                           
  2476                           	psect	text5
  2477     0D5E                     __ptext5:	
  2478 ;; *************** function _debounce *****************
  2479 ;; Defined at:
  2480 ;;		line 103 in file "code.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  i               1    5[COMMON] unsigned char 
  2485 ;;  count           1    4[COMMON] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         2       0       0       0       0
  2497 ;;      Temps:          2       0       0       0       0
  2498 ;;      Totals:         4       0       0       0       0
  2499 ;;Total ram usage:        4 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_edit
  2506 ;;		_on_off
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511     0D5E                     _debounce:	
  2512                           ;psect for function _debounce
  2513                           
  2514     0D5E                     l2119:	
  2515                           ;incstack = 0
  2516                           ; Regs used in _debounce: [wreg+status,2+status,0]
  2517                           
  2518                           
  2519                           ;code.c: 105:   uint8_t count = 0;
  2520     0D5E  01F4               	clrf	debounce@count
  2521                           
  2522                           ;code.c: 106:   for(uint8_t i = 0; i < 6; i++) {
  2523     0D5F  01F5               	clrf	debounce@i
  2524     0D60                     l168:
  2525                           
  2526                           ;code.c: 107:     if (RB0 == 0)
  2527     0D60  1283               	bcf	3,5	;RP0=0, select bank0
  2528     0D61  1303               	bcf	3,6	;RP1=0, select bank0
  2529     0D62  1806               	btfsc	6,0	;volatile
  2530     0D63  2D65               	goto	u2771
  2531     0D64  2D66               	goto	u2770
  2532     0D65                     u2771:
  2533     0D65  2D6A               	goto	l2127
  2534     0D66                     u2770:
  2535     0D66                     l2125:
  2536                           
  2537                           ;code.c: 108:       count++;
  2538     0D66  3001               	movlw	1
  2539     0D67  00F2               	movwf	??_debounce
  2540     0D68  0872               	movf	??_debounce,w
  2541     0D69  07F4               	addwf	debounce@count,f
  2542     0D6A                     l2127:
  2543                           
  2544                           ;code.c: 109:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2545     0D6A  301A               	movlw	26
  2546     0D6B  00F3               	movwf	??_debounce+1
  2547     0D6C  30F8               	movlw	248
  2548     0D6D  00F2               	movwf	??_debounce
  2549     0D6E                     u3357:
  2550     0D6E  0BF2               	decfsz	??_debounce,f
  2551     0D6F  2D6E               	goto	u3357
  2552     0D70  0BF3               	decfsz	??_debounce+1,f
  2553     0D71  2D6E               	goto	u3357
  2554     0D72  0000               	nop
  2555     0D73                     l2129:
  2556                           
  2557                           ;code.c: 110:   }
  2558     0D73  3001               	movlw	1
  2559     0D74  00F2               	movwf	??_debounce
  2560     0D75  0872               	movf	??_debounce,w
  2561     0D76  07F5               	addwf	debounce@i,f
  2562     0D77  3006               	movlw	6
  2563     0D78  0275               	subwf	debounce@i,w
  2564     0D79  1C03               	skipc
  2565     0D7A  2D7C               	goto	u2781
  2566     0D7B  2D7D               	goto	u2780
  2567     0D7C                     u2781:
  2568     0D7C  2D60               	goto	l168
  2569     0D7D                     u2780:
  2570     0D7D                     l2131:
  2571                           
  2572                           ;code.c: 111:   if(count > 2) return 1;
  2573     0D7D  3003               	movlw	3
  2574     0D7E  0274               	subwf	debounce@count,w
  2575     0D7F  1C03               	skipc
  2576     0D80  2D82               	goto	u2791
  2577     0D81  2D83               	goto	u2790
  2578     0D82                     u2791:
  2579     0D82  2D85               	goto	l2139
  2580     0D83                     u2790:
  2581     0D83                     l2133:
  2582     0D83  1403               	setc
  2583     0D84  2D86               	goto	l172
  2584     0D85                     l2139:
  2585     0D85  1003               	clrc
  2586     0D86                     l172:
  2587     0D86  0008               	return
  2588     0D87                     __end_of_debounce:
  2589                           
  2590                           	psect	text6
  2591     0D87                     __ptext6:	
  2592 ;; *************** function _blink *****************
  2593 ;; Defined at:
  2594 ;;		line 218 in file "code.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  j               1    4[COMMON] unsigned char 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1    wreg      void 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2608 ;;      Params:         0       0       0       0       0
  2609 ;;      Locals:         1       0       0       0       0
  2610 ;;      Temps:          2       0       0       0       0
  2611 ;;      Totals:         3       0       0       0       0
  2612 ;;Total ram usage:        3 bytes
  2613 ;; Hardware stack levels used: 1
  2614 ;; Hardware stack levels required when called: 1
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_edit
  2619 ;;		_on_off
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     0D87                     _blink:	
  2624                           ;psect for function _blink
  2625                           
  2626     0D87                     l2155:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _blink: [wreg+status,2+status,0]
  2629                           
  2630                           
  2631                           ;code.c: 220:   uint8_t j = 0;
  2632     0D87  01F4               	clrf	blink@j
  2633                           
  2634                           ;code.c: 221:   while(j < 100 && RB0 && RB1 && (RB2 || i < 5)) {
  2635     0D88  2D96               	goto	l2161
  2636     0D89                     l2157:
  2637                           
  2638                           ;code.c: 222:     j++;
  2639     0D89  3001               	movlw	1
  2640     0D8A  00F2               	movwf	??_blink
  2641     0D8B  0872               	movf	??_blink,w
  2642     0D8C  07F4               	addwf	blink@j,f
  2643     0D8D                     l2159:
  2644                           
  2645                           ;code.c: 223:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2646     0D8D  300D               	movlw	13
  2647     0D8E  00F3               	movwf	??_blink+1
  2648     0D8F  30FB               	movlw	251
  2649     0D90  00F2               	movwf	??_blink
  2650     0D91                     u3367:
  2651     0D91  0BF2               	decfsz	??_blink,f
  2652     0D92  2D91               	goto	u3367
  2653     0D93  0BF3               	decfsz	??_blink+1,f
  2654     0D94  2D91               	goto	u3367
  2655     0D95  2D96               	nop2
  2656     0D96                     l2161:
  2657                           
  2658                           ;code.c: 221:   while(j < 100 && RB0 && RB1 && (RB2 || i < 5)) {
  2659     0D96  3064               	movlw	100
  2660     0D97  0274               	subwf	blink@j,w
  2661     0D98  1803               	skipnc
  2662     0D99  2D9B               	goto	u2801
  2663     0D9A  2D9C               	goto	u2800
  2664     0D9B                     u2801:
  2665     0D9B  2DB0               	goto	l204
  2666     0D9C                     u2800:
  2667     0D9C                     l2163:
  2668     0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2669     0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2670     0D9E  1C06               	btfss	6,0	;volatile
  2671     0D9F  2DA1               	goto	u2811
  2672     0DA0  2DA2               	goto	u2810
  2673     0DA1                     u2811:
  2674     0DA1  2DB0               	goto	l204
  2675     0DA2                     u2810:
  2676     0DA2                     l2165:
  2677     0DA2  1C86               	btfss	6,1	;volatile
  2678     0DA3  2DA5               	goto	u2821
  2679     0DA4  2DA6               	goto	u2820
  2680     0DA5                     u2821:
  2681     0DA5  2DB0               	goto	l204
  2682     0DA6                     u2820:
  2683     0DA6                     l2167:
  2684     0DA6  1906               	btfsc	6,2	;volatile
  2685     0DA7  2DA9               	goto	u2831
  2686     0DA8  2DAA               	goto	u2830
  2687     0DA9                     u2831:
  2688     0DA9  2D89               	goto	l2157
  2689     0DAA                     u2830:
  2690     0DAA                     l2169:
  2691     0DAA  3005               	movlw	5
  2692     0DAB  027B               	subwf	_i,w
  2693     0DAC  1C03               	skipc
  2694     0DAD  2DAF               	goto	u2841
  2695     0DAE  2DB0               	goto	u2840
  2696     0DAF                     u2841:
  2697     0DAF  2D89               	goto	l2157
  2698     0DB0                     u2840:
  2699     0DB0                     l204:
  2700     0DB0  0008               	return
  2701     0DB1                     __end_of_blink:
  2702                           
  2703                           	psect	text7
  2704     0D47                     __ptext7:	
  2705 ;; *************** function _LCD_PutC *****************
  2706 ;; Defined at:
  2707 ;;		line 89 in file "./lcd.h"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  LCD_Char        1    wreg     unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  LCD_Char        1    5[COMMON] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       0       0       0       0
  2722 ;;      Locals:         1       0       0       0       0
  2723 ;;      Temps:          1       0       0       0       0
  2724 ;;      Totals:         2       0       0       0       0
  2725 ;;Total ram usage:        2 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 2
  2728 ;; This function calls:
  2729 ;;		_LCD_Write_Nibble
  2730 ;; This function is called by:
  2731 ;;		_edit
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735     0D47                     _LCD_PutC:	
  2736                           ;psect for function _LCD_PutC
  2737                           
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _LCD_PutC: [wreg+status,2+status,0+pclath+cstack]
  2741                           ;LCD_PutC@LCD_Char stored from wreg
  2742     0D47  00F5               	movwf	LCD_PutC@LCD_Char
  2743     0D48                     l2115:
  2744                           
  2745                           ;./lcd.h: 89: void LCD_PutC(char LCD_Char);./lcd.h: 90: {;./lcd.h: 91:   RS = 1;
  2746     0D48  147A               	bsf	_RS/(0+8),_RS& (0+7)
  2747     0D49                     l2117:
  2748                           
  2749                           ;./lcd.h: 92:   LCD_Write_Nibble(LCD_Char >> 4);
  2750     0D49  0875               	movf	LCD_PutC@LCD_Char,w
  2751     0D4A  00F4               	movwf	??_LCD_PutC
  2752     0D4B  3004               	movlw	4
  2753     0D4C                     u2765:
  2754     0D4C  1003               	clrc
  2755     0D4D  0CF4               	rrf	??_LCD_PutC,f
  2756     0D4E  3EFF               	addlw	-1
  2757     0D4F  1D03               	skipz
  2758     0D50  2D4C               	goto	u2765
  2759     0D51  0874               	movf	??_LCD_PutC,w
  2760     0D52  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  2761                           
  2762                           ;./lcd.h: 93:   LCD_Write_Nibble(LCD_Char );
  2763     0D57  0875               	movf	LCD_PutC@LCD_Char,w
  2764     0D58  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  2765     0D5D                     l89:
  2766     0D5D  0008               	return
  2767     0D5E                     __end_of_LCD_PutC:
  2768                           
  2769                           	psect	text8
  2770     07CE                     __ptext8:	
  2771 ;; *************** function _decimal_to_bcd *****************
  2772 ;; Defined at:
  2773 ;;		line 122 in file "code.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  number          1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  number          1    9[COMMON] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      unsigned char 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0, pclath, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0
  2789 ;;      Temps:          0       5       0       0       0
  2790 ;;      Totals:         1       5       0       0       0
  2791 ;;Total ram usage:        6 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 2
  2794 ;; This function calls:
  2795 ;;		___awdiv
  2796 ;;		___awmod
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802     07CE                     _decimal_to_bcd:	
  2803                           ;psect for function _decimal_to_bcd
  2804                           
  2805                           
  2806                           ;incstack = 0
  2807                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  2808                           ;decimal_to_bcd@number stored from wreg
  2809     07CE  00F9               	movwf	decimal_to_bcd@number
  2810     07CF                     l2227:
  2811                           
  2812                           ;code.c: 123:   return(((number / 10) << 4) + (number % 10));
  2813     07CF  300A               	movlw	10
  2814     07D0  00F2               	movwf	___awdiv@divisor
  2815     07D1  3000               	movlw	0
  2816     07D2  00F3               	movwf	___awdiv@divisor+1
  2817     07D3  0879               	movf	decimal_to_bcd@number,w
  2818     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  2819     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  2820     07D6  00D1               	movwf	??_decimal_to_bcd
  2821     07D7  01D2               	clrf	??_decimal_to_bcd+1
  2822     07D8  0851               	movf	??_decimal_to_bcd,w
  2823     07D9  00F4               	movwf	___awdiv@dividend
  2824     07DA  0852               	movf	??_decimal_to_bcd+1,w
  2825     07DB  00F5               	movwf	___awdiv@dividend+1
  2826     07DC  120A  118A  26FD  120A  118A  	fcall	___awdiv
  2827     07E1  0872               	movf	?___awdiv,w
  2828     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  2829     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  2830     07E4  00D3               	movwf	??_decimal_to_bcd+2
  2831     07E5  3004               	movlw	4
  2832     07E6                     u2935:
  2833     07E6  1003               	clrc
  2834     07E7  0DD3               	rlf	??_decimal_to_bcd+2,f
  2835     07E8  3EFF               	addlw	-1
  2836     07E9  1D03               	skipz
  2837     07EA  2FE6               	goto	u2935
  2838     07EB  300A               	movlw	10
  2839     07EC  00F2               	movwf	___awmod@divisor
  2840     07ED  3000               	movlw	0
  2841     07EE  00F3               	movwf	___awmod@divisor+1
  2842     07EF  0879               	movf	decimal_to_bcd@number,w
  2843     07F0  00D4               	movwf	??_decimal_to_bcd+3
  2844     07F1  01D5               	clrf	??_decimal_to_bcd+4
  2845     07F2  0854               	movf	??_decimal_to_bcd+3,w
  2846     07F3  00F4               	movwf	___awmod@dividend
  2847     07F4  0855               	movf	??_decimal_to_bcd+4,w
  2848     07F5  00F5               	movwf	___awmod@dividend+1
  2849     07F6  120A  158A  26EF  120A  118A  	fcall	___awmod
  2850     07FB  0872               	movf	?___awmod,w
  2851     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  2852     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  2853     07FE  0753               	addwf	??_decimal_to_bcd+2,w
  2854     07FF                     l179:
  2855     07FF  0008               	return
  2856     0800                     __end_of_decimal_to_bcd:
  2857                           
  2858                           	psect	text9
  2859     04C9                     __ptext9:	
  2860 ;; *************** function _alarm_set *****************
  2861 ;; Defined at:
  2862 ;;		line 177 in file "code.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  control_reg     1    6[BANK0 ] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         0       0       0       0       0
  2877 ;;      Locals:         0       1       0       0       0
  2878 ;;      Temps:          0       2       0       0       0
  2879 ;;      Totals:         0       3       0       0       0
  2880 ;;Total ram usage:        3 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 4
  2883 ;; This function calls:
  2884 ;;		_I2C_Read
  2885 ;;		_I2C_Repeated_Start
  2886 ;;		_I2C_Start
  2887 ;;		_I2C_Stop
  2888 ;;		_I2C_Write
  2889 ;;		_LCD_Goto
  2890 ;;		_LCD_Print
  2891 ;;		___awdiv
  2892 ;;		___awmod
  2893 ;;		_bcd_to_decimal
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899     04C9                     _alarm_set:	
  2900                           ;psect for function _alarm_set
  2901                           
  2902     04C9                     l2231:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _alarm_set: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2905                           
  2906                           
  2907                           ;code.c: 179:     static char Alarm[] = "AL: 00:00:00";;code.c: 180:     uint8_t control
      +                          _reg;;code.c: 181:   I2C_Start();
  2908     04C9  120A  158A  24CC  120A  118A  	fcall	_I2C_Start
  2909                           
  2910                           ;code.c: 182:   I2C_Write(0xD0);
  2911     04CE  30D0               	movlw	208
  2912     04CF  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  2913                           
  2914                           ;code.c: 183:   I2C_Write(0x08);
  2915     04D4  3008               	movlw	8
  2916     04D5  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  2917                           
  2918                           ;code.c: 184:   I2C_Repeated_Start();
  2919     04DA  120A  158A  24BE  120A  118A  	fcall	_I2C_Repeated_Start
  2920                           
  2921                           ;code.c: 185:   I2C_Write(0xD1);
  2922     04DF  30D1               	movlw	209
  2923     04E0  120A  158A  24F7  120A  118A  	fcall	_I2C_Write
  2924                           
  2925                           ;code.c: 186:   alarm_minute = I2C_Read(1);
  2926     04E5  3001               	movlw	1
  2927     04E6  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2928     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2929     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2930     04ED  00E1               	movwf	_alarm_minute
  2931                           
  2932                           ;code.c: 187:   alarm_hour = I2C_Read(1);
  2933     04EE  3001               	movlw	1
  2934     04EF  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2935     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  2936     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  2937     04F6  00E0               	movwf	_alarm_hour
  2938                           
  2939                           ;code.c: 188:   I2C_Read(1);
  2940     04F7  3001               	movlw	1
  2941     04F8  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2942                           
  2943                           ;code.c: 189:   control_reg = I2C_Read(1);
  2944     04FD  3001               	movlw	1
  2945     04FE  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2946     0503  1283               	bcf	3,5	;RP0=0, select bank0
  2947     0504  1303               	bcf	3,6	;RP1=0, select bank0
  2948     0505  00D3               	movwf	alarm_set@control_reg
  2949                           
  2950                           ;code.c: 190:   status_reg = I2C_Read(1);
  2951     0506  3001               	movlw	1
  2952     0507  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2953     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2954     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2955     050E  00DF               	movwf	_status_reg
  2956                           
  2957                           ;code.c: 191:   I2C_Read(1);
  2958     050F  3001               	movlw	1
  2959     0510  120A  158A  263A  120A  118A  	fcall	_I2C_Read
  2960                           
  2961                           ;code.c: 192:   I2C_Stop();
  2962     0515  120A  158A  24DA  120A  118A  	fcall	_I2C_Stop
  2963                           
  2964                           ;code.c: 194:   alarm_minute = bcd_to_decimal(alarm_minute);
  2965     051A  1283               	bcf	3,5	;RP0=0, select bank0
  2966     051B  1303               	bcf	3,6	;RP1=0, select bank0
  2967     051C  0861               	movf	_alarm_minute,w
  2968     051D  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  2969     0522  1283               	bcf	3,5	;RP0=0, select bank0
  2970     0523  1303               	bcf	3,6	;RP1=0, select bank0
  2971     0524  00E1               	movwf	_alarm_minute
  2972                           
  2973                           ;code.c: 195:   alarm_hour = bcd_to_decimal(alarm_hour);
  2974     0525  0860               	movf	_alarm_hour,w
  2975     0526  120A  158A  2531  120A  118A  	fcall	_bcd_to_decimal
  2976     052B  1283               	bcf	3,5	;RP0=0, select bank0
  2977     052C  1303               	bcf	3,6	;RP1=0, select bank0
  2978     052D  00E0               	movwf	_alarm_hour
  2979                           
  2980                           ;code.c: 198:   Alarm[8] = alarm_minute % 10 + '0';
  2981     052E  300A               	movlw	10
  2982     052F  00F2               	movwf	___awmod@divisor
  2983     0530  3000               	movlw	0
  2984     0531  00F3               	movwf	___awmod@divisor+1
  2985     0532  0861               	movf	_alarm_minute,w
  2986     0533  00D1               	movwf	??_alarm_set
  2987     0534  01D2               	clrf	??_alarm_set+1
  2988     0535  0851               	movf	??_alarm_set,w
  2989     0536  00F4               	movwf	___awmod@dividend
  2990     0537  0852               	movf	??_alarm_set+1,w
  2991     0538  00F5               	movwf	___awmod@dividend+1
  2992     0539  120A  158A  26EF  120A  118A  	fcall	___awmod
  2993     053E  0872               	movf	?___awmod,w
  2994     053F  3E30               	addlw	48
  2995     0540  1283               	bcf	3,5	;RP0=0, select bank0
  2996     0541  1303               	bcf	3,6	;RP1=0, select bank0
  2997     0542  00C8               	movwf	alarm_set@Alarm+8
  2998                           
  2999                           ;code.c: 199:   Alarm[7] = alarm_minute / 10 + '0';
  3000     0543  300A               	movlw	10
  3001     0544  00F2               	movwf	___awdiv@divisor
  3002     0545  3000               	movlw	0
  3003     0546  00F3               	movwf	___awdiv@divisor+1
  3004     0547  0861               	movf	_alarm_minute,w
  3005     0548  00D1               	movwf	??_alarm_set
  3006     0549  01D2               	clrf	??_alarm_set+1
  3007     054A  0851               	movf	??_alarm_set,w
  3008     054B  00F4               	movwf	___awdiv@dividend
  3009     054C  0852               	movf	??_alarm_set+1,w
  3010     054D  00F5               	movwf	___awdiv@dividend+1
  3011     054E  120A  118A  26FD  120A  118A  	fcall	___awdiv
  3012     0553  0872               	movf	?___awdiv,w
  3013     0554  3E30               	addlw	48
  3014     0555  1283               	bcf	3,5	;RP0=0, select bank0
  3015     0556  1303               	bcf	3,6	;RP1=0, select bank0
  3016     0557  00C7               	movwf	alarm_set@Alarm+7
  3017                           
  3018                           ;code.c: 200:   Alarm[5] = alarm_hour % 10 + '0';
  3019     0558  300A               	movlw	10
  3020     0559  00F2               	movwf	___awmod@divisor
  3021     055A  3000               	movlw	0
  3022     055B  00F3               	movwf	___awmod@divisor+1
  3023     055C  0860               	movf	_alarm_hour,w
  3024     055D  00D1               	movwf	??_alarm_set
  3025     055E  01D2               	clrf	??_alarm_set+1
  3026     055F  0851               	movf	??_alarm_set,w
  3027     0560  00F4               	movwf	___awmod@dividend
  3028     0561  0852               	movf	??_alarm_set+1,w
  3029     0562  00F5               	movwf	___awmod@dividend+1
  3030     0563  120A  158A  26EF  120A  118A  	fcall	___awmod
  3031     0568  0872               	movf	?___awmod,w
  3032     0569  3E30               	addlw	48
  3033     056A  1283               	bcf	3,5	;RP0=0, select bank0
  3034     056B  1303               	bcf	3,6	;RP1=0, select bank0
  3035     056C  00C5               	movwf	alarm_set@Alarm+5
  3036                           
  3037                           ;code.c: 201:   Alarm[4] = alarm_hour / 10 + '0';
  3038     056D  300A               	movlw	10
  3039     056E  00F2               	movwf	___awdiv@divisor
  3040     056F  3000               	movlw	0
  3041     0570  00F3               	movwf	___awdiv@divisor+1
  3042     0571  0860               	movf	_alarm_hour,w
  3043     0572  00D1               	movwf	??_alarm_set
  3044     0573  01D2               	clrf	??_alarm_set+1
  3045     0574  0851               	movf	??_alarm_set,w
  3046     0575  00F4               	movwf	___awdiv@dividend
  3047     0576  0852               	movf	??_alarm_set+1,w
  3048     0577  00F5               	movwf	___awdiv@dividend+1
  3049     0578  120A  118A  26FD  120A  118A  	fcall	___awdiv
  3050     057D  0872               	movf	?___awdiv,w
  3051     057E  3E30               	addlw	48
  3052     057F  1283               	bcf	3,5	;RP0=0, select bank0
  3053     0580  1303               	bcf	3,6	;RP1=0, select bank0
  3054     0581  00C4               	movwf	alarm_set@Alarm+4
  3055     0582                     l2233:
  3056                           
  3057                           ;code.c: 202:   alarm_status = control_reg & 0x01;
  3058     0582  0853               	movf	alarm_set@control_reg,w
  3059     0583  3901               	andlw	1
  3060     0584  00DE               	movwf	_alarm_status
  3061     0585                     l2235:
  3062                           
  3063                           ;code.c: 204:   LCD_Goto(1,3);
  3064     0585  3003               	movlw	3
  3065     0586  00F7               	movwf	LCD_Goto@row
  3066     0587  3001               	movlw	1
  3067     0588  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  3068     058D                     l2237:
  3069                           
  3070                           ;code.c: 205:   LCD_Print(Alarm);
  3071     058D  3040               	movlw	(low (alarm_set@Alarm| 0))& (0+255)
  3072     058E  00F4               	movwf	LCD_Print@LCD_Str
  3073     058F  3000               	movlw	0
  3074     0590  00F5               	movwf	LCD_Print@LCD_Str+1
  3075     0591  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  3076     0596                     l2239:
  3077                           
  3078                           ;code.c: 206:   if(alarm_status)
  3079     0596  1283               	bcf	3,5	;RP0=0, select bank0
  3080     0597  1303               	bcf	3,6	;RP1=0, select bank0
  3081     0598  085E               	movf	_alarm_status,w
  3082     0599  1903               	btfsc	3,2
  3083     059A  2D9C               	goto	u2941
  3084     059B  2D9D               	goto	u2940
  3085     059C                     u2941:
  3086     059C  2DAF               	goto	l2245
  3087     059D                     u2940:
  3088     059D                     l2241:
  3089                           
  3090                           ;code.c: 207:   {;code.c: 208:       LCD_Goto(18,3);
  3091     059D  3003               	movlw	3
  3092     059E  00F7               	movwf	LCD_Goto@row
  3093     059F  3012               	movlw	18
  3094     05A0  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  3095     05A5                     l2243:
  3096                           
  3097                           ;code.c: 209:       LCD_Print("OFF");
  3098     05A5  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3099     05A6  00F4               	movwf	LCD_Print@LCD_Str
  3100     05A7  3080               	movlw	128
  3101     05A8  00F5               	movwf	LCD_Print@LCD_Str+1
  3102     05A9  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  3103                           
  3104                           ;code.c: 210:   }
  3105     05AE  2DC0               	goto	l196
  3106     05AF                     l2245:
  3107                           
  3108                           ;code.c: 212:   {;code.c: 213:       LCD_Goto(18,3);
  3109     05AF  3003               	movlw	3
  3110     05B0  00F7               	movwf	LCD_Goto@row
  3111     05B1  3012               	movlw	18
  3112     05B2  120A  158A  2670  120A  118A  	fcall	_LCD_Goto
  3113     05B7                     l2247:
  3114                           
  3115                           ;code.c: 214:       LCD_Print("ON");
  3116     05B7  300C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3117     05B8  00F4               	movwf	LCD_Print@LCD_Str
  3118     05B9  3080               	movlw	128
  3119     05BA  00F5               	movwf	LCD_Print@LCD_Str+1
  3120     05BB  120A  158A  26A8  120A  118A  	fcall	_LCD_Print
  3121     05C0                     l196:
  3122     05C0  0008               	return
  3123     05C1                     __end_of_alarm_set:
  3124                           
  3125                           	psect	text10
  3126     0D31                     __ptext10:	
  3127 ;; *************** function _bcd_to_decimal *****************
  3128 ;; Defined at:
  3129 ;;		line 117 in file "code.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  number          1    wreg     unsigned char 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  number          1    8[COMMON] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      unsigned char 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         1       0       0       0       0
  3145 ;;      Temps:          2       0       0       0       0
  3146 ;;      Totals:         3       0       0       0       0
  3147 ;;Total ram usage:        3 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 2
  3150 ;; This function calls:
  3151 ;;		___bmul
  3152 ;; This function is called by:
  3153 ;;		_RTC_display
  3154 ;;		_alarm_set
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158     0D31                     _bcd_to_decimal:	
  3159                           ;psect for function _bcd_to_decimal
  3160                           
  3161                           
  3162                           ;incstack = 0
  3163                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  3164                           ;bcd_to_decimal@number stored from wreg
  3165     0D31  00F8               	movwf	bcd_to_decimal@number
  3166     0D32                     l2029:
  3167                           
  3168                           ;code.c: 118:   return((number >> 4) * 10 + (number & 0x0F));
  3169     0D32  300F               	movlw	15
  3170     0D33  0578               	andwf	bcd_to_decimal@number,w
  3171     0D34  00F6               	movwf	??_bcd_to_decimal
  3172     0D35  300A               	movlw	10
  3173     0D36  00F2               	movwf	___bmul@multiplicand
  3174     0D37  0878               	movf	bcd_to_decimal@number,w
  3175     0D38  00F7               	movwf	??_bcd_to_decimal+1
  3176     0D39  3004               	movlw	4
  3177     0D3A                     u2565:
  3178     0D3A  1003               	clrc
  3179     0D3B  0CF7               	rrf	??_bcd_to_decimal+1,f
  3180     0D3C  3EFF               	addlw	-1
  3181     0D3D  1D03               	skipz
  3182     0D3E  2D3A               	goto	u2565
  3183     0D3F  0877               	movf	??_bcd_to_decimal+1,w
  3184     0D40  120A  158A  251C  120A  158A  	fcall	___bmul
  3185     0D45  0776               	addwf	??_bcd_to_decimal,w
  3186     0D46                     l176:
  3187     0D46  0008               	return
  3188     0D47                     __end_of_bcd_to_decimal:
  3189                           
  3190                           	psect	text11
  3191     0D1C                     __ptext11:	
  3192 ;; *************** function ___bmul *****************
  3193 ;; Defined at:
  3194 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  multiplier      1    wreg     unsigned char 
  3197 ;;  multiplicand    1    2[COMMON] unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  multiplier      1    5[COMMON] unsigned char 
  3200 ;;  product         1    4[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         1       0       0       0       0
  3211 ;;      Locals:         2       0       0       0       0
  3212 ;;      Temps:          1       0       0       0       0
  3213 ;;      Totals:         4       0       0       0       0
  3214 ;;Total ram usage:        4 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 1
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_bcd_to_decimal
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224     0D1C                     ___bmul:	
  3225                           ;psect for function ___bmul
  3226                           
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3230                           ;___bmul@multiplier stored from wreg
  3231     0D1C  00F5               	movwf	___bmul@multiplier
  3232     0D1D                     l1951:
  3233     0D1D  01F4               	clrf	___bmul@product
  3234     0D1E                     l1953:
  3235     0D1E  1C75               	btfss	___bmul@multiplier,0
  3236     0D1F  2D21               	goto	u2361
  3237     0D20  2D22               	goto	u2360
  3238     0D21                     u2361:
  3239     0D21  2D26               	goto	l1957
  3240     0D22                     u2360:
  3241     0D22                     l1955:
  3242     0D22  0872               	movf	___bmul@multiplicand,w
  3243     0D23  00F3               	movwf	??___bmul
  3244     0D24  0873               	movf	??___bmul,w
  3245     0D25  07F4               	addwf	___bmul@product,f
  3246     0D26                     l1957:
  3247     0D26  1003               	clrc
  3248     0D27  0DF2               	rlf	___bmul@multiplicand,f
  3249     0D28                     l1959:
  3250     0D28  1003               	clrc
  3251     0D29  0CF5               	rrf	___bmul@multiplier,f
  3252     0D2A  0875               	movf	___bmul@multiplier,w
  3253     0D2B  1D03               	btfss	3,2
  3254     0D2C  2D2E               	goto	u2371
  3255     0D2D  2D2F               	goto	u2370
  3256     0D2E                     u2371:
  3257     0D2E  2D1E               	goto	l1953
  3258     0D2F                     u2370:
  3259     0D2F                     l1961:
  3260     0D2F  0874               	movf	___bmul@product,w
  3261     0D30                     l373:
  3262     0D30  0008               	return
  3263     0D31                     __end_of___bmul:
  3264                           
  3265                           	psect	text12
  3266     0EEF                     __ptext12:	
  3267 ;; *************** function ___awmod *****************
  3268 ;; Defined at:
  3269 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  divisor         2    2[COMMON] int 
  3272 ;;  dividend        2    4[COMMON] int 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  sign            1    8[COMMON] unsigned char 
  3275 ;;  counter         1    7[COMMON] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  2    2[COMMON] int 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3285 ;;      Params:         4       0       0       0       0
  3286 ;;      Locals:         2       0       0       0       0
  3287 ;;      Temps:          1       0       0       0       0
  3288 ;;      Totals:         7       0       0       0       0
  3289 ;;Total ram usage:        7 bytes
  3290 ;; Hardware stack levels used: 1
  3291 ;; Hardware stack levels required when called: 1
  3292 ;; This function calls:
  3293 ;;		Nothing
  3294 ;; This function is called by:
  3295 ;;		_decimal_to_bcd
  3296 ;;		_RTC_display
  3297 ;;		_alarm_set
  3298 ;;		_edit
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302     0EEF                     ___awmod:	
  3303                           ;psect for function ___awmod
  3304                           
  3305     0EEF                     l2077:	
  3306                           ;incstack = 0
  3307                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3308                           
  3309     0EEF  01F8               	clrf	___awmod@sign
  3310     0EF0                     l2079:
  3311     0EF0  1FF5               	btfss	___awmod@dividend+1,7
  3312     0EF1  2EF3               	goto	u2671
  3313     0EF2  2EF4               	goto	u2670
  3314     0EF3                     u2671:
  3315     0EF3  2EFB               	goto	l2085
  3316     0EF4                     u2670:
  3317     0EF4                     l2081:
  3318     0EF4  09F4               	comf	___awmod@dividend,f
  3319     0EF5  09F5               	comf	___awmod@dividend+1,f
  3320     0EF6  0AF4               	incf	___awmod@dividend,f
  3321     0EF7  1903               	skipnz
  3322     0EF8  0AF5               	incf	___awmod@dividend+1,f
  3323     0EF9                     l2083:
  3324     0EF9  01F8               	clrf	___awmod@sign
  3325     0EFA  0AF8               	incf	___awmod@sign,f
  3326     0EFB                     l2085:
  3327     0EFB  1FF3               	btfss	___awmod@divisor+1,7
  3328     0EFC  2EFE               	goto	u2681
  3329     0EFD  2EFF               	goto	u2680
  3330     0EFE                     u2681:
  3331     0EFE  2F04               	goto	l2089
  3332     0EFF                     u2680:
  3333     0EFF                     l2087:
  3334     0EFF  09F2               	comf	___awmod@divisor,f
  3335     0F00  09F3               	comf	___awmod@divisor+1,f
  3336     0F01  0AF2               	incf	___awmod@divisor,f
  3337     0F02  1903               	skipnz
  3338     0F03  0AF3               	incf	___awmod@divisor+1,f
  3339     0F04                     l2089:
  3340     0F04  0872               	movf	___awmod@divisor,w
  3341     0F05  0473               	iorwf	___awmod@divisor+1,w
  3342     0F06  1903               	btfsc	3,2
  3343     0F07  2F09               	goto	u2691
  3344     0F08  2F0A               	goto	u2690
  3345     0F09                     u2691:
  3346     0F09  2F39               	goto	l2107
  3347     0F0A                     u2690:
  3348     0F0A                     l2091:
  3349     0F0A  01F7               	clrf	___awmod@counter
  3350     0F0B  0AF7               	incf	___awmod@counter,f
  3351     0F0C  2F18               	goto	l2097
  3352     0F0D                     l2093:
  3353     0F0D  3001               	movlw	1
  3354     0F0E                     u2705:
  3355     0F0E  1003               	clrc
  3356     0F0F  0DF2               	rlf	___awmod@divisor,f
  3357     0F10  0DF3               	rlf	___awmod@divisor+1,f
  3358     0F11  3EFF               	addlw	-1
  3359     0F12  1D03               	skipz
  3360     0F13  2F0E               	goto	u2705
  3361     0F14                     l2095:
  3362     0F14  3001               	movlw	1
  3363     0F15  00F6               	movwf	??___awmod
  3364     0F16  0876               	movf	??___awmod,w
  3365     0F17  07F7               	addwf	___awmod@counter,f
  3366     0F18                     l2097:
  3367     0F18  1FF3               	btfss	___awmod@divisor+1,7
  3368     0F19  2F1B               	goto	u2711
  3369     0F1A  2F1C               	goto	u2710
  3370     0F1B                     u2711:
  3371     0F1B  2F0D               	goto	l2093
  3372     0F1C                     u2710:
  3373     0F1C                     l2099:
  3374     0F1C  0873               	movf	___awmod@divisor+1,w
  3375     0F1D  0275               	subwf	___awmod@dividend+1,w
  3376     0F1E  1D03               	skipz
  3377     0F1F  2F22               	goto	u2725
  3378     0F20  0872               	movf	___awmod@divisor,w
  3379     0F21  0274               	subwf	___awmod@dividend,w
  3380     0F22                     u2725:
  3381     0F22  1C03               	skipc
  3382     0F23  2F25               	goto	u2721
  3383     0F24  2F26               	goto	u2720
  3384     0F25                     u2721:
  3385     0F25  2F2C               	goto	l2103
  3386     0F26                     u2720:
  3387     0F26                     l2101:
  3388     0F26  0872               	movf	___awmod@divisor,w
  3389     0F27  02F4               	subwf	___awmod@dividend,f
  3390     0F28  0873               	movf	___awmod@divisor+1,w
  3391     0F29  1C03               	skipc
  3392     0F2A  03F5               	decf	___awmod@dividend+1,f
  3393     0F2B  02F5               	subwf	___awmod@dividend+1,f
  3394     0F2C                     l2103:
  3395     0F2C  3001               	movlw	1
  3396     0F2D                     u2735:
  3397     0F2D  1003               	clrc
  3398     0F2E  0CF3               	rrf	___awmod@divisor+1,f
  3399     0F2F  0CF2               	rrf	___awmod@divisor,f
  3400     0F30  3EFF               	addlw	-1
  3401     0F31  1D03               	skipz
  3402     0F32  2F2D               	goto	u2735
  3403     0F33                     l2105:
  3404     0F33  3001               	movlw	1
  3405     0F34  02F7               	subwf	___awmod@counter,f
  3406     0F35  1D03               	btfss	3,2
  3407     0F36  2F38               	goto	u2741
  3408     0F37  2F39               	goto	u2740
  3409     0F38                     u2741:
  3410     0F38  2F1C               	goto	l2099
  3411     0F39                     u2740:
  3412     0F39                     l2107:
  3413     0F39  0878               	movf	___awmod@sign,w
  3414     0F3A  1903               	btfsc	3,2
  3415     0F3B  2F3D               	goto	u2751
  3416     0F3C  2F3E               	goto	u2750
  3417     0F3D                     u2751:
  3418     0F3D  2F43               	goto	l2111
  3419     0F3E                     u2750:
  3420     0F3E                     l2109:
  3421     0F3E  09F4               	comf	___awmod@dividend,f
  3422     0F3F  09F5               	comf	___awmod@dividend+1,f
  3423     0F40  0AF4               	incf	___awmod@dividend,f
  3424     0F41  1903               	skipnz
  3425     0F42  0AF5               	incf	___awmod@dividend+1,f
  3426     0F43                     l2111:
  3427     0F43  0875               	movf	___awmod@dividend+1,w
  3428     0F44  00F3               	movwf	?___awmod+1
  3429     0F45  0874               	movf	___awmod@dividend,w
  3430     0F46  00F2               	movwf	?___awmod
  3431     0F47                     l513:
  3432     0F47  0008               	return
  3433     0F48                     __end_of___awmod:
  3434                           
  3435                           	psect	text13
  3436     06FD                     __ptext13:	
  3437 ;; *************** function ___awdiv *****************
  3438 ;; Defined at:
  3439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  divisor         2    2[COMMON] int 
  3442 ;;  dividend        2    4[COMMON] int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  quotient        2    2[BANK0 ] int 
  3445 ;;  sign            1    1[BANK0 ] unsigned char 
  3446 ;;  counter         1    0[BANK0 ] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2    2[COMMON] int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         4       0       0       0       0
  3457 ;;      Locals:         0       4       0       0       0
  3458 ;;      Temps:          1       0       0       0       0
  3459 ;;      Totals:         5       4       0       0       0
  3460 ;;Total ram usage:        9 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_decimal_to_bcd
  3467 ;;		_RTC_display
  3468 ;;		_alarm_set
  3469 ;;		_edit
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     06FD                     ___awdiv:	
  3474                           ;psect for function ___awdiv
  3475                           
  3476     06FD                     l2033:	
  3477                           ;incstack = 0
  3478                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3479                           
  3480     06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3481     06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3482     06FF  01CE               	clrf	___awdiv@sign
  3483     0700                     l2035:
  3484     0700  1FF3               	btfss	___awdiv@divisor+1,7
  3485     0701  2F03               	goto	u2571
  3486     0702  2F04               	goto	u2570
  3487     0703                     u2571:
  3488     0703  2F0B               	goto	l2041
  3489     0704                     u2570:
  3490     0704                     l2037:
  3491     0704  09F2               	comf	___awdiv@divisor,f
  3492     0705  09F3               	comf	___awdiv@divisor+1,f
  3493     0706  0AF2               	incf	___awdiv@divisor,f
  3494     0707  1903               	skipnz
  3495     0708  0AF3               	incf	___awdiv@divisor+1,f
  3496     0709                     l2039:
  3497     0709  01CE               	clrf	___awdiv@sign
  3498     070A  0ACE               	incf	___awdiv@sign,f
  3499     070B                     l2041:
  3500     070B  1FF5               	btfss	___awdiv@dividend+1,7
  3501     070C  2F0E               	goto	u2581
  3502     070D  2F0F               	goto	u2580
  3503     070E                     u2581:
  3504     070E  2F18               	goto	l2047
  3505     070F                     u2580:
  3506     070F                     l2043:
  3507     070F  09F4               	comf	___awdiv@dividend,f
  3508     0710  09F5               	comf	___awdiv@dividend+1,f
  3509     0711  0AF4               	incf	___awdiv@dividend,f
  3510     0712  1903               	skipnz
  3511     0713  0AF5               	incf	___awdiv@dividend+1,f
  3512     0714                     l2045:
  3513     0714  3001               	movlw	1
  3514     0715  00F6               	movwf	??___awdiv
  3515     0716  0876               	movf	??___awdiv,w
  3516     0717  06CE               	xorwf	___awdiv@sign,f
  3517     0718                     l2047:
  3518     0718  01CF               	clrf	___awdiv@quotient
  3519     0719  01D0               	clrf	___awdiv@quotient+1
  3520     071A                     l2049:
  3521     071A  0872               	movf	___awdiv@divisor,w
  3522     071B  0473               	iorwf	___awdiv@divisor+1,w
  3523     071C  1903               	btfsc	3,2
  3524     071D  2F1F               	goto	u2591
  3525     071E  2F20               	goto	u2590
  3526     071F                     u2591:
  3527     071F  2F57               	goto	l2069
  3528     0720                     u2590:
  3529     0720                     l2051:
  3530     0720  01CD               	clrf	___awdiv@counter
  3531     0721  0ACD               	incf	___awdiv@counter,f
  3532     0722  2F2E               	goto	l2057
  3533     0723                     l2053:
  3534     0723  3001               	movlw	1
  3535     0724                     u2605:
  3536     0724  1003               	clrc
  3537     0725  0DF2               	rlf	___awdiv@divisor,f
  3538     0726  0DF3               	rlf	___awdiv@divisor+1,f
  3539     0727  3EFF               	addlw	-1
  3540     0728  1D03               	skipz
  3541     0729  2F24               	goto	u2605
  3542     072A                     l2055:
  3543     072A  3001               	movlw	1
  3544     072B  00F6               	movwf	??___awdiv
  3545     072C  0876               	movf	??___awdiv,w
  3546     072D  07CD               	addwf	___awdiv@counter,f
  3547     072E                     l2057:
  3548     072E  1FF3               	btfss	___awdiv@divisor+1,7
  3549     072F  2F31               	goto	u2611
  3550     0730  2F32               	goto	u2610
  3551     0731                     u2611:
  3552     0731  2F23               	goto	l2053
  3553     0732                     u2610:
  3554     0732                     l2059:
  3555     0732  3001               	movlw	1
  3556     0733                     u2625:
  3557     0733  1003               	clrc
  3558     0734  0DCF               	rlf	___awdiv@quotient,f
  3559     0735  0DD0               	rlf	___awdiv@quotient+1,f
  3560     0736  3EFF               	addlw	-1
  3561     0737  1D03               	skipz
  3562     0738  2F33               	goto	u2625
  3563     0739  0873               	movf	___awdiv@divisor+1,w
  3564     073A  0275               	subwf	___awdiv@dividend+1,w
  3565     073B  1D03               	skipz
  3566     073C  2F3F               	goto	u2635
  3567     073D  0872               	movf	___awdiv@divisor,w
  3568     073E  0274               	subwf	___awdiv@dividend,w
  3569     073F                     u2635:
  3570     073F  1C03               	skipc
  3571     0740  2F42               	goto	u2631
  3572     0741  2F43               	goto	u2630
  3573     0742                     u2631:
  3574     0742  2F4A               	goto	l2065
  3575     0743                     u2630:
  3576     0743                     l2061:
  3577     0743  0872               	movf	___awdiv@divisor,w
  3578     0744  02F4               	subwf	___awdiv@dividend,f
  3579     0745  0873               	movf	___awdiv@divisor+1,w
  3580     0746  1C03               	skipc
  3581     0747  03F5               	decf	___awdiv@dividend+1,f
  3582     0748  02F5               	subwf	___awdiv@dividend+1,f
  3583     0749                     l2063:
  3584     0749  144F               	bsf	___awdiv@quotient,0
  3585     074A                     l2065:
  3586     074A  3001               	movlw	1
  3587     074B                     u2645:
  3588     074B  1003               	clrc
  3589     074C  0CF3               	rrf	___awdiv@divisor+1,f
  3590     074D  0CF2               	rrf	___awdiv@divisor,f
  3591     074E  3EFF               	addlw	-1
  3592     074F  1D03               	skipz
  3593     0750  2F4B               	goto	u2645
  3594     0751                     l2067:
  3595     0751  3001               	movlw	1
  3596     0752  02CD               	subwf	___awdiv@counter,f
  3597     0753  1D03               	btfss	3,2
  3598     0754  2F56               	goto	u2651
  3599     0755  2F57               	goto	u2650
  3600     0756                     u2651:
  3601     0756  2F32               	goto	l2059
  3602     0757                     u2650:
  3603     0757                     l2069:
  3604     0757  084E               	movf	___awdiv@sign,w
  3605     0758  1903               	btfsc	3,2
  3606     0759  2F5B               	goto	u2661
  3607     075A  2F5C               	goto	u2660
  3608     075B                     u2661:
  3609     075B  2F61               	goto	l2073
  3610     075C                     u2660:
  3611     075C                     l2071:
  3612     075C  09CF               	comf	___awdiv@quotient,f
  3613     075D  09D0               	comf	___awdiv@quotient+1,f
  3614     075E  0ACF               	incf	___awdiv@quotient,f
  3615     075F  1903               	skipnz
  3616     0760  0AD0               	incf	___awdiv@quotient+1,f
  3617     0761                     l2073:
  3618     0761  0850               	movf	___awdiv@quotient+1,w
  3619     0762  00F3               	movwf	?___awdiv+1
  3620     0763  084F               	movf	___awdiv@quotient,w
  3621     0764  00F2               	movwf	?___awdiv
  3622     0765                     l500:
  3623     0765  0008               	return
  3624     0766                     __end_of___awdiv:
  3625                           
  3626                           	psect	text14
  3627     0EA8                     __ptext14:	
  3628 ;; *************** function _LCD_Print *****************
  3629 ;; Defined at:
  3630 ;;		line 96 in file "./lcd.h"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  LCD_Str         2    4[COMMON] PTR unsigned char 
  3633 ;;		 -> STR_8(4), STR_7(4), STR_6(3), STR_5(4), 
  3634 ;;		 -> STR_4(4), STR_3(3), STR_2(3), STR_1(4), 
  3635 ;;		 -> alarm_set@Alarm(13), RTC_display@Date(17), RTC_display@Time(15), 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  i               1    7[COMMON] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         2       0       0       0       0
  3648 ;;      Locals:         1       0       0       0       0
  3649 ;;      Temps:          1       0       0       0       0
  3650 ;;      Totals:         4       0       0       0       0
  3651 ;;Total ram usage:        4 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 2
  3654 ;; This function calls:
  3655 ;;		_LCD_Write_Nibble
  3656 ;; This function is called by:
  3657 ;;		_RTC_display
  3658 ;;		_alarm_set
  3659 ;;		_edit
  3660 ;;		_on_off
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664     0EA8                     _LCD_Print:	
  3665                           ;psect for function _LCD_Print
  3666                           
  3667     0EA8                     l1983:	
  3668                           ;incstack = 0
  3669                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3670                           
  3671                           
  3672                           ;./lcd.h: 96: void LCD_Print(char* LCD_Str);./lcd.h: 97: {;./lcd.h: 98:   uint8_t i = 0;
  3673     0EA8  01F7               	clrf	LCD_Print@i
  3674     0EA9                     l1985:
  3675                           
  3676                           ;./lcd.h: 99:   RS = 1;
  3677     0EA9  147A               	bsf	_RS/(0+8),_RS& (0+7)
  3678                           
  3679                           ;./lcd.h: 100:   while(LCD_Str[i] != '\0')
  3680     0EAA  2EDB               	goto	l1991
  3681     0EAB                     l1987:
  3682                           
  3683                           ;./lcd.h: 101:   {;./lcd.h: 102:     LCD_Write_Nibble(LCD_Str[i] >> 4);
  3684     0EAB  0877               	movf	LCD_Print@i,w
  3685     0EAC  0774               	addwf	LCD_Print@LCD_Str,w
  3686     0EAD  0084               	movwf	4
  3687     0EAE  0875               	movf	LCD_Print@LCD_Str+1,w
  3688     0EAF  1803               	skipnc
  3689     0EB0  0A75               	incf	LCD_Print@LCD_Str+1,w
  3690     0EB1  00FF               	movwf	btemp+1
  3691     0EB2  120A  158A  2000  120A  158A  	fcall	stringtab
  3692     0EB7  00F6               	movwf	??_LCD_Print
  3693     0EB8  3004               	movlw	4
  3694     0EB9                     u2385:
  3695     0EB9  1003               	clrc
  3696     0EBA  0CF6               	rrf	??_LCD_Print,f
  3697     0EBB  3EFF               	addlw	-1
  3698     0EBC  1D03               	skipz
  3699     0EBD  2EB9               	goto	u2385
  3700     0EBE  0876               	movf	??_LCD_Print,w
  3701     0EBF  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  3702                           
  3703                           ;./lcd.h: 103:     LCD_Write_Nibble(LCD_Str[i++] );
  3704     0EC4  0877               	movf	LCD_Print@i,w
  3705     0EC5  0774               	addwf	LCD_Print@LCD_Str,w
  3706     0EC6  0084               	movwf	4
  3707     0EC7  0875               	movf	LCD_Print@LCD_Str+1,w
  3708     0EC8  1803               	skipnc
  3709     0EC9  0A75               	incf	LCD_Print@LCD_Str+1,w
  3710     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  3711     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  3712     0ECC  00FF               	movwf	btemp+1
  3713     0ECD  120A  158A  2000  120A  158A  	fcall	stringtab
  3714     0ED2  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  3715     0ED7                     l1989:
  3716     0ED7  3001               	movlw	1
  3717     0ED8  00F6               	movwf	??_LCD_Print
  3718     0ED9  0876               	movf	??_LCD_Print,w
  3719     0EDA  07F7               	addwf	LCD_Print@i,f
  3720     0EDB                     l1991:
  3721                           
  3722                           ;./lcd.h: 100:   while(LCD_Str[i] != '\0')
  3723     0EDB  0877               	movf	LCD_Print@i,w
  3724     0EDC  0774               	addwf	LCD_Print@LCD_Str,w
  3725     0EDD  0084               	movwf	4
  3726     0EDE  0875               	movf	LCD_Print@LCD_Str+1,w
  3727     0EDF  1803               	skipnc
  3728     0EE0  0A75               	incf	LCD_Print@LCD_Str+1,w
  3729     0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  3730     0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  3731     0EE3  00FF               	movwf	btemp+1
  3732     0EE4  120A  158A  2000  120A  158A  	fcall	stringtab
  3733     0EE9  3A00               	xorlw	0
  3734     0EEA  1D03               	skipz
  3735     0EEB  2EED               	goto	u2391
  3736     0EEC  2EEE               	goto	u2390
  3737     0EED                     u2391:
  3738     0EED  2EAB               	goto	l1987
  3739     0EEE                     u2390:
  3740     0EEE                     l95:
  3741     0EEE  0008               	return
  3742     0EEF                     __end_of_LCD_Print:
  3743                           
  3744                           	psect	text15
  3745     0E70                     __ptext15:	
  3746 ;; *************** function _LCD_Goto *****************
  3747 ;; Defined at:
  3748 ;;		line 70 in file "./lcd.h"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  col             1    wreg     unsigned char 
  3751 ;;  row             1    7[COMMON] unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  col             1    0[BANK0 ] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         1       0       0       0       0
  3764 ;;      Locals:         0       1       0       0       0
  3765 ;;      Temps:          2       0       0       0       0
  3766 ;;      Totals:         3       1       0       0       0
  3767 ;;Total ram usage:        4 bytes
  3768 ;; Hardware stack levels used: 1
  3769 ;; Hardware stack levels required when called: 3
  3770 ;; This function calls:
  3771 ;;		_LCD_Cmd
  3772 ;; This function is called by:
  3773 ;;		_RTC_display
  3774 ;;		_alarm_set
  3775 ;;		_edit
  3776 ;;		_on_off
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780     0E70                     _LCD_Goto:	
  3781                           ;psect for function _LCD_Goto
  3782                           
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3786                           ;LCD_Goto@col stored from wreg
  3787     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  3788     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  3789     0E72  00CD               	movwf	LCD_Goto@col
  3790     0E73                     l1965:
  3791                           
  3792                           ;./lcd.h: 70: void LCD_Goto(uint8_t col, uint8_t row);./lcd.h: 71: {;./lcd.h: 72:   swit
      +                          ch(row)
  3793     0E73  2E94               	goto	l1975
  3794     0E74                     l1967:
  3795                           
  3796                           ;./lcd.h: 75:       LCD_Cmd(0xC0 + col - 1);
  3797     0E74  084D               	movf	LCD_Goto@col,w
  3798     0E75  3EBF               	addlw	191
  3799     0E76  120A  158A  25B1  120A  158A  	fcall	_LCD_Cmd
  3800                           
  3801                           ;./lcd.h: 76:       break;
  3802     0E7B  2EA7               	goto	l86
  3803     0E7C                     l1969:
  3804                           
  3805                           ;./lcd.h: 78:       LCD_Cmd(0x94 + col - 1);
  3806     0E7C  084D               	movf	LCD_Goto@col,w
  3807     0E7D  3E93               	addlw	147
  3808     0E7E  120A  158A  25B1  120A  158A  	fcall	_LCD_Cmd
  3809                           
  3810                           ;./lcd.h: 79:       break;
  3811     0E83  2EA7               	goto	l86
  3812     0E84                     l1971:
  3813                           
  3814                           ;./lcd.h: 81:       LCD_Cmd(0xD4 + col - 1);
  3815     0E84  084D               	movf	LCD_Goto@col,w
  3816     0E85  3ED3               	addlw	211
  3817     0E86  120A  158A  25B1  120A  158A  	fcall	_LCD_Cmd
  3818                           
  3819                           ;./lcd.h: 82:     break;
  3820     0E8B  2EA7               	goto	l86
  3821     0E8C                     l1973:
  3822                           
  3823                           ;./lcd.h: 84:       LCD_Cmd(0x80 + col - 1);
  3824     0E8C  084D               	movf	LCD_Goto@col,w
  3825     0E8D  3E7F               	addlw	127
  3826     0E8E  120A  158A  25B1  120A  158A  	fcall	_LCD_Cmd
  3827                           
  3828                           ;./lcd.h: 85:   }
  3829     0E93  2EA7               	goto	l86
  3830     0E94                     l1975:
  3831     0E94  0877               	movf	LCD_Goto@row,w
  3832     0E95  00F8               	movwf	??_LCD_Goto
  3833     0E96  01F9               	clrf	??_LCD_Goto+1
  3834                           
  3835                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3836                           ; Switch size 1, requested type "simple"
  3837                           ; Number of cases is 1, Range of values is 0 to 0
  3838                           ; switch strategies available:
  3839                           ; Name         Instructions Cycles
  3840                           ; simple_byte            4     3 (average)
  3841                           ; direct_byte           11     8 (fixed)
  3842                           ; jumptable            260     6 (fixed)
  3843                           ;	Chosen strategy is simple_byte
  3844     0E97  0879               	movf	??_LCD_Goto+1,w
  3845     0E98  3A00               	xorlw	0	; case 0
  3846     0E99  1903               	skipnz
  3847     0E9A  2E9C               	goto	l2471
  3848     0E9B  2E8C               	goto	l1973
  3849     0E9C                     l2471:
  3850                           
  3851                           ; Switch size 1, requested type "simple"
  3852                           ; Number of cases is 3, Range of values is 2 to 4
  3853                           ; switch strategies available:
  3854                           ; Name         Instructions Cycles
  3855                           ; simple_byte           10     6 (average)
  3856                           ; direct_byte           20    11 (fixed)
  3857                           ; jumptable            263     9 (fixed)
  3858                           ;	Chosen strategy is simple_byte
  3859     0E9C  0878               	movf	??_LCD_Goto,w
  3860     0E9D  3A02               	xorlw	2	; case 2
  3861     0E9E  1903               	skipnz
  3862     0E9F  2E74               	goto	l1967
  3863     0EA0  3A01               	xorlw	1	; case 3
  3864     0EA1  1903               	skipnz
  3865     0EA2  2E7C               	goto	l1969
  3866     0EA3  3A07               	xorlw	7	; case 4
  3867     0EA4  1903               	skipnz
  3868     0EA5  2E84               	goto	l1971
  3869     0EA6  2E8C               	goto	l1973
  3870     0EA7                     l86:
  3871     0EA7  0008               	return
  3872     0EA8                     __end_of_LCD_Goto:
  3873                           
  3874                           	psect	text16
  3875     0CF7                     __ptext16:	
  3876 ;; *************** function _I2C_Write *****************
  3877 ;; Defined at:
  3878 ;;		line 80 in file "code.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  i2c_data        1    wreg     unsigned char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  i2c_data        1    2[COMMON] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  1    wreg      void 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0
  3895 ;;      Totals:         1       0       0       0       0
  3896 ;;Total ram usage:        1 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 1
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_RTC_read
  3903 ;;		_alarm_set
  3904 ;;		_main
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908     0CF7                     _I2C_Write:	
  3909                           ;psect for function _I2C_Write
  3910                           
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _I2C_Write: [wreg+status,2]
  3914                           ;I2C_Write@i2c_data stored from wreg
  3915     0CF7  00F2               	movwf	I2C_Write@i2c_data
  3916     0CF8                     l2005:
  3917     0CF8                     l150:	
  3918                           ;code.c: 80: void I2C_Write(uint8_t i2c_data);code.c: 81: {;code.c: 82:   while ((SSPSTA
      +                          T & 0x04) || (SSPCON2 & 0x1F));
  3919                           
  3920     0CF8  1683               	bsf	3,5	;RP0=1, select bank1
  3921     0CF9  1303               	bcf	3,6	;RP1=0, select bank1
  3922     0CFA  1914               	btfsc	20,2	;volatile
  3923     0CFB  2CFD               	goto	u2461
  3924     0CFC  2CFE               	goto	u2460
  3925     0CFD                     u2461:
  3926     0CFD  2CF8               	goto	l150
  3927     0CFE                     u2460:
  3928     0CFE                     l2007:
  3929     0CFE  0811               	movf	17,w	;volatile
  3930     0CFF  391F               	andlw	31
  3931     0D00  1D03               	btfss	3,2
  3932     0D01  2D03               	goto	u2471
  3933     0D02  2D04               	goto	u2470
  3934     0D03                     u2471:
  3935     0D03  2CF8               	goto	l150
  3936     0D04                     u2470:
  3937     0D04                     l2009:
  3938                           
  3939                           ;code.c: 83:   SSPBUF = i2c_data;
  3940     0D04  0872               	movf	I2C_Write@i2c_data,w
  3941     0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3942     0D06  1303               	bcf	3,6	;RP1=0, select bank0
  3943     0D07  0093               	movwf	19	;volatile
  3944     0D08                     l153:
  3945     0D08  0008               	return
  3946     0D09                     __end_of_I2C_Write:
  3947                           
  3948                           	psect	text17
  3949     0CDA                     __ptext17:	
  3950 ;; *************** function _I2C_Stop *****************
  3951 ;; Defined at:
  3952 ;;		line 74 in file "code.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3966 ;;      Params:         0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_RTC_read
  3977 ;;		_alarm_set
  3978 ;;		_main
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982     0CDA                     _I2C_Stop:	
  3983                           ;psect for function _I2C_Stop
  3984                           
  3985     0CDA                     l2001:	
  3986                           ;incstack = 0
  3987                           ; Regs used in _I2C_Stop: [wreg+status,2]
  3988                           
  3989     0CDA                     l144:	
  3990                           ;code.c: 76:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3991                           
  3992     0CDA  1683               	bsf	3,5	;RP0=1, select bank1
  3993     0CDB  1303               	bcf	3,6	;RP1=0, select bank1
  3994     0CDC  1914               	btfsc	20,2	;volatile
  3995     0CDD  2CDF               	goto	u2441
  3996     0CDE  2CE0               	goto	u2440
  3997     0CDF                     u2441:
  3998     0CDF  2CDA               	goto	l144
  3999     0CE0                     u2440:
  4000     0CE0                     l2003:
  4001     0CE0  0811               	movf	17,w	;volatile
  4002     0CE1  391F               	andlw	31
  4003     0CE2  1D03               	btfss	3,2
  4004     0CE3  2CE5               	goto	u2451
  4005     0CE4  2CE6               	goto	u2450
  4006     0CE5                     u2451:
  4007     0CE5  2CDA               	goto	l144
  4008     0CE6                     u2450:
  4009     0CE6                     l146:
  4010                           
  4011                           ;code.c: 77:   PEN = 1;
  4012     0CE6  1511               	bsf	17,2	;volatile
  4013     0CE7                     l147:
  4014     0CE7  0008               	return
  4015     0CE8                     __end_of_I2C_Stop:
  4016                           
  4017                           	psect	text18
  4018     0CCC                     __ptext18:	
  4019 ;; *************** function _I2C_Start *****************
  4020 ;; Defined at:
  4021 ;;		line 62 in file "code.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0
  4038 ;;      Totals:         0       0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_RTC_read
  4046 ;;		_alarm_set
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     0CCC                     _I2C_Start:	
  4052                           ;psect for function _I2C_Start
  4053                           
  4054     0CCC                     l1993:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _I2C_Start: [wreg+status,2]
  4057                           
  4058     0CCC                     l132:	
  4059                           ;code.c: 64:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4060                           
  4061     0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  4062     0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  4063     0CCE  1914               	btfsc	20,2	;volatile
  4064     0CCF  2CD1               	goto	u2401
  4065     0CD0  2CD2               	goto	u2400
  4066     0CD1                     u2401:
  4067     0CD1  2CCC               	goto	l132
  4068     0CD2                     u2400:
  4069     0CD2                     l1995:
  4070     0CD2  0811               	movf	17,w	;volatile
  4071     0CD3  391F               	andlw	31
  4072     0CD4  1D03               	btfss	3,2
  4073     0CD5  2CD7               	goto	u2411
  4074     0CD6  2CD8               	goto	u2410
  4075     0CD7                     u2411:
  4076     0CD7  2CCC               	goto	l132
  4077     0CD8                     u2410:
  4078     0CD8                     l134:
  4079                           
  4080                           ;code.c: 65:   SEN = 1;
  4081     0CD8  1411               	bsf	17,0	;volatile
  4082     0CD9                     l135:
  4083     0CD9  0008               	return
  4084     0CDA                     __end_of_I2C_Start:
  4085                           
  4086                           	psect	text19
  4087     0CBE                     __ptext19:	
  4088 ;; *************** function _I2C_Repeated_Start *****************
  4089 ;; Defined at:
  4090 ;;		line 68 in file "code.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, status,2
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4104 ;;      Params:         0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0
  4106 ;;      Temps:          0       0       0       0       0
  4107 ;;      Totals:         0       0       0       0       0
  4108 ;;Total ram usage:        0 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_RTC_read
  4115 ;;		_alarm_set
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119     0CBE                     _I2C_Repeated_Start:	
  4120                           ;psect for function _I2C_Repeated_Start
  4121                           
  4122     0CBE                     l1997:	
  4123                           ;incstack = 0
  4124                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2]
  4125                           
  4126     0CBE                     l138:	
  4127                           ;code.c: 70:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4128                           
  4129     0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  4130     0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  4131     0CC0  1914               	btfsc	20,2	;volatile
  4132     0CC1  2CC3               	goto	u2421
  4133     0CC2  2CC4               	goto	u2420
  4134     0CC3                     u2421:
  4135     0CC3  2CBE               	goto	l138
  4136     0CC4                     u2420:
  4137     0CC4                     l1999:
  4138     0CC4  0811               	movf	17,w	;volatile
  4139     0CC5  391F               	andlw	31
  4140     0CC6  1D03               	btfss	3,2
  4141     0CC7  2CC9               	goto	u2431
  4142     0CC8  2CCA               	goto	u2430
  4143     0CC9                     u2431:
  4144     0CC9  2CBE               	goto	l138
  4145     0CCA                     u2430:
  4146     0CCA                     l140:
  4147                           
  4148                           ;code.c: 71:   RSEN = 1;
  4149     0CCA  1491               	bsf	17,1	;volatile
  4150     0CCB                     l141:
  4151     0CCB  0008               	return
  4152     0CCC                     __end_of_I2C_Repeated_Start:
  4153                           
  4154                           	psect	text20
  4155     0E3A                     __ptext20:	
  4156 ;; *************** function _I2C_Read *****************
  4157 ;; Defined at:
  4158 ;;		line 86 in file "code.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  ack             1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  ack             1    2[COMMON] unsigned char 
  4163 ;;  _data           1    3[COMMON] unsigned char 
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  1    wreg      unsigned char 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4173 ;;      Params:         0       0       0       0       0
  4174 ;;      Locals:         2       0       0       0       0
  4175 ;;      Temps:          0       0       0       0       0
  4176 ;;      Totals:         2       0       0       0       0
  4177 ;;Total ram usage:        2 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; Hardware stack levels required when called: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_RTC_read
  4184 ;;		_alarm_set
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188     0E3A                     _I2C_Read:	
  4189                           ;psect for function _I2C_Read
  4190                           
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _I2C_Read: [wreg+status,2+status,0]
  4194                           ;I2C_Read@ack stored from wreg
  4195     0E3A  00F2               	movwf	I2C_Read@ack
  4196     0E3B                     l2011:
  4197     0E3B                     l156:	
  4198                           ;code.c: 86: uint8_t I2C_Read(uint8_t ack);code.c: 87: {;code.c: 88:   uint8_t _data;;co
      +                          de.c: 89:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4199                           
  4200     0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  4201     0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  4202     0E3D  1914               	btfsc	20,2	;volatile
  4203     0E3E  2E40               	goto	u2481
  4204     0E3F  2E41               	goto	u2480
  4205     0E40                     u2481:
  4206     0E40  2E3B               	goto	l156
  4207     0E41                     u2480:
  4208     0E41                     l2013:
  4209     0E41  0811               	movf	17,w	;volatile
  4210     0E42  391F               	andlw	31
  4211     0E43  1D03               	btfss	3,2
  4212     0E44  2E46               	goto	u2491
  4213     0E45  2E47               	goto	u2490
  4214     0E46                     u2491:
  4215     0E46  2E3B               	goto	l156
  4216     0E47                     u2490:
  4217     0E47                     l158:
  4218                           
  4219                           ;code.c: 90:   RCEN = 1;
  4220     0E47  1591               	bsf	17,3	;volatile
  4221     0E48                     l159:	
  4222                           ;code.c: 91:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4223                           
  4224     0E48  1914               	btfsc	20,2	;volatile
  4225     0E49  2E4B               	goto	u2501
  4226     0E4A  2E4C               	goto	u2500
  4227     0E4B                     u2501:
  4228     0E4B  2E48               	goto	l159
  4229     0E4C                     u2500:
  4230     0E4C                     l2015:
  4231     0E4C  0811               	movf	17,w	;volatile
  4232     0E4D  391F               	andlw	31
  4233     0E4E  1D03               	btfss	3,2
  4234     0E4F  2E51               	goto	u2511
  4235     0E50  2E52               	goto	u2510
  4236     0E51                     u2511:
  4237     0E51  2E48               	goto	l159
  4238     0E52                     u2510:
  4239     0E52                     l2017:
  4240                           
  4241                           ;code.c: 92:   _data = SSPBUF;
  4242     0E52  1283               	bcf	3,5	;RP0=0, select bank0
  4243     0E53  1303               	bcf	3,6	;RP1=0, select bank0
  4244     0E54  0813               	movf	19,w	;volatile
  4245     0E55  00F3               	movwf	I2C_Read@_data
  4246     0E56                     l162:	
  4247                           ;code.c: 93:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4248                           
  4249     0E56  1683               	bsf	3,5	;RP0=1, select bank1
  4250     0E57  1303               	bcf	3,6	;RP1=0, select bank1
  4251     0E58  1914               	btfsc	20,2	;volatile
  4252     0E59  2E5B               	goto	u2521
  4253     0E5A  2E5C               	goto	u2520
  4254     0E5B                     u2521:
  4255     0E5B  2E56               	goto	l162
  4256     0E5C                     u2520:
  4257     0E5C                     l2019:
  4258     0E5C  0811               	movf	17,w	;volatile
  4259     0E5D  391F               	andlw	31
  4260     0E5E  1D03               	btfss	3,2
  4261     0E5F  2E61               	goto	u2531
  4262     0E60  2E62               	goto	u2530
  4263     0E61                     u2531:
  4264     0E61  2E56               	goto	l162
  4265     0E62                     u2530:
  4266     0E62                     l2021:
  4267                           
  4268                           ;code.c: 95:   ACKDT = !ack;
  4269     0E62  0872               	movf	I2C_Read@ack,w
  4270     0E63  1903               	btfsc	3,2
  4271     0E64  2E66               	goto	u2541
  4272     0E65  2E6A               	goto	u2540
  4273     0E66                     u2541:
  4274     0E66  1683               	bsf	3,5	;RP0=1, select bank1
  4275     0E67  1303               	bcf	3,6	;RP1=0, select bank1
  4276     0E68  1691               	bsf	17,5	;volatile
  4277     0E69  2E6D               	goto	u2554
  4278     0E6A                     u2540:
  4279     0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  4280     0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  4281     0E6C  1291               	bcf	17,5	;volatile
  4282     0E6D                     u2554:
  4283     0E6D                     l2023:
  4284                           
  4285                           ;code.c: 96:   ACKEN = 1;
  4286     0E6D  1611               	bsf	17,4	;volatile
  4287     0E6E                     l2025:
  4288                           
  4289                           ;code.c: 97:   return _data;
  4290     0E6E  0873               	movf	I2C_Read@_data,w
  4291     0E6F                     l165:
  4292     0E6F  0008               	return
  4293     0E70                     __end_of_I2C_Read:
  4294                           
  4295                           	psect	text21
  4296     066A                     __ptext21:	
  4297 ;; *************** function _LCD_Begin *****************
  4298 ;; Defined at:
  4299 ;;		line 107 in file "./lcd.h"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, pclath, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0
  4315 ;;      Temps:          2       0       0       0       0
  4316 ;;      Totals:         2       0       0       0       0
  4317 ;;Total ram usage:        2 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 3
  4320 ;; This function calls:
  4321 ;;		_LCD_Cmd
  4322 ;; This function is called by:
  4323 ;;		_main
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327     066A                     _LCD_Begin:	
  4328                           ;psect for function _LCD_Begin
  4329                           
  4330     066A                     l2195:	
  4331                           ;incstack = 0
  4332                           ; Regs used in _LCD_Begin: [wreg+status,2+status,0+pclath+cstack]
  4333                           
  4334                           
  4335                           ;./lcd.h: 109:   RS = 0;
  4336     066A  107A               	bcf	_RS/(0+8),_RS& (0+7)
  4337                           
  4338                           ;./lcd.h: 111:   RD0 = 0;
  4339     066B  1283               	bcf	3,5	;RP0=0, select bank0
  4340     066C  1303               	bcf	3,6	;RP1=0, select bank0
  4341     066D  1008               	bcf	8,0	;volatile
  4342                           
  4343                           ;./lcd.h: 112:   RD1 = 0;
  4344     066E  1088               	bcf	8,1	;volatile
  4345                           
  4346                           ;./lcd.h: 113:   RD2 = 0;
  4347     066F  1108               	bcf	8,2	;volatile
  4348                           
  4349                           ;./lcd.h: 114:   RD3 = 0;
  4350     0670  1188               	bcf	8,3	;volatile
  4351                           
  4352                           ;./lcd.h: 115:   RD4 = 0;
  4353     0671  1208               	bcf	8,4	;volatile
  4354                           
  4355                           ;./lcd.h: 116:   RD5 = 0;
  4356     0672  1288               	bcf	8,5	;volatile
  4357                           
  4358                           ;./lcd.h: 117:   TRISD0 = 0;
  4359     0673  1683               	bsf	3,5	;RP0=1, select bank1
  4360     0674  1303               	bcf	3,6	;RP1=0, select bank1
  4361     0675  1008               	bcf	8,0	;volatile
  4362                           
  4363                           ;./lcd.h: 118:   TRISD1 = 0;
  4364     0676  1088               	bcf	8,1	;volatile
  4365                           
  4366                           ;./lcd.h: 119:   TRISD2 = 0;
  4367     0677  1108               	bcf	8,2	;volatile
  4368                           
  4369                           ;./lcd.h: 120:   TRISD3 = 0;
  4370     0678  1188               	bcf	8,3	;volatile
  4371                           
  4372                           ;./lcd.h: 121:   TRISD4 = 0;
  4373     0679  1208               	bcf	8,4	;volatile
  4374                           
  4375                           ;./lcd.h: 122:   TRISD5 = 0;
  4376     067A  1288               	bcf	8,5	;volatile
  4377     067B                     l2197:
  4378                           
  4379                           ;./lcd.h: 124:   _delay((unsigned long)((40)*(8000000/4000.0)));
  4380     067B  3068               	movlw	104
  4381     067C  00F8               	movwf	??_LCD_Begin+1
  4382     067D  30E4               	movlw	228
  4383     067E  00F7               	movwf	??_LCD_Begin
  4384     067F                     u3377:
  4385     067F  0BF7               	decfsz	??_LCD_Begin,f
  4386     0680  2E7F               	goto	u3377
  4387     0681  0BF8               	decfsz	??_LCD_Begin+1,f
  4388     0682  2E7F               	goto	u3377
  4389     0683  0000               	nop
  4390     0684                     l2199:
  4391                           
  4392                           ;./lcd.h: 125:   LCD_Cmd(3);
  4393     0684  3003               	movlw	3
  4394     0685  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4395     068A                     l2201:
  4396                           
  4397                           ;./lcd.h: 126:   _delay((unsigned long)((5)*(8000000/4000.0)));
  4398     068A  300D               	movlw	13
  4399     068B  00F8               	movwf	??_LCD_Begin+1
  4400     068C  30FB               	movlw	251
  4401     068D  00F7               	movwf	??_LCD_Begin
  4402     068E                     u3387:
  4403     068E  0BF7               	decfsz	??_LCD_Begin,f
  4404     068F  2E8E               	goto	u3387
  4405     0690  0BF8               	decfsz	??_LCD_Begin+1,f
  4406     0691  2E8E               	goto	u3387
  4407     0692  2E93               	nop2
  4408                           
  4409                           ;./lcd.h: 127:   LCD_Cmd(3);
  4410     0693  3003               	movlw	3
  4411     0694  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4412     0699                     l2203:
  4413                           
  4414                           ;./lcd.h: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  4415     0699  300D               	movlw	13
  4416     069A  00F8               	movwf	??_LCD_Begin+1
  4417     069B  30FB               	movlw	251
  4418     069C  00F7               	movwf	??_LCD_Begin
  4419     069D                     u3397:
  4420     069D  0BF7               	decfsz	??_LCD_Begin,f
  4421     069E  2E9D               	goto	u3397
  4422     069F  0BF8               	decfsz	??_LCD_Begin+1,f
  4423     06A0  2E9D               	goto	u3397
  4424     06A1  2EA2               	nop2
  4425     06A2                     l2205:
  4426                           
  4427                           ;./lcd.h: 129:   LCD_Cmd(3);
  4428     06A2  3003               	movlw	3
  4429     06A3  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4430                           
  4431                           ;./lcd.h: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  4432     06A8  300D               	movlw	13
  4433     06A9  00F8               	movwf	??_LCD_Begin+1
  4434     06AA  30FB               	movlw	251
  4435     06AB  00F7               	movwf	??_LCD_Begin
  4436     06AC                     u3407:
  4437     06AC  0BF7               	decfsz	??_LCD_Begin,f
  4438     06AD  2EAC               	goto	u3407
  4439     06AE  0BF8               	decfsz	??_LCD_Begin+1,f
  4440     06AF  2EAC               	goto	u3407
  4441     06B0  2EB1               	nop2
  4442     06B1                     l2207:
  4443                           
  4444                           ;./lcd.h: 131:   LCD_Cmd(0x02);
  4445     06B1  3002               	movlw	2
  4446     06B2  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4447     06B7                     l2209:
  4448                           
  4449                           ;./lcd.h: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  4450     06B7  300D               	movlw	13
  4451     06B8  00F8               	movwf	??_LCD_Begin+1
  4452     06B9  30FB               	movlw	251
  4453     06BA  00F7               	movwf	??_LCD_Begin
  4454     06BB                     u3417:
  4455     06BB  0BF7               	decfsz	??_LCD_Begin,f
  4456     06BC  2EBB               	goto	u3417
  4457     06BD  0BF8               	decfsz	??_LCD_Begin+1,f
  4458     06BE  2EBB               	goto	u3417
  4459     06BF  2EC0               	nop2
  4460                           
  4461                           ;./lcd.h: 133:   LCD_Cmd(0x20 | (2 << 2));
  4462     06C0  3028               	movlw	40
  4463     06C1  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4464     06C6                     l2211:
  4465                           
  4466                           ;./lcd.h: 134:   _delay((unsigned long)((50)*(8000000/4000.0)));
  4467     06C6  3082               	movlw	130
  4468     06C7  00F8               	movwf	??_LCD_Begin+1
  4469     06C8  30DD               	movlw	221
  4470     06C9  00F7               	movwf	??_LCD_Begin
  4471     06CA                     u3427:
  4472     06CA  0BF7               	decfsz	??_LCD_Begin,f
  4473     06CB  2ECA               	goto	u3427
  4474     06CC  0BF8               	decfsz	??_LCD_Begin+1,f
  4475     06CD  2ECA               	goto	u3427
  4476     06CE  2ECF               	nop2
  4477     06CF                     l2213:
  4478                           
  4479                           ;./lcd.h: 135:   LCD_Cmd(0x0C);
  4480     06CF  300C               	movlw	12
  4481     06D0  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4482                           
  4483                           ;./lcd.h: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  4484     06D5  3082               	movlw	130
  4485     06D6  00F8               	movwf	??_LCD_Begin+1
  4486     06D7  30DD               	movlw	221
  4487     06D8  00F7               	movwf	??_LCD_Begin
  4488     06D9                     u3437:
  4489     06D9  0BF7               	decfsz	??_LCD_Begin,f
  4490     06DA  2ED9               	goto	u3437
  4491     06DB  0BF8               	decfsz	??_LCD_Begin+1,f
  4492     06DC  2ED9               	goto	u3437
  4493     06DD  2EDE               	nop2
  4494     06DE                     l2215:
  4495                           
  4496                           ;./lcd.h: 137:   LCD_Cmd(0x01);
  4497     06DE  3001               	movlw	1
  4498     06DF  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4499     06E4                     l2217:
  4500                           
  4501                           ;./lcd.h: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  4502     06E4  3082               	movlw	130
  4503     06E5  00F8               	movwf	??_LCD_Begin+1
  4504     06E6  30DD               	movlw	221
  4505     06E7  00F7               	movwf	??_LCD_Begin
  4506     06E8                     u3447:
  4507     06E8  0BF7               	decfsz	??_LCD_Begin,f
  4508     06E9  2EE8               	goto	u3447
  4509     06EA  0BF8               	decfsz	??_LCD_Begin+1,f
  4510     06EB  2EE8               	goto	u3447
  4511     06EC  2EED               	nop2
  4512                           
  4513                           ;./lcd.h: 139:   LCD_Cmd(0x04 | 0x02);
  4514     06ED  3006               	movlw	6
  4515     06EE  120A  158A  25B1  120A  118A  	fcall	_LCD_Cmd
  4516     06F3                     l2219:
  4517                           
  4518                           ;./lcd.h: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  4519     06F3  3082               	movlw	130
  4520     06F4  00F8               	movwf	??_LCD_Begin+1
  4521     06F5  30DD               	movlw	221
  4522     06F6  00F7               	movwf	??_LCD_Begin
  4523     06F7                     u3457:
  4524     06F7  0BF7               	decfsz	??_LCD_Begin,f
  4525     06F8  2EF7               	goto	u3457
  4526     06F9  0BF8               	decfsz	??_LCD_Begin+1,f
  4527     06FA  2EF7               	goto	u3457
  4528     06FB  2EFC               	nop2
  4529     06FC                     l98:
  4530     06FC  0008               	return
  4531     06FD                     __end_of_LCD_Begin:
  4532                           
  4533                           	psect	text22
  4534     0DB1                     __ptext22:	
  4535 ;; *************** function _LCD_Cmd *****************
  4536 ;; Defined at:
  4537 ;;		line 61 in file "./lcd.h"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  Command         1    wreg     unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  Command         1    6[COMMON] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, pclath, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4551 ;;      Params:         0       0       0       0       0
  4552 ;;      Locals:         1       0       0       0       0
  4553 ;;      Temps:          2       0       0       0       0
  4554 ;;      Totals:         3       0       0       0       0
  4555 ;;Total ram usage:        3 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 2
  4558 ;; This function calls:
  4559 ;;		_LCD_Write_Nibble
  4560 ;; This function is called by:
  4561 ;;		_LCD_Goto
  4562 ;;		_LCD_Begin
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565                           
  4566     0DB1                     _LCD_Cmd:	
  4567                           ;psect for function _LCD_Cmd
  4568                           
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4572                           ;LCD_Cmd@Command stored from wreg
  4573     0DB1  00F6               	movwf	LCD_Cmd@Command
  4574     0DB2                     l1941:
  4575                           
  4576                           ;./lcd.h: 61: void LCD_Cmd(uint8_t Command);./lcd.h: 62: {;./lcd.h: 63:   RS = 0;
  4577     0DB2  107A               	bcf	_RS/(0+8),_RS& (0+7)
  4578     0DB3                     l1943:
  4579                           
  4580                           ;./lcd.h: 64:   LCD_Write_Nibble(Command >> 4);
  4581     0DB3  0876               	movf	LCD_Cmd@Command,w
  4582     0DB4  00F4               	movwf	??_LCD_Cmd
  4583     0DB5  3004               	movlw	4
  4584     0DB6                     u2335:
  4585     0DB6  1003               	clrc
  4586     0DB7  0CF4               	rrf	??_LCD_Cmd,f
  4587     0DB8  3EFF               	addlw	-1
  4588     0DB9  1D03               	skipz
  4589     0DBA  2DB6               	goto	u2335
  4590     0DBB  0874               	movf	??_LCD_Cmd,w
  4591     0DBC  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  4592                           
  4593                           ;./lcd.h: 65:   LCD_Write_Nibble(Command);
  4594     0DC1  0876               	movf	LCD_Cmd@Command,w
  4595     0DC2  120A  158A  2748  120A  158A  	fcall	_LCD_Write_Nibble
  4596     0DC7                     l1945:
  4597                           
  4598                           ;./lcd.h: 66:   if((Command == 0x01) || (Command == 0x02))
  4599     0DC7  0376               	decf	LCD_Cmd@Command,w
  4600     0DC8  1903               	btfsc	3,2
  4601     0DC9  2DCB               	goto	u2341
  4602     0DCA  2DCC               	goto	u2340
  4603     0DCB                     u2341:
  4604     0DCB  2DD2               	goto	l1949
  4605     0DCC                     u2340:
  4606     0DCC                     l1947:
  4607     0DCC  3002               	movlw	2
  4608     0DCD  0676               	xorwf	LCD_Cmd@Command,w
  4609     0DCE  1D03               	btfss	3,2
  4610     0DCF  2DD1               	goto	u2351
  4611     0DD0  2DD2               	goto	u2350
  4612     0DD1                     u2351:
  4613     0DD1  2DDB               	goto	l77
  4614     0DD2                     u2350:
  4615     0DD2                     l1949:
  4616                           
  4617                           ;./lcd.h: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  4618     0DD2  3006               	movlw	6
  4619     0DD3  00F5               	movwf	??_LCD_Cmd+1
  4620     0DD4  3030               	movlw	48
  4621     0DD5  00F4               	movwf	??_LCD_Cmd
  4622     0DD6                     u3467:
  4623     0DD6  0BF4               	decfsz	??_LCD_Cmd,f
  4624     0DD7  2DD6               	goto	u3467
  4625     0DD8  0BF5               	decfsz	??_LCD_Cmd+1,f
  4626     0DD9  2DD6               	goto	u3467
  4627     0DDA  0000               	nop
  4628     0DDB                     l77:
  4629     0DDB  0008               	return
  4630     0DDC                     __end_of_LCD_Cmd:
  4631                           
  4632                           	psect	text23
  4633     0F48                     __ptext23:	
  4634 ;; *************** function _LCD_Write_Nibble *****************
  4635 ;; Defined at:
  4636 ;;		line 44 in file "./lcd.h"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  n               1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  n               1    3[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0
  4652 ;;      Temps:          1       0       0       0       0
  4653 ;;      Totals:         2       0       0       0       0
  4654 ;;Total ram usage:        2 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_LCD_Cmd
  4661 ;;		_LCD_PutC
  4662 ;;		_LCD_Print
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666     0F48                     _LCD_Write_Nibble:	
  4667                           ;psect for function _LCD_Write_Nibble
  4668                           
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _LCD_Write_Nibble: [wreg+status,2+status,0]
  4672                           ;LCD_Write_Nibble@n stored from wreg
  4673     0F48  00F3               	movwf	LCD_Write_Nibble@n
  4674     0F49                     l1925:
  4675                           
  4676                           ;./lcd.h: 44: void LCD_Write_Nibble(uint8_t n);./lcd.h: 45: {;./lcd.h: 46:   RD0 = RS;
  4677     0F49  187A               	btfsc	_RS/(0+8),_RS& (0+7)
  4678     0F4A  2F4C               	goto	u2201
  4679     0F4B  2F50               	goto	u2200
  4680     0F4C                     u2201:
  4681     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4682     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4683     0F4E  1408               	bsf	8,0	;volatile
  4684     0F4F  2F53               	goto	u2214
  4685     0F50                     u2200:
  4686     0F50  1283               	bcf	3,5	;RP0=0, select bank0
  4687     0F51  1303               	bcf	3,6	;RP1=0, select bank0
  4688     0F52  1008               	bcf	8,0	;volatile
  4689     0F53                     u2214:
  4690                           
  4691                           ;./lcd.h: 47:   RD2 = n & 0x01;
  4692     0F53  1873               	btfsc	LCD_Write_Nibble@n,0
  4693     0F54  2F56               	goto	u2221
  4694     0F55  2F5A               	goto	u2220
  4695     0F56                     u2221:
  4696     0F56  1283               	bcf	3,5	;RP0=0, select bank0
  4697     0F57  1303               	bcf	3,6	;RP1=0, select bank0
  4698     0F58  1508               	bsf	8,2	;volatile
  4699     0F59  2F5D               	goto	u2234
  4700     0F5A                     u2220:
  4701     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4702     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4703     0F5C  1108               	bcf	8,2	;volatile
  4704     0F5D                     u2234:
  4705     0F5D                     l1927:
  4706                           
  4707                           ;./lcd.h: 48:   RD3 = (n >> 1) & 0x01;
  4708     0F5D  0873               	movf	LCD_Write_Nibble@n,w
  4709     0F5E  00F2               	movwf	??_LCD_Write_Nibble
  4710     0F5F  3001               	movlw	1
  4711     0F60                     u2245:
  4712     0F60  1003               	clrc
  4713     0F61  0CF2               	rrf	??_LCD_Write_Nibble,f
  4714     0F62  3EFF               	addlw	-1
  4715     0F63  1D03               	skipz
  4716     0F64  2F60               	goto	u2245
  4717     0F65  1872               	btfsc	??_LCD_Write_Nibble,0
  4718     0F66  2F68               	goto	u2251
  4719     0F67  2F6C               	goto	u2250
  4720     0F68                     u2251:
  4721     0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4722     0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4723     0F6A  1588               	bsf	8,3	;volatile
  4724     0F6B  2F6F               	goto	u2264
  4725     0F6C                     u2250:
  4726     0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  4727     0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  4728     0F6E  1188               	bcf	8,3	;volatile
  4729     0F6F                     u2264:
  4730                           
  4731                           ;./lcd.h: 49:   RD4 = (n >> 2) & 0x01;
  4732     0F6F  0873               	movf	LCD_Write_Nibble@n,w
  4733     0F70  00F2               	movwf	??_LCD_Write_Nibble
  4734     0F71  3002               	movlw	2
  4735     0F72                     u2275:
  4736     0F72  1003               	clrc
  4737     0F73  0CF2               	rrf	??_LCD_Write_Nibble,f
  4738     0F74  3EFF               	addlw	-1
  4739     0F75  1D03               	skipz
  4740     0F76  2F72               	goto	u2275
  4741     0F77  1872               	btfsc	??_LCD_Write_Nibble,0
  4742     0F78  2F7A               	goto	u2281
  4743     0F79  2F7E               	goto	u2280
  4744     0F7A                     u2281:
  4745     0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  4746     0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  4747     0F7C  1608               	bsf	8,4	;volatile
  4748     0F7D  2F81               	goto	u2294
  4749     0F7E                     u2280:
  4750     0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  4751     0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  4752     0F80  1208               	bcf	8,4	;volatile
  4753     0F81                     u2294:
  4754                           
  4755                           ;./lcd.h: 50:   RD5 = (n >> 3) & 0x01;
  4756     0F81  0873               	movf	LCD_Write_Nibble@n,w
  4757     0F82  00F2               	movwf	??_LCD_Write_Nibble
  4758     0F83  3003               	movlw	3
  4759     0F84                     u2305:
  4760     0F84  1003               	clrc
  4761     0F85  0CF2               	rrf	??_LCD_Write_Nibble,f
  4762     0F86  3EFF               	addlw	-1
  4763     0F87  1D03               	skipz
  4764     0F88  2F84               	goto	u2305
  4765     0F89  1872               	btfsc	??_LCD_Write_Nibble,0
  4766     0F8A  2F8C               	goto	u2311
  4767     0F8B  2F90               	goto	u2310
  4768     0F8C                     u2311:
  4769     0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  4770     0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  4771     0F8E  1688               	bsf	8,5	;volatile
  4772     0F8F  2F93               	goto	u2324
  4773     0F90                     u2310:
  4774     0F90  1283               	bcf	3,5	;RP0=0, select bank0
  4775     0F91  1303               	bcf	3,6	;RP1=0, select bank0
  4776     0F92  1288               	bcf	8,5	;volatile
  4777     0F93                     u2324:
  4778     0F93                     l1929:
  4779                           
  4780                           ;./lcd.h: 53:   RD1 = 0;
  4781     0F93  1088               	bcf	8,1	;volatile
  4782     0F94                     l1931:
  4783                           
  4784                           ;./lcd.h: 54:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4785     0F94  2F95               	nop2	;2 cycle nop
  4786     0F95                     l1933:
  4787                           
  4788                           ;./lcd.h: 55:   RD1 = 1;
  4789     0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4790     0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4791     0F97  1488               	bsf	8,1	;volatile
  4792     0F98                     l1935:
  4793                           
  4794                           ;./lcd.h: 56:   _delay((unsigned long)((1)*(8000000/4000000.0)));
  4795     0F98  2F99               	nop2	;2 cycle nop
  4796     0F99                     l1937:
  4797                           
  4798                           ;./lcd.h: 57:   RD1 = 0;
  4799     0F99  1283               	bcf	3,5	;RP0=0, select bank0
  4800     0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  4801     0F9B  1088               	bcf	8,1	;volatile
  4802     0F9C                     l1939:
  4803                           
  4804                           ;./lcd.h: 58:   _delay((unsigned long)((100)*(8000000/4000000.0)));
  4805     0F9C  3042               	movlw	66
  4806     0F9D  00F2               	movwf	??_LCD_Write_Nibble
  4807     0F9E                     u3477:
  4808     0F9E  0BF2               	decfsz	??_LCD_Write_Nibble,f
  4809     0F9F  2F9E               	goto	u3477
  4810     0FA0  0000               	nop
  4811     0FA1                     l71:
  4812     0FA1  0008               	return
  4813     0FA2                     __end_of_LCD_Write_Nibble:
  4814                           
  4815                           	psect	text24
  4816     0E09                     __ptext24:	
  4817 ;; *************** function _I2C_Init *****************
  4818 ;; Defined at:
  4819 ;;		line 55 in file "code.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;  i2c_clk_freq    4    6[BANK0 ] unsigned long 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         0       4       0       0       0
  4834 ;;      Locals:         0       0       0       0       0
  4835 ;;      Temps:          0       4       0       0       0
  4836 ;;      Totals:         0       8       0       0       0
  4837 ;;Total ram usage:        8 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; Hardware stack levels required when called: 2
  4840 ;; This function calls:
  4841 ;;		___lldiv
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847     0E09                     _I2C_Init:	
  4848                           ;psect for function _I2C_Init
  4849                           
  4850     0E09                     l2221:	
  4851                           ;incstack = 0
  4852                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  4853                           
  4854                           
  4855                           ;code.c: 55: void I2C_Init(uint32_t i2c_clk_freq);code.c: 56: {;code.c: 57:   SSPCON = 0
      +                          x28;
  4856     0E09  3028               	movlw	40
  4857     0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4858     0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4859     0E0C  0094               	movwf	20	;volatile
  4860     0E0D                     l2223:
  4861                           
  4862                           ;code.c: 58:   SSPADD = (8000000/(4 * i2c_clk_freq)) - 1;
  4863     0E0D  0853               	movf	I2C_Init@i2c_clk_freq,w
  4864     0E0E  00D7               	movwf	??_I2C_Init
  4865     0E0F  0854               	movf	I2C_Init@i2c_clk_freq+1,w
  4866     0E10  00D8               	movwf	??_I2C_Init+1
  4867     0E11  0855               	movf	I2C_Init@i2c_clk_freq+2,w
  4868     0E12  00D9               	movwf	??_I2C_Init+2
  4869     0E13  0856               	movf	I2C_Init@i2c_clk_freq+3,w
  4870     0E14  00DA               	movwf	??_I2C_Init+3
  4871     0E15  3002               	movlw	2
  4872     0E16                     u2925:
  4873     0E16  1003               	clrc
  4874     0E17  0DD7               	rlf	??_I2C_Init,f
  4875     0E18  0DD8               	rlf	??_I2C_Init+1,f
  4876     0E19  0DD9               	rlf	??_I2C_Init+2,f
  4877     0E1A  0DDA               	rlf	??_I2C_Init+3,f
  4878     0E1B                     u2920:
  4879     0E1B  3EFF               	addlw	-1
  4880     0E1C  1D03               	skipz
  4881     0E1D  2E16               	goto	u2925
  4882     0E1E  085A               	movf	??_I2C_Init+3,w
  4883     0E1F  00F5               	movwf	___lldiv@divisor+3
  4884     0E20  0859               	movf	??_I2C_Init+2,w
  4885     0E21  00F4               	movwf	___lldiv@divisor+2
  4886     0E22  0858               	movf	??_I2C_Init+1,w
  4887     0E23  00F3               	movwf	___lldiv@divisor+1
  4888     0E24  0857               	movf	??_I2C_Init,w
  4889     0E25  00F2               	movwf	___lldiv@divisor
  4890     0E26  3000               	movlw	0
  4891     0E27  00F9               	movwf	___lldiv@dividend+3
  4892     0E28  307A               	movlw	122
  4893     0E29  00F8               	movwf	___lldiv@dividend+2
  4894     0E2A  3012               	movlw	18
  4895     0E2B  00F7               	movwf	___lldiv@dividend+1
  4896     0E2C  3000               	movlw	0
  4897     0E2D  00F6               	movwf	___lldiv@dividend
  4898     0E2E  120A  118A  2766  120A  158A  	fcall	___lldiv
  4899     0E33  0872               	movf	?___lldiv,w
  4900     0E34  3EFF               	addlw	255
  4901     0E35  1683               	bsf	3,5	;RP0=1, select bank1
  4902     0E36  1303               	bcf	3,6	;RP1=0, select bank1
  4903     0E37  0093               	movwf	19	;volatile
  4904     0E38                     l2225:
  4905                           
  4906                           ;code.c: 59:   SSPSTAT = 0;
  4907     0E38  0194               	clrf	20	;volatile
  4908     0E39                     l129:
  4909     0E39  0008               	return
  4910     0E3A                     __end_of_I2C_Init:
  4911                           
  4912                           	psect	text25
  4913     0766                     __ptext25:	
  4914 ;; *************** function ___lldiv *****************
  4915 ;; Defined at:
  4916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  divisor         4    2[COMMON] unsigned long 
  4919 ;;  dividend        4    6[COMMON] unsigned long 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  quotient        4    1[BANK0 ] unsigned long 
  4922 ;;  counter         1    5[BANK0 ] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4    2[COMMON] unsigned long 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         8       0       0       0       0
  4933 ;;      Locals:         0       5       0       0       0
  4934 ;;      Temps:          0       1       0       0       0
  4935 ;;      Totals:         8       6       0       0       0
  4936 ;;Total ram usage:       14 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 1
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_I2C_Init
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946     0766                     ___lldiv:	
  4947                           ;psect for function ___lldiv
  4948                           
  4949     0766                     l2171:	
  4950                           ;incstack = 0
  4951                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4952                           
  4953     0766  3000               	movlw	0
  4954     0767  1283               	bcf	3,5	;RP0=0, select bank0
  4955     0768  1303               	bcf	3,6	;RP1=0, select bank0
  4956     0769  00D1               	movwf	___lldiv@quotient+3
  4957     076A  3000               	movlw	0
  4958     076B  00D0               	movwf	___lldiv@quotient+2
  4959     076C  3000               	movlw	0
  4960     076D  00CF               	movwf	___lldiv@quotient+1
  4961     076E  3000               	movlw	0
  4962     076F  00CE               	movwf	___lldiv@quotient
  4963     0770  0875               	movf	___lldiv@divisor+3,w
  4964     0771  0474               	iorwf	___lldiv@divisor+2,w
  4965     0772  0473               	iorwf	___lldiv@divisor+1,w
  4966     0773  0472               	iorwf	___lldiv@divisor,w
  4967     0774  1903               	skipnz
  4968     0775  2F77               	goto	u2851
  4969     0776  2F78               	goto	u2850
  4970     0777                     u2851:
  4971     0777  2FC5               	goto	l2191
  4972     0778                     u2850:
  4973     0778                     l2173:
  4974     0778  01D2               	clrf	___lldiv@counter
  4975     0779  0AD2               	incf	___lldiv@counter,f
  4976     077A  2F88               	goto	l2177
  4977     077B                     l2175:
  4978     077B  3001               	movlw	1
  4979     077C  00CD               	movwf	??___lldiv
  4980     077D                     u2865:
  4981     077D  1003               	clrc
  4982     077E  0DF2               	rlf	___lldiv@divisor,f
  4983     077F  0DF3               	rlf	___lldiv@divisor+1,f
  4984     0780  0DF4               	rlf	___lldiv@divisor+2,f
  4985     0781  0DF5               	rlf	___lldiv@divisor+3,f
  4986     0782  0BCD               	decfsz	??___lldiv,f
  4987     0783  2F7D               	goto	u2865
  4988     0784  3001               	movlw	1
  4989     0785  00CD               	movwf	??___lldiv
  4990     0786  084D               	movf	??___lldiv,w
  4991     0787  07D2               	addwf	___lldiv@counter,f
  4992     0788                     l2177:
  4993     0788  1FF5               	btfss	___lldiv@divisor+3,7
  4994     0789  2F8B               	goto	u2871
  4995     078A  2F8C               	goto	u2870
  4996     078B                     u2871:
  4997     078B  2F7B               	goto	l2175
  4998     078C                     u2870:
  4999     078C                     l2179:
  5000     078C  3001               	movlw	1
  5001     078D  00CD               	movwf	??___lldiv
  5002     078E                     u2885:
  5003     078E  1003               	clrc
  5004     078F  0DCE               	rlf	___lldiv@quotient,f
  5005     0790  0DCF               	rlf	___lldiv@quotient+1,f
  5006     0791  0DD0               	rlf	___lldiv@quotient+2,f
  5007     0792  0DD1               	rlf	___lldiv@quotient+3,f
  5008     0793  0BCD               	decfsz	??___lldiv,f
  5009     0794  2F8E               	goto	u2885
  5010     0795                     l2181:
  5011     0795  0875               	movf	___lldiv@divisor+3,w
  5012     0796  0279               	subwf	___lldiv@dividend+3,w
  5013     0797  1D03               	skipz
  5014     0798  2FA3               	goto	u2895
  5015     0799  0874               	movf	___lldiv@divisor+2,w
  5016     079A  0278               	subwf	___lldiv@dividend+2,w
  5017     079B  1D03               	skipz
  5018     079C  2FA3               	goto	u2895
  5019     079D  0873               	movf	___lldiv@divisor+1,w
  5020     079E  0277               	subwf	___lldiv@dividend+1,w
  5021     079F  1D03               	skipz
  5022     07A0  2FA3               	goto	u2895
  5023     07A1  0872               	movf	___lldiv@divisor,w
  5024     07A2  0276               	subwf	___lldiv@dividend,w
  5025     07A3                     u2895:
  5026     07A3  1C03               	skipc
  5027     07A4  2FA6               	goto	u2891
  5028     07A5  2FA7               	goto	u2890
  5029     07A6                     u2891:
  5030     07A6  2FB6               	goto	l2187
  5031     07A7                     u2890:
  5032     07A7                     l2183:
  5033     07A7  0872               	movf	___lldiv@divisor,w
  5034     07A8  02F6               	subwf	___lldiv@dividend,f
  5035     07A9  0873               	movf	___lldiv@divisor+1,w
  5036     07AA  1C03               	skipc
  5037     07AB  0F73               	incfsz	___lldiv@divisor+1,w
  5038     07AC  02F7               	subwf	___lldiv@dividend+1,f
  5039     07AD  0874               	movf	___lldiv@divisor+2,w
  5040     07AE  1C03               	skipc
  5041     07AF  0F74               	incfsz	___lldiv@divisor+2,w
  5042     07B0  02F8               	subwf	___lldiv@dividend+2,f
  5043     07B1  0875               	movf	___lldiv@divisor+3,w
  5044     07B2  1C03               	skipc
  5045     07B3  0F75               	incfsz	___lldiv@divisor+3,w
  5046     07B4  02F9               	subwf	___lldiv@dividend+3,f
  5047     07B5                     l2185:
  5048     07B5  144E               	bsf	___lldiv@quotient,0
  5049     07B6                     l2187:
  5050     07B6  3001               	movlw	1
  5051     07B7                     u2905:
  5052     07B7  1003               	clrc
  5053     07B8  0CF5               	rrf	___lldiv@divisor+3,f
  5054     07B9  0CF4               	rrf	___lldiv@divisor+2,f
  5055     07BA  0CF3               	rrf	___lldiv@divisor+1,f
  5056     07BB  0CF2               	rrf	___lldiv@divisor,f
  5057     07BC  3EFF               	addlw	-1
  5058     07BD  1D03               	skipz
  5059     07BE  2FB7               	goto	u2905
  5060     07BF                     l2189:
  5061     07BF  3001               	movlw	1
  5062     07C0  02D2               	subwf	___lldiv@counter,f
  5063     07C1  1D03               	btfss	3,2
  5064     07C2  2FC4               	goto	u2911
  5065     07C3  2FC5               	goto	u2910
  5066     07C4                     u2911:
  5067     07C4  2F8C               	goto	l2179
  5068     07C5                     u2910:
  5069     07C5                     l2191:
  5070     07C5  0851               	movf	___lldiv@quotient+3,w
  5071     07C6  00F5               	movwf	?___lldiv+3
  5072     07C7  0850               	movf	___lldiv@quotient+2,w
  5073     07C8  00F4               	movwf	?___lldiv+2
  5074     07C9  084F               	movf	___lldiv@quotient+1,w
  5075     07CA  00F3               	movwf	?___lldiv+1
  5076     07CB  084E               	movf	___lldiv@quotient,w
  5077     07CC  00F2               	movwf	?___lldiv
  5078     07CD                     l383:
  5079     07CD  0008               	return
  5080     07CE                     __end_of___lldiv:
  5081                           
  5082                           	psect	text26
  5083     0CE8                     __ptext26:	
  5084 ;; *************** function _EXT *****************
  5085 ;; Defined at:
  5086 ;;		line 46 in file "code.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		None
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0
  5102 ;;      Temps:          2       0       0       0       0
  5103 ;;      Totals:         2       0       0       0       0
  5104 ;;Total ram usage:        2 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; This function calls:
  5107 ;;		Nothing
  5108 ;; This function is called by:
  5109 ;;		Interrupt level 1
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113     0CE8                     _EXT:	
  5114                           ;psect for function _EXT
  5115                           
  5116     0CE8                     i1l1293:
  5117                           
  5118                           ;code.c: 48:   if (INTF){
  5119     0CE8  1C8B               	btfss	11,1	;volatile
  5120     0CE9  2CEB               	goto	u100_21
  5121     0CEA  2CEC               	goto	u100_20
  5122     0CEB                     u100_21:
  5123     0CEB  2CF0               	goto	i1l126
  5124     0CEC                     u100_20:
  5125     0CEC                     i1l1295:
  5126                           
  5127                           ;code.c: 49:     RB3= 1;
  5128     0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  5129     0CED  1303               	bcf	3,6	;RP1=0, select bank0
  5130     0CEE  1586               	bsf	6,3	;volatile
  5131                           
  5132                           ;code.c: 50:     INTF = 0;
  5133     0CEF  108B               	bcf	11,1	;volatile
  5134     0CF0                     i1l126:
  5135     0CF0  0871               	movf	??_EXT+1,w
  5136     0CF1  008A               	movwf	10
  5137     0CF2  0E70               	swapf	??_EXT,w
  5138     0CF3  0083               	movwf	3
  5139     0CF4  0EFE               	swapf	btemp,f
  5140     0CF5  0E7E               	swapf	btemp,w
  5141     0CF6  0009               	retfie
  5142     0CF7                     __end_of_EXT:
  5143     007E                     btemp	set	126	;btemp
  5144     007E                     wtemp0	set	126
  5145                           
  5146                           	psect	intentry
  5147     0004                     __pintentry:	
  5148                           ;incstack = 0
  5149                           ; Regs used in _EXT: []
  5150                           
  5151     0004                     interrupt_function:
  5152     007E                     saved_w	set	btemp
  5153     0004  00FE               	movwf	btemp
  5154     0005  0E03               	swapf	3,w
  5155     0006  00F0               	movwf	??_EXT
  5156     0007  080A               	movf	10,w
  5157     0008  00F1               	movwf	??_EXT+1
  5158     0009  120A  158A  2CE8   	ljmp	_EXT
  5159                           
  5160                           	psect	idloc
  5161                           
  5162                           ;Config register IDLOC0 @ 0x2000
  5163                           ;	unspecified, using default values
  5164     2000                     	org	8192
  5165     2000  3FFF               	dw	16383
  5166                           
  5167                           ;Config register IDLOC1 @ 0x2001
  5168                           ;	unspecified, using default values
  5169     2001                     	org	8193
  5170     2001  3FFF               	dw	16383
  5171                           
  5172                           ;Config register IDLOC2 @ 0x2002
  5173                           ;	unspecified, using default values
  5174     2002                     	org	8194
  5175     2002  3FFF               	dw	16383
  5176                           
  5177                           ;Config register IDLOC3 @ 0x2003
  5178                           ;	unspecified, using default values
  5179     2003                     	org	8195
  5180     2003  3FFF               	dw	16383
  5181                           
  5182                           	psect	config
  5183                           
  5184                           ;Config register CONFIG1 @ 0x2007
  5185                           ;	Oscillator Selection bits
  5186                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5187                           ;	Watchdog Timer Enable bit
  5188                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5189                           ;	Power-up Timer Enable bit
  5190                           ;	PWRTE = OFF, PWRT disabled
  5191                           ;	RE3/MCLR pin function select bit
  5192                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5193                           ;	Code Protection bit
  5194                           ;	CP = OFF, Program memory code protection is disabled
  5195                           ;	Data Code Protection bit
  5196                           ;	CPD = OFF, Data memory code protection is disabled
  5197                           ;	Brown Out Reset Selection bits
  5198                           ;	BOREN = OFF, BOR disabled
  5199                           ;	Internal External Switchover bit
  5200                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5201                           ;	Fail-Safe Clock Monitor Enabled bit
  5202                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5203                           ;	Low Voltage Programming Enable bit
  5204                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5205                           ;	In-Circuit Debugger Mode bit
  5206                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  5207     2007                     	org	8199
  5208     2007  2CD4               	dw	11476
  5209                           
  5210                           ;Config register CONFIG2 @ 0x2008
  5211                           ;	Brown-out Reset Selection bit
  5212                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5213                           ;	Flash Program Memory Self Write Enable bits
  5214                           ;	WRT = OFF, Write protection off
  5215     2008                     	org	8200
  5216     2008  3FFF               	dw	16383

Data Sizes:
    Strings     14
    Constant    0
    Data        45
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     17      72
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Print@LCD_Str	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[3]), STR_5(CODE[4]), 
		 -> STR_4(CODE[4]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[4]), 
		 -> alarm_set@Alarm(BANK0[13]), RTC_display@Date(BANK0[17]), RTC_display@Time(BANK0[15]), 


Critical Paths under _main in COMMON

    _main->_decimal_to_bcd
    _on_off->_LCD_Goto
    _RTC_read->_I2C_Read
    _RTC_display->_LCD_Goto
    _edit->_LCD_Goto
    _LCD_PutC->_LCD_Write_Nibble
    _decimal_to_bcd->___awmod
    _alarm_set->_LCD_Goto
    _bcd_to_decimal->___bmul
    _LCD_Print->_LCD_Write_Nibble
    _LCD_Goto->_LCD_Cmd
    _LCD_Begin->_LCD_Cmd
    _LCD_Cmd->_LCD_Write_Nibble
    _I2C_Init->___lldiv

Critical Paths under _EXT in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_I2C_Init
    _on_off->_RTC_display
    _RTC_display->___awdiv
    _edit->___awdiv
    _decimal_to_bcd->___awdiv
    _alarm_set->___awdiv
    _I2C_Init->___lldiv

Critical Paths under _EXT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _EXT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _EXT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _EXT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   42810
                                             14 BANK0      3     3      0
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                          _LCD_Begin
                        _RTC_display
                           _RTC_read
                          _alarm_set
                           _debounce
                     _decimal_to_bcd
                               _edit
                             _on_off
 ---------------------------------------------------------------------------------
 (1) _on_off                                               6     4      2   11255
                                              6 BANK0      6     4      2
                           _LCD_Goto
                          _LCD_Print
                        _RTC_display
                           _RTC_read
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _RTC_read                                             0     0      0      96
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _RTC_display                                          2     2      0    7825
                                              4 BANK0      2     2      0
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (1) _edit                                                 6     4      2    9853
                                              4 BANK0      6     4      2
                           _LCD_Goto
                          _LCD_Print
                           _LCD_PutC
                            ___awdiv
                            ___awmod
                              _blink
                           _debounce
 ---------------------------------------------------------------------------------
 (2) _debounce                                             4     4      0     105
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _blink                                                3     3      0      37
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_PutC                                             2     2      0     186
                                              4 COMMON     2     2      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (1) _decimal_to_bcd                                       6     6      0    4900
                                              9 COMMON     1     1      0
                                              4 BANK0      5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _alarm_set                                            3     3      0    7955
                                              4 BANK0      3     3      0
                           _I2C_Read
                 _I2C_Repeated_Start
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                           _LCD_Goto
                          _LCD_Print
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (3) _bcd_to_decimal                                       3     3      0     288
                                              6 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     226
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    2413
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    2425
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Print                                            4     2      2    1306
                                              4 COMMON     4     2      2
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (3) _LCD_Goto                                             4     3      1    1393
                                              7 COMMON     3     2      1
                                              0 BANK0      1     1      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (3) _I2C_Write                                            1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Repeated_Start                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Read                                             2     2      0      65
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            2     2      0     248
                                              7 COMMON     2     2      0
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (4) _LCD_Cmd                                              3     3      0     248
                                              4 COMMON     3     3      0
                   _LCD_Write_Nibble
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_Nibble                                     2     2      0     124
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _EXT                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_Start
   _I2C_Stop
   _I2C_Write
   _LCD_Begin
     _LCD_Cmd
       _LCD_Write_Nibble
   _RTC_display
     _LCD_Goto
       _LCD_Cmd
     _LCD_Print
       _LCD_Write_Nibble
     ___awdiv
     ___awmod
     _bcd_to_decimal
       ___bmul
   _RTC_read
     _I2C_Read
     _I2C_Repeated_Start
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   _alarm_set
     _I2C_Read
     _I2C_Repeated_Start
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _LCD_Goto
     _LCD_Print
     ___awdiv
     ___awmod
     _bcd_to_decimal
   _debounce
   _decimal_to_bcd
     ___awdiv
     ___awmod
   _edit
     _LCD_Goto
     _LCD_Print
     _LCD_PutC
       _LCD_Write_Nibble
     ___awdiv
     ___awmod
     _blink
     _debounce
   _on_off
     _LCD_Goto
     _LCD_Print
     _RTC_display
     _RTC_read
     _blink
     _debounce

 _EXT (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      54      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 30 19:51:56 2022

                         _i 007B                           pc 0002              ___bmul@product 0074  
                        l71 0FA1                          l77 0DDB                          l86 0EA7  
                        l95 0EEE                          l89 0D5D                          l98 06FC  
                        _RS 03D0                ___awdiv@sign 004E                          fsr 0004  
            _decimal_to_bcd 07CE                 _RTC_display 0256                         l140 0CCA  
                       l132 0CCC                         l204 0DB0                         l141 0CCB  
                       l134 0CD8                         l150 0CF8                         l222 04C8  
                       l135 0CD9                         l144 0CDA                         l240 0669  
                       l129 0E39                         l153 0D08                         l162 0E56  
                       l138 0CBE                         l146 0CE6                         l147 0CE7  
                       l156 0E3B                         l500 0765                         l172 0D86  
                       l165 0E6F                         l158 0E47                         l182 0FFF  
                       l159 0E48                         l176 0D46                         l168 0D60  
                       l513 0F47                         l258 0239                         l179 07FF  
                       l196 05C0                         l373 0D30                         l189 03AC  
                       l383 07CD                         _RB0 0030                         _RB1 0031  
                       _RB2 0032                         _RB3 0033                         _RD0 0040  
                       _RD1 0041                         _RD2 0042                         _RD3 0043  
                       _RD4 0044                         _RD5 0045                         _PEN 048A  
                       _EXT 0CE8                         _SEN 0488                         fsr0 0004  
                       indf 0000                ___awmod@sign 0078             __end_of_LCD_Cmd 0DDC  
                      ?_EXT 0070                        l2001 0CDA                        l2011 0E3B  
                      l2003 0CE0                        l2021 0E62                        l2013 0E41  
                      l2005 0CF8                        l2101 0F26                        l2023 0E6D  
                      l2015 0E4C                        l2007 0CFE                        l2111 0F43  
                      l2103 0F2C                        l2201 068A                        l2025 0E6E  
                      l2017 0E52                        l2009 0D04                        l2041 070B  
                      l2033 06FD                        l2105 0F33                        l2211 06C6  
                      l2203 0699                        l2019 0E5C                        l2051 0720  
                      l2043 070F                        l2035 0700                        l2107 0F39  
                      l2115 0D48                        l2131 0D7D                        l2221 0E09  
                      l2213 06CF                        l2205 06A2                        l2061 0743  
                      l2053 0723                        l2045 0714                        l2037 0704  
                      l2109 0F3E                        l2029 0D32                        l2117 0D49  
                      l2133 0D83                        l2125 0D66                        l2301 0463  
                      l2223 0E0D                        l2215 06DE                        l2207 06B1  
                      l2071 075C                        l2063 0749                        l2055 072A  
                      l2047 0718                        l2039 0709                        l2231 04C9  
                      l2127 0D6A                        l2119 0D5E                        l2311 04AD  
                      l2303 046C                        l2151 039B                        l2143 0FA2  
                      l2225 0E38                        l2217 06E4                        l2209 06B7  
                      l2073 0761                        l2065 074A                        l2057 072E  
                      l2049 071A                        l2081 0EF4                        l2241 059D  
                      l2233 0582                        l2161 0D96                        l2129 0D73  
                      l2313 04B2                        l2305 0471                        l2153 03A3  
                      l2145 0256                        l2401 00BE                        l2171 0766  
                      l2219 06F3                        l2067 0751                        l2059 0732  
                      l2091 0F0A                        l2083 0EF9                        l2243 05A5  
                      l2235 0585                        l2227 07CF                        l2163 0D9C  
                      l2155 0D87                        l2139 0D85                        l2315 04B8  
                      l2307 047B                        l2251 03B0                        l2147 038A  
                      l2331 05DF                        l2323 05C4                        l2411 0169  
                      l2403 00C7                        l2181 0795                        l2173 0778  
                      l2069 0757                        l2093 0F0D                        l2085 0EFB  
                      l2077 0EEF                        l2245 05AF                        l2237 058D  
                      l2165 0DA2                        l2157 0D89                        l2317 04C1  
                      l2309 0494                        l2261 03CF                        l2253 03BA  
                      l2149 0392                        l2341 060E                        l2333 05E6  
                      l2325 05C4                        l2421 0196                        l2413 016B  
                      l2405 014B                        l2183 07A7                        l2175 077B  
                      l2191 07C5                        l2095 0F14                        l2087 0EFF  
                      l2079 0EF0                        l2247 05B7                        l2239 0596  
                      l2167 0DA6                        l2159 0D8D                        l2319 04C7  
                      l2271 03E3                        l2263 03D5                        l2255 03C3  
                      l2351 0635                        l2343 0616                        l2335 05F0  
                      l2327 05CE                        l2431 020D                        l2423 019F  
                      l2415 017A                        l2407 015A                        l2185 07B5  
                      l2177 0788                        l2097 0F18                        l2089 0F04  
                      l2169 0DAA                        l2281 03FD                        l2273 03E9  
                      l2265 03D6                        l2257 03C9                        l2249 03B0  
                      l2361 065D                        l2353 063F                        l2345 061F  
                      l2337 05F9                        l2329 05D7                        l2433 020E  
                      l2425 01F4                        l2417 0187                        l2409 0160  
                      l2187 07B6                        l2179 078C                        l2195 066A  
                      l2099 0F1C                        l2291 0414                        l2283 03FF  
                      l2275 03EF                        l2267 03DC                        l2259 03CA  
                      l2363 0666                        l2355 0648                        l2347 0624  
                      l2339 0608                        l2435 023E                        l2419 0194  
                      l2427 0203                        l2371 0034                        l2189 07BF  
                      l2197 067B                        l2293 042D                        l2285 0405  
                      l2277 03F1                        l2269 03E2                        l2357 064D  
                      l2349 062E                        l2437 0243                        l2429 0209  
                      l2381 0059                        l2373 0037                        l2199 0684  
                      l2471 0E9C                        l2295 0446                        l2287 040B  
                      l2279 03F7                        l2359 0657                        l2439 0248  
                      l2391 007D                        l2383 005E                        l2375 0039  
                      l2367 002D                        l2289 040C                        l2297 0455  
                      l2393 008A                        l2385 0064                        l2377 003C  
                      l2369 0031                        l1931 0F94                        l2299 045B  
                      l2395 0097                        l2387 006D                        l2379 004A  
                      l1933 0F95                        l1925 0F49                        l1941 0DB2  
                      l2397 00A4                        l2389 006E                        l1935 0F98  
                      l1927 0F5D                        l1943 0DB3                        l1951 0D1D  
                      l2399 00B1                        l1937 0F99                        l1929 0F93  
                      l1945 0DC7                        l1961 0D2F                        l1953 0D1E  
                      l1939 0F9C                        l1947 0DCC                        l1971 0E84  
                      l1955 0D22                        l1949 0DD2                        l1973 0E8C  
                      l1965 0E73                        l1957 0D26                        l1967 0E74  
                      l1975 0E94                        l1991 0EDB                        l1983 0EA8  
                      l1959 0D28                        l1993 0CCC                        l1969 0E7C  
                      l1985 0EA9                        l1995 0CD2                        l1987 0EAB  
                      l1997 0CBE                        l1989 0ED7                        l1999 0CC4  
         ?_LCD_Write_Nibble 0070                        STR_1 0814                        STR_2 081B  
                      STR_3 0818                        STR_4 0810                        STR_5 0814  
                      STR_6 0818                        STR_7 0810                        STR_8 0814  
                      u2200 0F50                        u3000 03DC                        u2201 0F4C  
                      u3001 03DB                        u3010 03E2                        u3011 03E1  
                      u2220 0F5A                        u3100 04C1                        u3020 03E9  
                      u2221 0F56                        u3101 04C0                        u3021 03E8  
                      u2310 0F90                        u2214 0F53                        u3030 03EF  
                      u3110 05CD                        u2311 0F8C                        u3031 03EE  
                      u3111 05CC                        u2400 0CD2                        u3040 03F7  
                      u3120 05D4                        u3200 006D                        u2305 0F84  
                      u2401 0CD1                        u3041 03F6                        u3121 05D2  
                      u3201 006C                        u2250 0F6C                        u2234 0F5D  
                      u2410 0CD8                        u3050 03FD                        u3130 05D5  
                      u3210 00C7                        u2251 0F68                        u2411 0CD7  
                      u3051 03FC                        u3211 00C6                        u2324 0F93  
                      u2340 0DCC                        u2500 0E4C                        u2420 0CC4  
                      u3060 0405                        u3140 05E6                        u3220 0160  
                      u2245 0F60                        u2341 0DCB                        u2501 0E4B  
                      u2421 0CC3                        u3061 0404                        u3141 05E5  
                      u3221 015F                        u2350 0DD2                        u2510 0E52  
                      u2430 0CCA                        u3070 040B                        u3150 060E  
                      u3230 0169                        u2351 0DD1                        u2335 0DB6  
                      u2511 0E51                        u2431 0CC9                        u3071 040A  
                      u3151 060D                        u3231 0168                        u2280 0F7E  
                      u2264 0F6F                        u2520 0E5C                        u2440 0CE0  
                      u2360 0D22                        u3080 045B                        u3160 0635  
                      u3240 019F                        u2281 0F7A                        u2521 0E5B  
                      u2441 0CDF                        u2361 0D21                        u3081 045A  
                      u3161 0634                        u3241 019E                        u2530 0E62  
                      u2450 0CE6                        u2610 0732                        u2370 0D2F  
                      u3090 04B8                        u3170 065D                        u3250 0209  
                      u2275 0F72                        u2531 0E61                        u2451 0CE5  
                      u2611 0731                        u2371 0D2E                        u3091 04B7  
                      u3171 065C                        u3251 0208                        u3307 0153  
                      u2540 0E6A                        u2460 0CFE                        u3180 0666  
                      u3260 020D                        u2541 0E66                        u2461 0CFD  
                      u2605 0724                        u3181 0665                        u3261 020C  
                      u3317 01FC                        u2294 0F81                        u2470 0D04  
                      u2390 0EEE                        u2630 0743                        u2710 0F1C  
                      u3270 0226                        u3190 0064                        u3407 06AC  
                      u2471 0D03                        u2391 0EED                        u2631 0742  
                      u2711 0F1B                        u3327 024E                        u3271 0224  
                      u3191 0063                        u2480 0E41                        u2720 0F26  
                      u2800 0D9C                        u3280 0227                        u3417 06BB  
                      u2481 0E40                        u2385 0EB9                        u2625 0733  
                      u2721 0F25                        u2705 0F0E                        u2801 0D9B  
                      u3337 0601                        u2554 0E6D                        u2490 0E47  
                      u2650 0757                        u2570 0704                        u2810 0DA2  
                      u3427 06CA                        u2491 0E46                        u2651 0756  
                      u2635 073F                        u2571 0703                        u2811 0DA1  
                      u3347 044E                        u2660 075C                        u2580 070F  
                      u2740 0F39                        u2820 0DA6                        u3437 06D9  
                      u2661 075B                        u2645 074B                        u2581 070E  
                      u2741 0F38                        u2725 0F22                        u2565 0D3A  
                      u2821 0DA5                        u3357 0D6E                        u2910 07C5  
                      u2590 0720                        u2750 0F3E                        u2670 0EF4  
                      u2830 0DAA                        u2911 07C4                        u3447 06E8  
                      u2591 071F                        u2751 0F3D                        u2735 0F2D  
                      u2671 0EF3                        u2831 0DA9                        u3367 0D91  
                      u2920 0E1B                        u2680 0EFF                        u2840 0DB0  
                      u2905 07B7                        u3457 06F7                        u3377 067F  
                      u2681 0EFE                        u2841 0DAF                        u3297 0044  
                      u2850 0778                        u2690 0F0A                        u2770 0D66  
                      u2851 0777                        u3467 0DD6                        u3387 068E  
                      u2691 0F09                        u2771 0D65                        u2940 059D  
                      u2780 0D7D                        u2925 0E16                        u3477 0F9E  
                      u3397 069D                        u2941 059C                        u2765 0D4C  
                      u2781 0D7C                        u2870 078C                        u2790 0D83  
                      u2950 03B9                        _INTF 0059                        u2871 078B  
                      u2935 07E6                        u2791 0D82                        u2951 03B8  
                      u2960 03C3                        u2865 077D                        u2961 03C2  
                      u2890 07A7                        u2970 03C9                        u2891 07A6  
                      u2971 03C8                        u2980 03CF                        _RCEN 048B  
                      u2885 078E                        u2981 03CE                        u2990 03D5  
                      u2895 07A3                        u2991 03D4                        _RSEN 0489  
                      _WPUB 0095          ??_LCD_Write_Nibble 0072                        _edit 03AD  
                      _main 002D                        _hour 0065            __end_of_I2C_Init 0E3A  
          __end_of_I2C_Read 0E70                        _year 0062                        btemp 007E  
          __end_of_I2C_Stop 0CE8                        start 000C                 LCD_Goto@col 004D  
         ___bmul@multiplier 0075                 LCD_Goto@row 0077                       ??_EXT 0070  
    __end_of_decimal_to_bcd 0800            __end_of_LCD_Goto 0EA8            __end_of_LCD_PutC 0D5E  
                     ?_edit 0051                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___awdiv 0766             __end_of___awmod 0F48  
           __end_of___lldiv 07CE             ___awdiv@divisor 0072                       i1l126 0CF0  
           ___awdiv@counter 004D                       _nRBPU 040F                       _blink 0D87  
                     _m_day 0064                       edit@x 0056                       edit@y 0051  
                     _month 0063           __end_of_I2C_Start 0CDA              __pbitbssCOMMON 03D0  
         __end_of_I2C_Write 0D09                       pclath 000A            __end_of_RTC_read 1000  
                     status 0003                       wtemp0 007E        I2C_Init@i2c_clk_freq 0053  
           __initialization 000F                __end_of_edit 04C9                __end_of_main 0256  
           ?_decimal_to_bcd 0070                      ??_edit 0053                      ??_main 005B  
         __end_of_LCD_Begin 06FD                   ??_LCD_Cmd 0074           __end_of_LCD_Print 0EEF  
                    ?_blink 0070            ___awdiv@dividend 0074                      _ANSELH 0189  
                    u100_20 0CEC                      u100_21 0CEB                      i1l1293 0CE8  
                    i1l1295 0CEC                      _OSCCON 008F                      _SSPADD 0093  
                    _TRISD0 0440                      _TRISD1 0441                      _TRISD2 0442  
                    _TRISD3 0443                      _TRISD4 0444                      _TRISD5 0445  
                    _SSPCON 0014                      _SSPBUF 0013            __end_of_debounce 0D87  
                    ___bmul 0D1C                   ??___awdiv 0076                   ??___awmod 0076  
                 ??___lldiv 004D                      _on_off 05C1            ___awdiv@quotient 004F  
                    _minute 0066                      _second 0067                      blink@j 0074  
           ___awmod@divisor 0072             ___awmod@counter 0077          _I2C_Repeated_Start 0CBE  
                 ?_I2C_Init 0053                   ?_I2C_Read 0070                   ?_I2C_Stop 0070  
                    saved_w 007E         ?_I2C_Repeated_Start 0070     __end_of__initialization 0029  
                 ?_LCD_Goto 0077                   ?_LCD_PutC 0070         ___bmul@multiplicand 0072  
      ??_I2C_Repeated_Start 0072              __pcstackCOMMON 0070                __pidataBANK0 0DDC  
             __end_of_blink 0DB1              LCD_Cmd@Command 0076                ?_RTC_display 0070  
                 ?_RTC_read 0070                  ??_I2C_Init 0057                  ??_I2C_Read 0072  
              _alarm_minute 0061                  ??_I2C_Stop 0072                _alarm_status 005E  
                   ??_blink 0072                  __pbssBANK0 005E                  ??_LCD_Goto 0078  
                ??_LCD_PutC 0074                  _alarm_hour 0060                  __pmaintext 002D  
                   ?___bmul 0072                  __pintentry 0004                     ?_on_off 0053  
                ??_RTC_read 0074                     _LCD_Cmd 0DB1                   ?_debounce 0070  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 0800  
         __end_of_alarm_set 05C1                   _I2C_Start 0CCC                   _I2C_Write 0CF7  
          ??_decimal_to_bcd 0051            LCD_PutC@LCD_Char 0075                     ___awdiv 06FD  
                   ___awmod 0EEF                     ___lldiv 0766               edit@parameter 0052  
                   __ptext1 05C1                     __ptext2 0FA2                     __ptext3 0256  
                   __ptext4 03AD                     __ptext5 0D5E                     __ptext6 0D87  
                   __ptext7 0D47                     __ptext8 07CE                     __ptext9 04C9  
          ___awmod@dividend 0074                  ??_debounce 0072                   _LCD_Begin 066A  
             debounce@count 0074                   _LCD_Print 0EA8        end_of_initialization 0029  
                   on_off@x 0058                     on_off@y 0053                  ?_I2C_Start 0070  
                ?_I2C_Write 0070             ___lldiv@divisor 0072             ___lldiv@counter 0052  
         LCD_Write_Nibble@n 0073                  ?_LCD_Begin 0070                  ?_LCD_Print 0074  
                _status_reg 005F            _LCD_Write_Nibble 0F48                  LCD_Print@i 0077  
            __end_of___bmul 0D31              __end_of_on_off 066A         start_initialization 000F  
            _bcd_to_decimal 0D31                 __end_of_EXT 0CF7                 ??_I2C_Start 0072  
               ??_I2C_Write 0072                    ??___bmul 0073                  init_fetch0 0D09  
               __pdataBANK0 0020                    ??_on_off 0055      __end_of_bcd_to_decimal 0D47  
                  ?_LCD_Cmd 0070                 __pbssCOMMON 007B                   ___latbits 0002  
             __pcstackBANK0 004D                 ??_LCD_Begin 0077                 ??_LCD_Print 0076  
                 _alarm_set 04C9               I2C_Read@_data 0073                 I2C_Read@ack 0072  
                  ?___awdiv 0072                    ?___awmod 0072                    ?___lldiv 0072  
          LCD_Print@LCD_Str 0074                   __pstrings 0800             ?_bcd_to_decimal 0070  
                  _I2C_Init 0E09                    _I2C_Read 0E3A                    _I2C_Stop 0CDA  
      bcd_to_decimal@number 0078                   debounce@i 0075        alarm_set@control_reg 0053  
         interrupt_function 0004                    _LCD_Goto 0E70             RTC_display@Date 0020  
                  _LCD_PutC 0D47             RTC_display@Time 0031                  ?_alarm_set 0070  
               __stringbase 080F                    _RTC_read 0FA2    __end_of_LCD_Write_Nibble 0FA2  
             ??_RTC_display 0051          __end_of__stringtab 0810                    _debounce 0D5E  
                  __ptext10 0D31                    __ptext11 0D1C                    __ptext20 0E3A  
                  __ptext12 0EEF                    __ptext21 066A                    __ptext13 06FD  
                  __ptext22 0DB1                    __ptext14 0EA8                    __ptext23 0F48  
                  __ptext15 0E70                    __ptext24 0E09                    __ptext16 0CF7  
                  __ptext25 0766                    __ptext17 0CDA                    __ptext26 0CE8  
                  __ptext18 0CCC                    __ptext19 0CBE                 ??_alarm_set 0051  
      decimal_to_bcd@number 0079              alarm_set@Alarm 0040           I2C_Write@i2c_data 0072  
                  init_ram0 0D0D         __end_of_RTC_display 03AD                    intlevel1 0000  
                  on_off@al 0054            ___lldiv@dividend 0076  __end_of_I2C_Repeated_Start 0CCC  
                 stringcode 080A            ??_bcd_to_decimal 0076            ___lldiv@quotient 004E  
                  stringdir 080A                    stringtab 0800  
